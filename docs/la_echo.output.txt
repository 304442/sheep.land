.
├── docs
│   ├── la_echo.output.txt
│   ├── pb_dev_doc.txt
│   ├── pb_fix_instructions.txt
│   └── setup_fix.txt
├── public
│   ├── admin.html
│   ├── images
│   │   ├── baladi-sheep.jpg
│   │   ├── bank_transfer_icon.svg
│   │   ├── bank_transfer.svg
│   │   ├── barki-sheep.jpg
│   │   ├── cod.svg
│   │   ├── fawry.svg
│   │   ├── hero-sheep-farm.jpg
│   │   ├── hero-sheep-farm1.jpg
│   │   ├── icon-delivery.svg
│   │   ├── icon-easybooking.svg
│   │   ├── icon-premium.svg
│   │   ├── icon-sharia.svg
│   │   ├── instapay.svg
│   │   ├── mastercard.svg
│   │   ├── monzo.svg
│   │   ├── packaging-standard.jpg
│   │   ├── packaging-vacuum-sealed.jpg
│   │   ├── prep-charity-portions.jpg
│   │   ├── prep-custom-ground-mix.jpg
│   │   ├── prep-feast-preparation.jpg
│   │   ├── prep-standard-mixed-cuts.jpg
│   │   ├── revolut.svg
│   │   ├── visa.svg
│   │   ├── vodafone.svg
│   │   └── vodafonecash.png
│   ├── index.html
│   └── setup.html
├── src
│   ├── main.css
│   ├── main.js
│   └── pb.js
└── vendor
    ├── alpine-collapse.min.js
    ├── alpine.min.js
    └── pocketbase.umd.js

6 directories, 38 files

===== public/index.html =====
<!-- Filename: /index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="description" content="Order premium, Sharia-compliant Udheya, Livestock, and Meats online with Sheep Land. Experience quality, convenience, and tradition.">
    <title x-text="pageTitle() + ' - Sheep Land'">Sheep Land</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Noto+Kufi+Arabic:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/src/main.css">
    <style>[x-cloak]{display:none!important}</style>
</head>
<body x-data="udh" x-init="initApp()" x-cloak>

<div x-show="load.init && !apiErr" class="load-ind" aria-live="polite">Loading application data... Please wait.</div>
<div x-show="apiErr" class="err-ind" x-text="usrApiErr || 'An unexpected error occurred. Please try again.'" role="alert" aria-live="assertive" tabindex="-1"></div>

<!-- Cart Sidebar -->
<div x-show="isCartOpen" class="cart-sidebar-overlay" @click="closeCart()" x-transition:enter="transition-opacity ease-linear duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition-opacity ease-linear duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" aria-hidden="true"></div>
<aside x-show="isCartOpen" class="cart-sidebar" x-transition:enter="transition ease-in-out duration-300 transform" x-transition:enter-start="translate-x-full" x-transition:enter-end="translate-x-0" x-transition:leave="transition ease-in-out duration-300 transform" x-transition:leave-start="translate-x-0" x-transition:leave-end="translate-x-full"
        role="dialog" aria-modal="true" aria-labelledby="cart-sidebar-title" @keydown.escape.window="closeCart()">
    <div class="cart-sidebar-header">
        <h2 id="cart-sidebar-title" class="bil-spread modal-title">
            <span class="en">Your Cart</span><span class="ar">سلتك</span>
        </h2>
        <button @click="closeCart()" class="modal-close-btn" aria-label="Close cart">
            <svg viewBox="0 0 24 24" fill="currentColor" width="24" height="24" aria-hidden="true"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
        </button>
    </div>
    <div class="cart-sidebar-content">
        <div x-show="cartItems.length === 0" class="tc cart-empty-msg">
            <p class="bil-row"><span class="en">Your cart is currently empty.</span><span class="ar">سلتك فارغة حاليًا.</span></p>
            <button @click="closeCart(); navigateToOrScroll('udheya')" class="btn bp btn-sm bil-inline" style="margin-top: var(--s1);">
                <span class="en">Start Shopping</span><span class="ar">ابدأ التسوق</span>
            </button>
        </div>
        <div x-show="cartItems.length > 0">
            <template x-for="(cartItem) in cartItems" :key="cartItem.uniqueIdInCart">
                <div class="cart-item bil-row">
                    <div class="cart-item-details">
                        <p class="cart-item-name bil-spread"><span x-text="cartItem.nameENSpec"></span><span x-text="cartItem.nameARSpec"></span></p>
                        <template x-if="cartItem.product_category === 'udheya' && cartItem.udheya_details">
                            <div class="cart-item-udheya-details">
                                <p class="udheya-detail bil-row"><span class="en sm-label">Service:</span><span class="ar sm-label">الخدمة:</span> <span class="en sm-val" x-text="cartItem.udheya_details.serviceOption === 'standard_service' ? 'Standard' : 'Live Animal'"></span><span class="ar sm-val" x-text="cartItem.udheya_details.serviceOption === 'standard_service' ? 'عادية' : 'حيوان حي'"></span></p>
                                <p class="udheya-detail bil-row"><span class="en sm-label">Day:</span><span class="ar sm-label">اليوم:</span> <span class="en sm-val" x-text="getSacrificeDayText(cartItem.udheya_details.sacrificeDay, 'en')"></span><span class="ar sm-val" x-text="getSacrificeDayText(cartItem.udheya_details.sacrificeDay, 'ar')"></span></p>
                            </div>
                        </template>
                        <p class="cart-item-price bil-row"><span class="en" x-text="fmtPrice(cartItem.priceEGP) + ' x ' + cartItem.quantity"></span><span class="ar" x-text="fmtPrice(cartItem.priceEGP) + ' × ' + cartItem.quantity"></span></p>
                    </div>
                    <div class="cart-item-quantity bil-inline">
                        <button type="button" @click="updateCartQuantity(cartItem.uniqueIdInCart, cartItem.quantity - 1)" class="btn btn-sm qty-btn" :disabled="cartItem.quantity <= 1">-</button>
                        <span class="cart-qty-display" x-text="cartItem.quantity"></span>
                        <button type="button" @click="updateCartQuantity(cartItem.uniqueIdInCart, cartItem.quantity + 1)" class="btn btn-sm qty-btn" :disabled="cartItem.quantity >= cartItem.stock || (cartItem.product_category === 'udheya' && cartItem.quantity >=1 )">+</button>
                    </div>
                    <div class="cart-item-subtotal bil-row">
                         <span class="en" x-text="fmtPrice(getSubtotalForItem(cartItem))"></span>
                         <span class="ar" x-text="fmtPrice(getSubtotalForItem(cartItem))"></span>
                    </div>
                    <button @click="removeFromCart(cartItem.uniqueIdInCart)" class="cart-item-remove" :aria-label="'Remove ' + cartItem.nameENSpec + ' from cart'">×</button>
                </div>
            </template>
        </div>
    </div>
    <div class="cart-sidebar-footer" x-show="cartItems.length > 0">
        <div class="cart-total bil-row">
            <span class="en"><strong>Total:</strong> <span x-text="fmtPrice(calculateCartTotal())"></span></span>
            <span class="ar"><strong>الإجمالي:</strong> <span x-text="fmtPrice(calculateCartTotal())"></span></span>
        </div>
        <button type="button" @click="closeCart(); navigateToOrScroll('checkout')" class="btn bac btn-lg btn-block bil-inline" :disabled="cartItems.length === 0">
            <span class="en">Proceed to Checkout</span><span class="ar">المتابعة للدفع</span>
        </button>
    </div>
</aside>

<!-- Refund Policy Modal -->
<div x-show="isRefundModalOpen" class="modal-overlay" @click="closeRefundModal()" x-transition:enter="transition-opacity ease-linear duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition-opacity ease-linear duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" aria-hidden="true"></div>
<div x-show="isRefundModalOpen" class="modal" role="dialog" aria-modal="true" aria-labelledby="refund-modal-title" @keydown.escape.window="closeRefundModal()">
    <div class="modal-header">
        <h2 id="refund-modal-title" class="bil-spread modal-title">
            <span class="en">Refund & Cancellation Policy</span>
            <span class="ar" dir="rtl">سياسة الاسترداد والإلغاء</span>
        </h2>
        <button @click="closeRefundModal()" class="modal-close-btn" aria-label="Close refund policy">
            <svg viewBox="0 0 24 24" fill="currentColor" width="24" height="24" aria-hidden="true"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
        </button>
    </div>
    <div class="modal-content policy-container">
         <div x-html="settings.refundPolicyHTMLContent || '<p>Loading refund policy...</p>'"></div>
    </div>
    <div class="modal-footer">
        <button @click="closeRefundModal()" class="btn bp">Close</button>
    </div>
</div>

<!-- Order Status Modal -->
<div x-show="isOrderStatusModalOpen" class="modal-overlay" @click="closeOrderStatusModal()" x-transition:enter="transition-opacity ease-linear duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition-opacity ease-linear duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" aria-hidden="true"></div>
<div x-show="isOrderStatusModalOpen" class="modal" role="dialog" aria-modal="true" aria-labelledby="order-status-modal-title" @keydown.escape.window="closeOrderStatusModal()">
    <div class="modal-header">
        <h2 id="order-status-modal-title" class="bil-spread modal-title">
            <span class="en">Check Order Status</span><span class="ar">تحقق من حالة الطلب</span>
        </h2>
        <button @click="closeOrderStatusModal()" class="modal-close-btn" aria-label="Close order status">
            <svg viewBox="0 0 24 24" fill="currentColor" width="24" height="24" aria-hidden="true"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
        </button>
    </div>
    <div class="modal-content">
        <form id="chk-stat-form-modal" @submit.prevent="submitStatValid()" novalidate>
            <div class="fg">
                <label for="order_id_lookup_modal" class="bil-spread lbl-req chk-stat-lbl"><span class="en">Enter Order ID *</span><span class="ar">أدخل رقم الطلب *</span></label>
                <input type="text" id="order_id_lookup_modal" class="input chk-stat-input" x-model="lookupOrderID" placeholder="e.g., A1B2C3D4E5" x-ref="lookupOrderIdInputModal" :aria-invalid="errs.lookupOrderID ? 'true' : 'false'" aria-describedby="lookupOrderIdErrModal" @input="clrErr('lookupOrderID')" aria-required="true">
                <div class="err-msg" id="lookupOrderIdErrModal" x-show="errs.lookupOrderID" x-text="errs.lookupOrderID ? (currLang === 'ar' ? errs.lookupOrderID.ar : errs.lookupOrderID.en) : ''" role="alert" aria-live="assertive"></div>
            </div>
            <div class="card-act" style="margin-top: var(--s2);">
                <button type="submit" id="btn-chk-stat-modal" class="btn bp chk-stat-btn bil-inline btn-block" :disabled="load.status">
                    <span x-show="!load.status"><span class="en">Check Status</span><span class="ar">تحقق من الحالة</span></span>
                    <span x-show="load.status" aria-live="polite"><span class="en">Checking...</span><span class="ar">جاري...</span></span>
                </button>
            </div>
        </form>
        <div id="order-stat-res-modal" class="order-stat-res" x-show="load.status || statRes || statNotFound" x-transition style="margin-top: var(--s2);">
            <div x-show="load.status && !statRes && !statNotFound" class="load-text tc" aria-live="polite">Checking...</div>
            <div x-show="statRes && !load.status">
                <h4 class="form-subh bil-spread"><span class="en">Order Details</span><span class="ar">تفاصيل الطلب</span></h4>
                <div id="stat-content-modal">
                    <div class="sum-item bil-row"><div class="en"><strong>ID:</strong> <span x-text="statRes?.orderIdTxt || ''"></span></div><div class="ar"><strong>رقم الطلب:</strong> <span x-text="statRes?.orderIdTxt || ''"></span></div></div>
                    <div class="sum-item bil-row"><div class="en"><strong>Ordered By:</strong> <span x-text="statRes?.customer_name || ''"></span></div><div class="ar"><strong>الطلب باسم:</strong> <span x-text="statRes?.customer_name || ''"></span></div></div>
                    <div class="sum-item bil-row"><div class="en"><strong>Order Status:</strong> <span class="stat-hl" x-text="statRes?.order_status || ''"></span></div><div class="ar"><strong>حالة الطلب:</strong> <span class="stat-hl" x-text="statRes?.order_status || ''"></span></div></div>
                    <div class="sum-item bil-row"><div class="en"><strong>Payment Status:</strong> <span x-text="statRes?.payment_status || ''"></span></div><div class="ar"><strong>حالة الدفع:</strong> <span x-text="statRes?.payment_status || ''"></span></div></div>
                    
                    <template x-if="statRes?.line_items && statRes.line_items.length > 0">
                        <h5 class="bil-spread modal-section-title" style="margin-top:var(--s1);"><span class="en">Items Ordered</span><span class="ar">العناصر المطلوبة</span></h5>
                        <template x-for="item in statRes.line_items" :key="item.item_key_pb + '-status'"> 
                             <div class="sum-item bil-row">
                                <div class="en"><span x-text="item.name_en + (item.quantity > 1 ? ' (x' + item.quantity + ')' : '')"></span></div>
                                <div class="ar"><span x-text="item.name_ar + (item.quantity > 1 ? ' (×' + item.quantity + ')' : '')"></span></div>
                            </div>
                        </template>
                    </template>

                    <div class="sum-item bil-row"><div class="en"><strong>Order Total:</strong> <span x-text="fmtPrice(statRes?.total_amount_due_egp)"></span></div><div class="ar"><strong>إجمالي الطلب:</strong> <span x-text="fmtPrice(statRes?.total_amount_due_egp)"></span></div></div>
                    <div class="sum-item bil-row"><div class="en"><strong>Payment Method:</strong> <span x-text="statRes?.payment_method?.toUpperCase() || ''"></span></div><div class="ar"><strong>طريقة الدفع:</strong> <span x-text="statRes?.payment_method?.toUpperCase() || ''"></span></div></div>
                    <div class="sum-item bil-row" x-show="statRes && statRes.delivery_option === 'home_delivery' && statRes.delivery_address">
                        <div class="en"><strong>Delivery To:</strong> <span x-text="`${statRes?.delivery_address || ''}, ${statRes?.delivery_area_name_en || ''}`"></span></div>
                        <div class="ar"><strong>التوصيل إلى:</strong> <span x-text="`${statRes?.delivery_address || ''}، ${statRes?.delivery_area_name_ar || ''}`"></span></div>
                    </div>
                </div>
            </div>
            <div id="stat-no-res-modal" class="stat-no-res bil-row tc" x-show="statNotFound && !statRes && !load.status"><p class="en">No order found. Check ID or contact support.</p><p class="ar">لم يتم العثور على طلب. تحقق من رقم الطلب أو اتصل بالدعم.</p></div>
        </div>
    </div>
     <div class="modal-footer">
        <button @click="closeOrderStatusModal()" class="btn bp">Close</button>
    </div>
</div>

<!-- Udheya Configuration Modal -->
<div x-show="isUdheyaConfigModalOpen" class="modal-overlay" @click="closeUdheyaConfiguration()" x-transition:enter="transition-opacity ease-linear duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition-opacity ease-linear duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" aria-hidden="true"></div>
<div x-show="isUdheyaConfigModalOpen" class="modal udheya-config-modal" role="dialog" aria-modal="true" aria-labelledby="udheya-config-modal-title" @keydown.escape.window="closeUdheyaConfiguration()">
    <div class="modal-header">
        <h2 id="udheya-config-modal-title" class="bil-spread modal-title">
            <span class="en">Configure Your Udheya</span><span class="ar" dir="rtl">تخصيص الأضحية</span>
        </h2>
        <button @click="closeUdheyaConfiguration()" class="modal-close-btn" aria-label="Close Udheya configuration">
            <svg viewBox="0 0 24 24" fill="currentColor" width="24" height="24" aria-hidden="true"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
        </button>
    </div>
    <div class="modal-content">
        <div x-show="configuringUdheyaItem">
            <h3 class="bil-spread modal-section-title"><span x-text="configuringUdheyaItem?.nameENSpec"></span><span x-text="configuringUdheyaItem?.nameARSpec"></span></h3>
            <div class="fg">
                <label for="udheyaNiyyah" class="bil-spread lbl-req"><span class="en">Niyyah (Intention - Names for whom Udheya is being offered, Optional)</span><span class="ar">النية (أسماء من تهدى لهم الأضحية، اختياري)</span></label>
                <input type="text" id="udheyaNiyyah" class="input" x-model="tempUdheyaConfig.niyyahNames" placeholder="e.g., Self, Family, Late John Doe">
                <div class="bil-row field-note"><p class="f-note en">Please ensure names are clearly written. Max 150 characters.</p><p class="f-note ar">يرجى التأكد من كتابة الأسماء بوضوح. الحد الأقصى ١٥٠ حرفًا.</p></div>
            </div>
            <div class="fg">
                <label class="bil-spread lbl-req" id="udheyaServOptLabel"><span class="en">Service Option *</span><span class="ar">خيار الخدمة *</span></label>
                <div class="rgrp" role="radiogroup" aria-labelledby="udheyaServOptLabel">
                    <label class="bil-spread"><input type="radio" name="service_option_udh_conf" value="standard_service" x-model="tempUdheyaConfig.serviceOption" @change="clrErr('udheya_service_config')"><span class="en">Standard Service (Slaughter, Butchering, Packaging) - <strong x-text="fmtPrice(settings.servFeeEGP)"></strong></span><span class="ar">خدمة عادية (ذبح، تقطيع، تغليف) - <strong x-text="fmtPrice(settings.servFeeEGP)"></strong></span></label>
                    <label class="bil-spread"><input type="radio" name="service_option_udh_conf" value="live_animal_delivery" x-model="tempUdheyaConfig.serviceOption" @change="clrErr('udheya_service_config')"><span class="en">Live Animal Delivery (No service fee)</span><span class="ar">توصيل حيوان حي (بدون رسوم خدمة)</span></label>
                </div>
                <div class="err-msg" x-show="errs.udheya_service_config" x-text="getUdheyaConfigErrorText()"></div>
            </div>
            <div class="fg" x-show="tempUdheyaConfig.serviceOption === 'standard_service'">
                <label for="sacrificeDaySel" class="bil-spread lbl-req"><span class="en">Sacrifice Day *</span><span class="ar">يوم الذبح *</span></label>
                <select id="sacrificeDaySel" class="input" x-model="tempUdheyaConfig.sacrificeDay" @change="clrErr('udheya_sacrifice_day_config')" :aria-invalid="errs.udheya_sacrifice_day_config ? 'true' : 'false'" :aria-required="tempUdheyaConfig.serviceOption === 'standard_service'">
                    <option value="">-- Select Day -- / -- اختر اليوم --</option>
                    <template x-for="(dayInfo, dayValue) in sacrificeDayMapInternal" :key="dayValue + '-conf'">
                        <option :value="dayValue"><span x-text="dayInfo.en"></span> / <span x-text="dayInfo.ar"></span></option>
                    </template>
                </select>
                <div class="err-msg" x-show="errs.udheya_sacrifice_day_config" x-text="getUdheyaConfigErrorText()"></div>
            </div>
             <div class="fg" x-show="tempUdheyaConfig.serviceOption === 'standard_service'">
                <label for="viewingPrefSel" class="bil-spread lbl-req"><span class="en">Slaughter Viewing Preference (Optional)</span><span class="ar">تفضيل مشاهدة الذبح (اختياري)</span></label>
                <select id="viewingPrefSel" class="input" x-model="tempUdheyaConfig.viewingPreference">
                     <template x-for="opt in slViewOpts()" :key="opt.val + '-view-conf'">
                        <option :value="opt.val"><span x-text="opt.txtEn"></span> / <span x-text="opt.txtAr"></span></option>
                    </template>
                </select>
                <div class="bil-row field-note" x-show="settings.slaughter_location_gmaps_url && (tempUdheyaConfig.viewingPreference === 'physical_inquiry' || tempUdheyaConfig.viewingPreference === 'live_video_inquiry')"><p class="f-note en">Our facility is at: <a :href="settings.slaughter_location_gmaps_url" target="_blank" class="gmaps-link">View Map</a>. We'll contact you for arrangements.</p><p class="f-note ar">موقعنا: <a :href="settings.slaughter_location_gmaps_url" target="_blank" class="gmaps-link">عرض الخريطة</a>. سنتواصل لترتيب الحضور.</p></div>
            </div>
            <div class="fg">
                <label class="bil-spread lbl-req" id="udheyaDistroLabel"><span class="en">Distribution Choice *</span><span class="ar">خيار التوزيع *</span></label>
                <div class="rgrp" role="radiogroup" aria-labelledby="udheyaDistroLabel">
                    <template x-for="opt in distrOpts()" :key="opt.val + '-distro-conf'">
                        <label class="bil-spread"><input type="radio" name="distribution_choice_udh_conf" :value="opt.val" x-model="tempUdheyaConfig.distribution.choice" @change="clrErr('udheya_distribution_choice_config'); tempUdheyaConfig.distribution.splitOption = ''; tempUdheyaConfig.distribution.customSplitText = '';"><span x-text="opt.txtEn"></span><span x-text="opt.txtAr"></span></label>
                    </template>
                </div>
                <div class="err-msg" x-show="errs.udheya_distribution_choice_config" x-text="getUdheyaConfigErrorText()"></div>
            </div>
            <div class="fg" x-show="tempUdheyaConfig.distribution.choice === 'split'">
                <label class="bil-spread lbl-req" id="udheyaSplitLabel"><span class="en">Split Option *</span><span class="ar">خيار التقسيم *</span></label>
                <div class="rgrp" role="radiogroup" aria-labelledby="udheyaSplitLabel">
                    <template x-for="opt in splitOptsList()" :key="opt.val + '-split-conf'">
                         <label class="bil-spread"><input type="radio" name="split_option_udh_conf" :value="opt.val" x-model="tempUdheyaConfig.distribution.splitOption" @change="clrErr('udheya_split_option_config')"><span x-text="opt.txtEn"></span><span x-text="opt.txtAr"></span></label>
                    </template>
                </div>
                <textarea x-show="tempUdheyaConfig.distribution.splitOption === 'custom'" class="input custom-split-ta" rows="2" x-model="tempUdheyaConfig.distribution.customSplitText" placeholder="e.g., 1/4 for me, 3/4 for specific charity (provide details)" :aria-required="tempUdheyaConfig.distribution.splitOption === 'custom'" @input="clrErr('udheya_split_option_config')"></textarea>
                <div class="err-msg" x-show="errs.udheya_split_option_config" x-text="getUdheyaConfigErrorText()"></div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" @click="closeUdheyaConfiguration()" class="btn bp-alt"><span class="en">Cancel</span><span class="ar">إلغاء</span></button>
        <button type="button" @click="confirmUdheyaConfigurationAndProceed()" class="btn bac" :disabled="load.addingToCart === tempUdheyaConfig.itemKey || load.configuringUdheya === tempUdheyaConfig.itemKey">
            <span x-show="load.addingToCart !== tempUdheyaConfig.itemKey && load.configuringUdheya !== tempUdheyaConfig.itemKey">
                <span class="en" x-text="tempUdheyaConfig.isBuyNowIntent ? 'Confirm & Buy Now' : 'Confirm & Add to Cart'"></span>
                <span class="ar" x-text="tempUdheyaConfig.isBuyNowIntent ? 'تأكيد والشراء الآن' : 'تأكيد والإضافة للسلة'"></span>
            </span>
            <span x-show="(load.addingToCart === tempUdheyaConfig.itemKey && !tempUdheyaConfig.isBuyNowIntent) || (load.configuringUdheya === tempUdheyaConfig.itemKey && !tempUdheyaConfig.isBuyNowIntent)" aria-live="polite"><span class="en">Adding...</span><span class="ar">جاري الإضافة...</span></span>
            <span x-show="(load.addingToCart === tempUdheyaConfig.itemKey && tempUdheyaConfig.isBuyNowIntent) || (load.configuringUdheya === tempUdheyaConfig.itemKey && tempUdheyaConfig.isBuyNowIntent)" aria-live="polite"><span class="en">Processing...</span><span class="ar">جاري المعالجة...</span></span>
        </button>
    </div>
</div>


<header class="site-head">
    <div class="c nav-cont">
        <a href="#home" class="logo bil-inline" @click.prevent="isMobNavOpen = false; navigateToOrScroll('home')">
            <span class="en">Sheep Land</span><span class="ar">أرض الأغنام</span>
        </a>
        <nav class="nav-main nav-desk" aria-label="Main navigation">
            <ul class="nav-list">
                <template x-if="settings.enable_udheya_section">
                    <li>
                        <a href="#udheya" class="nav-link bil-inline" :class="{'active-nav': currentPage === 'udheya'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('udheya')">
                            <span class="en">Udheya</span><span class="ar">الأضحية</span>
                        </a>
                    </li>
                </template>
                <template x-if="settings.enable_livestock_section">
                    <li><a href="#livestock" class="nav-link bil-inline" :class="{'active-nav': currentPage === 'livestock'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('livestock')"><span class="en">Livestock</span><span class="ar">الأغنام</span></a></li>
                </template>
                <template x-if="settings.enable_meat_section">
                    <li><a href="#meat" class="nav-link bil-inline" :class="{'active-nav': currentPage === 'meat'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('meat')"><span class="en">Meat</span><span class="ar">اللحوم</span></a></li>
                </template>
                <template x-if="settings.enable_gatherings_section">
                    <li><a href="#gatherings" class="nav-link bil-inline" :class="{'active-nav': currentPage === 'gatherings'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('gatherings')"><span class="en">Gatherings</span><span class="ar">الولائم</span></a></li>
                </template>
                 <li>
                    <button @click="openOrderStatusModal()" class="nav-link as-button" title="Order Status" aria-label="Order Status">
                        <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20" aria-hidden="true"><path d="M19.5 3.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2v14H3v3c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-3h-3V2zM15 20H9v-2h6v2zm0-4H9v-2h6v2zm-4.5-4L9 10.5l1.5-1.5L12 10.5l1.5-1.5L15 10.5V5h1.5v15H18V5h1.5v15H21V2l-1.5 1.5z"/></svg>
                    </button>
                </li>
                <template x-if="!currentUser">
                    <li>
                        <button @click="isMobNavOpen = false; navigateToOrScroll('auth')" class="nav-link as-button" :class="{'active-nav': currentPage === 'auth'}" title="Login or Register" aria-label="Login or Register">
                            <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20" aria-hidden="true">
                                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                            </svg>
                            <span class="sr-only bil-inline"><span class="en">Login/Register</span><span class="ar">دخول/تسجيل</span></span>
                        </button>
                    </li>
                </template>
                <template x-if="currentUser">
                    <li><a href="#account" class="nav-link bil-inline" :class="{'active-nav': currentPage === 'account'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('account')"><span class="en">My Account</span><span class="ar">حسابي</span></a></li>
                    <li><button @click="logoutUser()" class="nav-link bil-inline as-button"><span class="en">Logout</span><span class="ar">خروج</span></button></li>
                </template>
                 <li>
                    <button @click="openCart()" class="nav-link as-button" title="Shopping Cart" aria-label="Shopping Cart">
                        <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20" aria-hidden="true"><path d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2S15.9 22 17 22s2-.9 2-2-.9-2-2-2zm-1.45-5c.75 0 1.41-.41 1.75-1.03l3.58-6.49A.996.996 0 0020.01 4H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6z"/></svg>
                        <span x-show="cartItems.length > 0" class="cart-count-badge" x-text="cartItemCount"></span>
                    </button>
                </li>
            </ul>
        </nav>
        <div class="head-extras desk-extras">
            <div class="curr-sel">
                <label for="curr-sel-desk" class="sr-only">Select Currency</label>
                <select id="curr-sel-desk" x-model="curr" aria-label="Select Currency">
                    <template x-for="code in Object.keys(settings.xchgRates)" :key="code">
                        <option :value="code" x-text="code" :disabled="!settings.xchgRates[code].is_active"></option>
                    </template>
                </select>
            </div>
            <div class="wa-contact">
                <a :href="'https://wa.me/' + settings.waNumRaw" target="_blank" rel="noopener noreferrer" title="Chat on WhatsApp">
                    <svg class="wa-icon" aria-hidden="true" focusable="false" viewBox="0 0 24 24" fill="currentColor"><path d="M12.04 2C6.58 2 2.13 6.45 2.13 11.91C2.13 13.66 2.59 15.35 3.43 16.84L2.05 22l5.26-1.39c1.44.75 3.05 1.18 4.73 1.18 5.46 0 9.91-4.45 9.91-9.91S17.5 2 12.04 2zm0 18.13c-1.48 0-2.91-.38-4.15-1.08l-.34-.2-3.14.83.85-3.05-.22-.35A8.04 8.04 0 0 1 3.79 11.91c0-4.41 3.72-8.13 8.25-8.13s8.25 3.72 8.25 8.13-3.72 8.13-8.25 8.13zm5.32-5.68c-.25-.13-1.55-.76-1.79-.85s-.42-.13-.6.12c-.17.25-.67.85-.82 1.02s-.3.18-.55.06c-.25-.12-1.11-.41-2.15-1.33S10.08 13 9.91 12.74s.13-.24.26-.37c.11-.11.25-.29.39-.46s.05-.11.18-.36c.13-.25.08-.43 0-.55s-.56-1.39-.79-1.94c-.23-.55-.45-.49-.62-.49h-.17c-.16 0-.42.05-.64.3s-.85.82-.85 2.02S8.11 13.5 8.24 13.67s1.47 2.28 3.74 3.2c.5.25.93.4 1.26.51.52.15.94.12 1.27.07.38-.06 1.07-.44 1.27-.81.2-.38.2-.7.15-.82s-.15-.07-.4-.18z"/></svg>
                    <span class="wa-num" x-text="settings.waNumDisp"></span>
                </a>
            </div>
        </div>
        <button class="menu-btn" @click="isMobNavOpen = !isMobNavOpen" aria-label="Toggle menu" :aria-expanded="isMobNavOpen.toString()" aria-controls="mob-nav-content">
            <svg aria-hidden="true" focusable="false" viewBox="0 0 24 24" fill="currentColor" width="28" height="28">
                <path x-show="!isMobNavOpen" d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path>
                <path x-show="isMobNavOpen" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path>
            </svg>
        </button>
    </div>
    <div class="mob-nav" id="mob-nav-content" x-show="isMobNavOpen" x-transition @click.outside="isMobNavOpen = false">
        <nav aria-label="Mobile navigation">
            <ul class="nav-list-mob">
                <template x-if="settings.enable_udheya_section">
                    <li>
                        <a href="#udheya" class="nav-link-mob bil-inline" :class="{'active-nav': currentPage === 'udheya'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('udheya')">
                            <span class="en">Udheya</span><span class="ar">الأضحية</span>
                        </a>
                    </li>
                </template>
                <template x-if="settings.enable_livestock_section">
                <li>
                    <a href="#livestock" class="nav-link-mob bil-inline" :class="{'active-nav': currentPage === 'livestock'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('livestock')">
                        <span class="en">Livestock</span><span class="ar">الأغنام</span>
                    </a>
                </li>
                </template>
                <template x-if="settings.enable_meat_section">
                <li>
                    <a href="#meat" class="nav-link-mob bil-inline" :class="{'active-nav': currentPage === 'meat'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('meat')">
                        <span class="en">Meat</span><span class="ar">اللحوم</span>
                    </a>
                </li>
                </template>
                <template x-if="settings.enable_gatherings_section">
                <li>
                    <a href="#gatherings" class="nav-link-mob bil-inline" :class="{'active-nav': currentPage === 'gatherings'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('gatherings')">
                        <span class="en">Gatherings</span><span class="ar">الولائم</span>
                    </a>
                </li>
                </template>
                <li>
                    <button @click="openOrderStatusModal(); isMobNavOpen = false;" class="nav-link-mob as-button" title="Order Status" aria-label="Order Status">
                        <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20" aria-hidden="true"><path d="M19.5 3.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2v14H3v3c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-3h-3V2zM15 20H9v-2h6v2zm0-4H9v-2h6v2zm-4.5-4L9 10.5l1.5-1.5L12 10.5l1.5-1.5L15 10.5V5h1.5v15H18V5h1.5v15H21V2l-1.5 1.5z"/></svg>
                         <span class="bil-inline"><span class="en">Order Status</span><span class="ar">حالة الطلب</span></span>
                    </button>
                </li>
                 <template x-if="!currentUser">
                    <li>
                        <button @click="isMobNavOpen = false; navigateToOrScroll('auth')" class="nav-link-mob as-button" :class="{'active-nav': currentPage === 'auth'}" title="Login or Register" aria-label="Login or Register">
                            <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20" aria-hidden="true">
                                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                            </svg>
                             <span class="bil-inline"><span class="en">Login/Register</span><span class="ar">دخول/تسجيل</span></span>
                        </button>
                    </li>
                </template>
                <template x-if="currentUser">
                    <li><a href="#account" class="nav-link-mob bil-inline" :class="{'active-nav': currentPage === 'account'}" @click.prevent="isMobNavOpen = false; navigateToOrScroll('account')"><span class="en">My Account</span><span class="ar">حسابي</span></a></li>
                    <li><button @click="logoutUser(); isMobNavOpen = false;" class="nav-link-mob bil-inline as-button"><span class="en">Logout</span><span class="ar">خروج</span></button></li>
                </template>
                <li>
                    <button @click="openCart(); isMobNavOpen = false;" class="nav-link-mob as-button" title="Shopping Cart" aria-label="Shopping Cart">
                        <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20" aria-hidden="true"><path d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2S15.9 22 17 22s2-.9 2-2-.9-2-2-2zm-1.45-5c.75 0 1.41-.41 1.75-1.03l3.58-6.49A.996.996 0 0020.01 4H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6z"/></svg>
                        <span x-show="cartItems.length > 0" class="cart-count-badge" x-text="cartItemCount"></span>
                         <span class="bil-inline"><span class="en">Cart</span><span class="ar">السلة</span></span>
                    </button>
                </li>
            </ul>
        </nav>
        <div class="mob-extras">
            <div class="curr-sel">
                <label for="curr-sel-mob" class="sr-only">Select Currency</label>
                <select id="curr-sel-mob" x-model="curr" aria-label="Select Currency Mobile">
                     <template x-for="code in Object.keys(settings.xchgRates)" :key="code">
                        <option :value="code" x-text="code" :disabled="!settings.xchgRates[code].is_active"></option>
                    </template>
                </select>
            </div>
            <div class="wa-contact">
                 <a :href="'https://wa.me/' + settings.waNumRaw" target="_blank" rel="noopener noreferrer" title="Chat on WhatsApp" @click="isMobNavOpen = false">
                    <svg class="wa-icon" aria-hidden="true" focusable="false" viewBox="0 0 24 24" fill="currentColor"><path d="M12.04 2C6.58 2 2.13 6.45 2.13 11.91C2.13 13.66 2.59 15.35 3.43 16.84L2.05 22l5.26-1.39c1.44.75 3.05 1.18 4.73 1.18 5.46 0 9.91-4.45 9.91-9.91S17.5 2 12.04 2zm0 18.13c-1.48 0-2.91-.38-4.15-1.08l-.34-.2-3.14.83.85-3.05-.22-.35A8.04 8.04 0 0 1 3.79 11.91c0-4.41 3.72-8.13 8.25-8.13s8.25 3.72 8.25 8.13-3.72 8.13-8.25 8.13zm5.32-5.68c-.25-.13-1.55-.76-1.79-.85s-.42-.13-.6.12c-.17.25-.67.85-.82 1.02s-.3.18-.55.06c-.25-.12-1.11-.41-2.15-1.33S10.08 13 9.91 12.74s.13-.24.26-.37c.11-.11.25-.29.39-.46s.05-.11.18-.36c.13-.25.08-.43 0-.55s-.56-1.39-.79-1.94c-.23-.55-.45-.49-.62-.49h-.17c-.16 0-.42.05-.64.3s-.85.82-.85 2.02S8.11 13.5 8.24 13.67s1.47 2.28 3.74 3.2c.5.25.93.4 1.26.51.52.15.94.12 1.27.07.38-.06 1.07-.44 1.27-.81.2-.38.2-.7.15-.82s-.15-.07-.4-.18z"/></svg>
                    <span class="wa-num" x-text="settings.waNumDisp"></span>
                </a>
            </div>
        </div>
    </div>
</header>

<main>
    <!-- Home Section -->
    <section id="home-sect" class="hero main-page-sec" x-show="currentPage === 'home'" style="background-color: var(--b2); padding-top: 0; padding-bottom: 0;" x-transition>
        <div class="c tc">
            <h1 class="bil-spread hero-h"><span class="en">Premium Udheya & Livestock</span><span class="ar">أضاحي ومواشي فاخرة</span></h1>
            <div class="hero-desc bil-row"><p class="en">Experience the tradition of Udheya with ease and quality. Farm-fresh, Sharia-compliant livestock and meats delivered to your doorstep.</p><p class="ar">عش تجربة الأضحية التقليدية بسهولة وجودة. مواشي ولحوم طازجة من المزرعة، متوافقة مع الشريعة، تصلك حتى باب منزلك.</p></div>
            <button @click="navigateToOrScroll('udheya')" class="btn bac btn-lg bil-inline hero-cta"><span class="en">Explore Udheya Options</span><span class="ar">تصفح خيارات الأضاحي</span></button>
            
            <template x-if="settings.promoActive && !cd.ended">
            <div class="hero-promo">
                <a href="#udheya" @click.prevent="navigateToOrScroll('udheya')" class="hero-promo-link">
                    <div class="pban">
                        <div class="pban-text">
                            <h3 class="prm-h bil-row">
                                <span class="en" x-html="`🎉 Special Offer: <strong>${settings.promoDiscPc}% OFF</strong> Udheya! Ends in:`"></span>
                                <span class="ar" x-html="`🎉 عرض خاص: <strong>خصم ${settings.promoDiscPc}%</strong> على الأضاحي! ينتهي خلال:`"></span>
                            </h3>
                        </div>
                        <div class="cd-wrap">
                            <div class="cd">
                                <div class="cd-seg"><span class="cd-val" x-text="cd.days"></span><span class="cd-lbl">Days</span></div><span class="cd-sep">:</span>
                                <div class="cd-seg"><span class="cd-val" x-text="cd.hours"></span><span class="cd-lbl">Hrs</span></div><span class="cd-sep">:</span>
                                <div class="cd-seg"><span class="cd-val" x-text="cd.mins"></span><span class="cd-lbl">Min</span></div><span class="cd-sep">:</span>
                                <div class="cd-seg"><span class="cd-val" x-text="cd.secs"></span><span class="cd-lbl">Sec</span></div>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            </template>
        </div>
    </section>

    <!-- Udheya Section -->
    <section id="udheya-sect" class="main-page-sec sec order-sect" x-show="currentPage === 'udheya' && settings.enable_udheya_section" x-transition>
        <div class="c">
            <div class="sec-head order-sect-h">
                <h1 class="bil-spread" tabindex="-1"><span class="en">Order Your Udheya</span><span class="ar">اطلب أضحيتك</span></h1>
            </div>
            <p class="bil-row section-intro">
                <span class="en">Select your preferred Udheya from our high-quality, Sharia-compliant livestock. Configure your sacrifice options easily.</span>
                <span class="ar">اختر أضحيتك المفضلة من مواشينا عالية الجودة والمتوافقة مع الشريعة. قم بتخصيص خيارات الأضحية بسهولة.</span>
            </p>
            <div x-show="prodOpts.udheya && prodOpts.udheya.length > 0" class="prod-grid grid2">
                <template x-for="productType in prodOpts.udheya" :key="productType.valKey + '-udh'">
                    <template x-for="item in productType.wps" :key="item.itemKey + '-udh-item'">
                        <div class="card card-live">
                            <div class="card-img">
                                <img :src="'images/' + productType.valKey + '-sheep.jpg'" :alt="productType.nameEn  + ' - ' + item.nameENSpec" loading="lazy">
                                <div class="badge udheya-badge bil-inline"><span class="en">UDHEYA</span><span class="ar">أضحية</span></div>
                            </div>
                            <div class="card-b">
                                <div class="card-content">
                                    <h3 class="card-h bil-spread"><span x-text="item.nameENSpec"></span><span x-text="item.nameARSpec"></span></h3>
                                    <div class="bil-row card-p-row">
                                        <p class="en card-p" x-text="item.descEn || productType.descEn"></p>
                                        <p class="ar card-p" x-text="item.descAr || productType.descAr"></p>
                                    </div>
                                </div>
                                <div class="card-foot">
                                    <div class="price bil-row">
                                        <span class="en"><strong x-text="fmtPrice(item.priceEGP)"></strong></span>
                                        <span class="ar"><strong x-text="fmtPrice(item.priceEGP)"></strong></span>
                                    </div>
                                    <div class="card-act">
                                        <button type="button" @click="openUdheyaConfiguration(item, false)" class="btn bac btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.configuringUdheya === item.itemKey">
                                            <span x-show="load.configuringUdheya !== item.itemKey"><span class="en">Configure & Add</span><span class="ar">خصص وأضف</span></span>
                                            <span x-show="load.configuringUdheya === item.itemKey && !tempUdheyaConfig.isBuyNowIntent" aria-live="polite"><span class="en">Configuring...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <button type="button" @click="openUdheyaConfiguration(item, true)" class="btn bp btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.configuringUdheya === item.itemKey">
                                            <span x-show="load.configuringUdheya !== item.itemKey"><span class="en">Configure & Buy Now</span><span class="ar">خصص واشتر الآن</span></span>
                                            <span x-show="load.configuringUdheya === item.itemKey && tempUdheyaConfig.isBuyNowIntent" aria-live="polite"><span class="en">Processing...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <span class="stock-display bil-inline" :class="{'out-of-stock': !item.isActive || item.stock <= 0}">
                                            <span class="en" x-text="getStockDisplayInfo(item.stock, item.isActive, 'en')"></span>
                                            <span class="ar" x-text="getStockDisplayInfo(item.stock, item.isActive, 'ar')"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </template>
                </template>
            </div>
            <div class="empty-state tc" x-show="(!prodOpts.udheya || prodOpts.udheya.length === 0) && !load.init">
                <p class="bil-row">
                    <span class="en" style="flex-basis: 100%;">Our Udheya offerings are currently being updated, or the season has passed. Please check back or contact us for inquiries!</span>
                    <span class="ar" style="flex-basis: 100%;">يتم تحديث عروض الأضاحي لدينا حاليًا، أو قد انتهى الموسم. يرجى التحقق مرة أخرى أو الاتصال بنا للاستفسارات!</span>
                </p>
                <button @click="navigateToOrScroll('home')" class="btn bp btn-sm bil-inline" style="margin-top: var(--s1);">
                    <span class="en">Back to Home</span><span class="ar">العودة للرئيسية</span>
                </button>
            </div>
            <p class="f-note bil-row tc" x-show="addedToCartMsg.text && addedToCartMsg.pageContext === 'udheya'" :class="addedToCartMsg.isError ? 'err-msg' : 'succ-msg'" style="margin-top:var(--s2); justify-content: center;">
                <span class="en" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].en : (addedToCartMsg.text.en || addedToCartMsg.text) ) : (addedToCartMsg.text.en || addedToCartMsg.text)"></span>
                <span class="ar" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].ar : (addedToCartMsg.text.ar || addedToCartMsg.text) ) : (addedToCartMsg.text.ar || addedToCartMsg.text)"></span>
            </p>
        </div>
    </section>

    <!-- Livestock Section -->
    <section id="live-sect" class="main-page-sec sec" style="background-color: var(--b2);" x-show="currentPage === 'livestock' && settings.enable_livestock_section" x-transition>
        <div class="c">
            <div class="sec-head">
                <h1 class="bil-spread" tabindex="-1">
                    <span class="en">Our Livestock</span><span class="ar">أغنامنا (المواشي العامة)</span>
                </h1>
            </div>
            <p class="bil-row section-intro">
                <span class="en">Explore our selection of high-quality livestock, available for various purposes such as breeding, Aqeeqah, or general consumption. Each animal is raised with care to ensure health and vitality.</span>
                <span class="ar">تصفح مجموعتنا المختارة من المواشي عالية الجودة، المتاحة لأغراض متنوعة مثل التربية، العقيقة، أو الاستهلاك العام. يتم تربية كل حيوان بعناية لضمان صحته وحيويته.</span>
            </p>
            <div x-show="prodOpts.livestock_general && prodOpts.livestock_general.length > 0" class="prod-grid grid2">
                <template x-for="productType in prodOpts.livestock_general" :key="productType.valKey + '-ls'">
                    <template x-for="item in productType.wps" :key="item.itemKey + '-ls-item'">
                        <div class="card card-live">
                            <div class="card-img">
                                <img :src="'images/' + productType.valKey + '-sheep.jpg'" :alt="productType.nameEn  + ' - ' + item.nameENSpec"  loading="lazy">
                                <div class="badge bil-inline"><span class="en" x-text="productType.valKey.toUpperCase().replace('_', ' ')"></span><span class="ar" x-text="productType.nameAr.split(' ')[0]"></span></div>
                            </div>
                            <div class="card-b">
                                <div class="card-content">
                                    <h3 class="card-h bil-spread"><span x-text="item.nameENSpec"></span><span x-text="item.nameARSpec"></span></h3>
                                    <div class="bil-row card-p-row">
                                        <p class="en card-p" x-text="item.descEn || productType.descEn"></p>
                                        <p class="ar card-p" x-text="item.descAr || productType.descAr"></p>
                                    </div>
                                </div>
                                <div class="card-foot">
                                    <div class="price bil-row">
                                        <span class="en"><strong x-text="fmtPrice(item.priceEGP)"></strong></span>
                                        <span class="ar"><strong x-text="fmtPrice(item.priceEGP)"></strong></span>
                                    </div>
                                    <div class="card-act">
                                        <button type="button" @click="addItemToCart(item)" class="btn bac btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.addingToCart === item.itemKey">
                                            <span x-show="load.addingToCart !== item.itemKey"><span class="en">Add to Cart</span><span class="ar">أضف للسلة</span></span>
                                            <span x-show="load.addingToCart === item.itemKey && !tempUdheyaConfig.isBuyNowIntent" aria-live="polite"><span class="en">Adding...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <button type="button" @click="buyNow(item)" class="btn bp btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.addingToCart === item.itemKey">
                                            <span x-show="load.addingToCart !== item.itemKey"><span class="en">Buy Now</span><span class="ar">اشتر الآن</span></span>
                                            <span x-show="load.addingToCart === item.itemKey && tempUdheyaConfig.isBuyNowIntent" aria-live="polite"><span class="en">Processing...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <span class="stock-display bil-inline" :class="{'out-of-stock': !item.isActive || item.stock <= 0}">
                                            <span class="en" x-text="getStockDisplayInfo(item.stock, item.isActive, 'en')"></span>
                                            <span class="ar" x-text="getStockDisplayInfo(item.stock, item.isActive, 'ar')"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </template>
                </template>
            </div>
             <div class="empty-state tc" x-show="(!prodOpts.livestock_general || prodOpts.livestock_general.length === 0) && !load.init">
                <p class="bil-row">
                    <span class="en" style="flex-basis: 100%;">Our livestock offerings are currently being updated. Please check back soon for the latest availability!</span>
                    <span class="ar" style="flex-basis: 100%;">يتم تحديث عروض المواشي لدينا حاليًا. يرجى التحقق مرة أخرى قريبًا لمعرفة أحدث المتوفر!</span>
                </p>
                <button @click="navigateToOrScroll('home')" class="btn bp btn-sm bil-inline" style="margin-top: var(--s1);">
                    <span class="en">Back to Home</span><span class="ar">العودة للرئيسية</span>
                </button>
            </div>
            <p class="f-note bil-row tc" x-show="addedToCartMsg.text && addedToCartMsg.pageContext === 'livestock'" :class="addedToCartMsg.isError ? 'err-msg' : 'succ-msg'" style="margin-top:var(--s2); justify-content: center;">
                <span class="en" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].en : (addedToCartMsg.text.en || addedToCartMsg.text) ) : (addedToCartMsg.text.en || addedToCartMsg.text)"></span>
                <span class="ar" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].ar : (addedToCartMsg.text.ar || addedToCartMsg.text) ) : (addedToCartMsg.text.ar || addedToCartMsg.text)"></span>
            </p>
        </div>
    </section>

    <!-- Meat Section -->
    <section id="meat-sect" class="main-page-sec sec" x-show="currentPage === 'meat' && settings.enable_meat_section" x-transition>
        <div class="c">
            <div class="sec-head">
                <h1 class="bil-spread" tabindex="-1">
                    <span class="en">Fresh Meat Cuts</span><span class="ar">قطعيات اللحوم الطازجة</span>
                </h1>
            </div>
            <p class="bil-row section-intro">
                <span class="en">Choose from our selection of fresh, high-quality meat cuts, expertly prepared from our farm-raised livestock. Perfect for your daily meals and special occasions.</span>
                <span class="ar">اختر من مجموعتنا المختارة من قطعيات اللحوم الطازجة عالية الجودة، والمعدة بخبرة من مواشينا المرباة في المزرعة. مثالية لوجباتك اليومية ومناسباتك الخاصة.</span>
            </p>
            <div x-show="prodOpts.meat_cuts && prodOpts.meat_cuts.length > 0" class="prod-grid grid2">
                 <template x-for="productType in prodOpts.meat_cuts" :key="productType.valKey + '-mc'">
                    <template x-for="item in productType.wps" :key="item.itemKey + '-mc-item'">
                        <div class="card card-live">
                            <div class="card-img">
                                <img :src="'images/' + (productType.valKey.includes('lamb') ? 'lamb' : (productType.valKey.includes('beef') ? 'beef' : productType.valKey)) + '-cuts.jpg'" :alt="item.nameENSpec" loading="lazy">
                                <div class="badge bil-inline"><span class="en">MEAT</span><span class="ar">لحوم</span></div>
                            </div>
                            <div class="card-b">
                                <div class="card-content">
                                    <h3 class="card-h bil-spread"><span x-text="item.nameENSpec"></span><span x-text="item.nameARSpec"></span></h3>
                                    <div class="bil-row card-p-row">
                                        <p class="en card-p" x-text="item.descEn || productType.descEn"></p>
                                        <p class="ar card-p" x-text="item.descAr || productType.descAr"></p>
                                    </div>
                                </div>
                                <div class="card-foot">
                                    <div class="price bil-row">
                                        <span class="en"><strong x-text="fmtPrice(item.priceEGP) + (item.wtRangeEn && item.wtRangeEn.toLowerCase().includes('kg') && !item.wtRangeEn.toLowerCase().includes('per') ? '/kg' : '')"></strong></span>
                                        <span class="ar"><strong x-text="fmtPrice(item.priceEGP) + (item.wtRangeAr && item.wtRangeAr.toLowerCase().includes('كجم') && !item.wtRangeAr.toLowerCase().includes('لكل') ? '/كجم' : '')"></strong></span>
                                    </div>
                                     <div class="card-act">
                                        <button type="button" @click="addItemToCart(item)" class="btn bac btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.addingToCart === item.itemKey">
                                            <span x-show="load.addingToCart !== item.itemKey || tempUdheyaConfig.isBuyNowIntent"><span class="en">Add to Cart</span><span class="ar">أضف للسلة</span></span>
                                            <span x-show="load.addingToCart === item.itemKey && !tempUdheyaConfig.isBuyNowIntent" aria-live="polite"><span class="en">Adding...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <button type="button" @click="buyNow(item)" class="btn bp btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.addingToCart === item.itemKey">
                                            <span x-show="load.addingToCart !== item.itemKey || !tempUdheyaConfig.isBuyNowIntent"><span class="en">Buy Now</span><span class="ar">اشتر الآن</span></span>
                                            <span x-show="load.addingToCart === item.itemKey && tempUdheyaConfig.isBuyNowIntent" aria-live="polite"><span class="en">Processing...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <span class="stock-display bil-inline" :class="{'out-of-stock': !item.isActive || item.stock <= 0}">
                                            <span class="en" x-text="getStockDisplayInfo(item.stock, item.isActive, 'en')"></span>
                                            <span class="ar" x-text="getStockDisplayInfo(item.stock, item.isActive, 'ar')"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </template>
                 </template>
            </div>
            <div class="empty-state tc" x-show="(!prodOpts.meat_cuts || prodOpts.meat_cuts.length === 0) && !load.init">
                <p class="bil-row">
                    <span class="en" style="flex-basis: 100%;">Our fresh meat selection is currently being updated. Please check back shortly for delicious options!</span>
                    <span class="ar" style="flex-basis: 100%;">يتم تحديث تشكيلة اللحوم الطازجة لدينا حاليًا. يرجى التحقق مرة أخرى قريبًا للحصول على خيارات لذيذة!</span>
                </p>
                 <button @click="navigateToOrScroll('home')" class="btn bp btn-sm bil-inline" style="margin-top: var(--s1);">
                    <span class="en">Back to Home</span><span class="ar">العودة للرئيسية</span>
                </button>
            </div>
            <p class="f-note bil-row tc" x-show="addedToCartMsg.text && addedToCartMsg.pageContext === 'meat'" :class="addedToCartMsg.isError ? 'err-msg' : 'succ-msg'" style="margin-top:var(--s2); justify-content: center;">
                <span class="en" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].en : (addedToCartMsg.text.en || addedToCartMsg.text) ) : (addedToCartMsg.text.en || addedToCartMsg.text)"></span>
                <span class="ar" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].ar : (addedToCartMsg.text.ar || addedToCartMsg.text) ) : (addedToCartMsg.text.ar || addedToCartMsg.text)"></span>
            </p>
        </div>
    </section>

    <!-- Gatherings Section -->
    <section id="gath-sect" class="main-page-sec sec" style="background-color: var(--b1);" x-show="currentPage === 'gatherings' && settings.enable_gatherings_section" x-transition>
        <div class="c">
            <div class="sec-head">
                <h1 class="bil-spread" tabindex="-1">
                    <span class="en">Gatherings & Feasts</span><span class="ar">الولائم والمناسبات</span>
                </h1>
            </div>
            <p class="bil-row section-intro">
                <span class="en">Make your special occasions memorable with our tailored feast packages. We provide everything you need for a delightful and hassle-free gathering, featuring our finest livestock and expertly prepared accompaniments.</span>
                <span class="ar">اجعل مناسباتك الخاصة لا تُنسى مع باقات الولائم المصممة خصيصًا لك. نوفر كل ما تحتاجه لتجمع مبهج وخالٍ من المتاعب، يضم أجود مواشينا والأطباق الجانبية المعدة بخبرة.</span>
            </p>
            <div x-show="prodOpts.gathering_package && prodOpts.gathering_package.length > 0" class="prod-grid grid2">
                 <template x-for="productType in prodOpts.gathering_package" :key="productType.valKey + '-gp'">
                    <template x-for="item in productType.wps" :key="item.itemKey + '-gp-item'">
                        <div class="card card-live">
                            <div class="card-img">
                                <img :src="'images/' + productType.valKey + '-gathering.jpg'" :alt="item.nameENSpec" loading="lazy">
                                <div class="badge bil-inline"><span class="en">FEAST</span><span class="ar">وليمة</span></div>
                            </div>
                            <div class="card-b">
                                <div class="card-content">
                                    <h3 class="card-h bil-spread"><span x-text="item.nameENSpec"></span><span x-text="item.nameARSpec"></span></h3>
                                    <div class="bil-row card-p-row">
                                        <p class="en card-p" x-text="item.descEn || productType.descEn"></p>
                                        <p class="ar card-p" x-text="item.descAr || productType.descAr"></p>
                                    </div>
                                </div>
                                <div class="card-foot">
                                    <div class="price bil-row">
                                        <span class="en"><strong x-text="fmtPrice(item.priceEGP)"></strong></span>
                                        <span class="ar"><strong x-text="fmtPrice(item.priceEGP)"></strong></span>
                                    </div>
                                     <div class="card-act">
                                        <button type="button" @click="addItemToCart(item)" class="btn bac btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.addingToCart === item.itemKey">
                                            <span x-show="load.addingToCart !== item.itemKey"><span class="en">Add to Cart</span><span class="ar">أضف للسلة</span></span>
                                            <span x-show="load.addingToCart === item.itemKey" aria-live="polite"><span class="en">Adding...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <button type="button" @click="buyNow(item)" class="btn bp btn-sm bil-inline" :disabled="!item.isActive || item.stock <= 0 || load.addingToCart === item.itemKey">
                                            <span x-show="load.addingToCart !== item.itemKey"><span class="en">Buy Now</span><span class="ar">اشتر الآن</span></span>
                                            <span x-show="load.addingToCart === item.itemKey" aria-live="polite"><span class="en">Processing...</span><span class="ar">جاري...</span></span>
                                        </button>
                                        <span class="stock-display bil-inline" :class="{'out-of-stock': !item.isActive || item.stock <= 0}">
                                            <span class="en" x-text="getStockDisplayInfo(item.stock, item.isActive, 'en')"></span>
                                            <span class="ar" x-text="getStockDisplayInfo(item.stock, item.isActive, 'ar')"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </template>
                 </template>
            </div>
            <div class="empty-state tc" x-show="(!prodOpts.gathering_package || prodOpts.gathering_package.length === 0) && !load.init">
                <p class="bil-row">
                    <span class="en" style="flex-basis: 100%;">Our gathering and feast packages are being curated. Please check back soon or contact us for bespoke arrangements!</span>
                    <span class="ar" dir="rtl" style="flex-basis: 100%;">يجري حاليًا إعداد باقات المناسبات والولائم. يرجى التحقق مرة أخرى قريبًا أو الاتصال بنا لترتيبات مخصصة!</span>
                </p>
                 <button @click="navigateToOrScroll('home')" class="btn bp btn-sm bil-inline" style="margin-top: var(--s1);">
                    <span class="en">Back to Home</span><span class="ar">العودة للرئيسية</span>
                </button>
            </div>
            <p class="f-note bil-row tc" x-show="addedToCartMsg.text && addedToCartMsg.pageContext === 'gatherings'" :class="addedToCartMsg.isError ? 'err-msg' : 'succ-msg'" style="margin-top:var(--s2); justify-content: center;">
                <span class="en" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].en : (addedToCartMsg.text.en || addedToCartMsg.text) ) : (addedToCartMsg.text.en || addedToCartMsg.text)"></span>
                <span class="ar" x-text="addedToCartMsg.isError ? (errs[addedToCartMsg.text] ? errs[addedToCartMsg.text].ar : (addedToCartMsg.text.ar || addedToCartMsg.text) ) : (addedToCartMsg.text.ar || addedToCartMsg.text)"></span>
            </p>
        </div>
    </section>

    <!-- Checkout Section -->
    <section class="sec main-page-sec" id="checkout-page" x-show="currentPage === 'checkout'" x-transition>
        <div class="c">
            <div class="sec-head">
                <h1 class="bil-spread" x-ref="checkoutTitle" tabindex="-1">
                    <span class="en">Checkout</span>
                    <span class="ar">إتمام الطلب</span>
                </h1>
            </div>

            <div x-show="cartItems.length === 0 && !orderConf.show && currentPage === 'checkout'" class="empty-state tc">
                <p class="bil-row section-intro"><span class="en">Your cart is empty. Please add items to proceed.</span><span class="ar">سلتك فارغة. يرجى إضافة منتجات للمتابعة.</span></p>
                <button @click="navigateToOrScroll('udheya')" class="btn bp" style="margin-top: var(--s2);">
                    <span class="en">Continue Shopping</span><span class="ar">متابعة التسوق</span>
                </button>
            </div>
            
            <div x-show="(cartItems.length > 0 || (new URLSearchParams(window.location.hash.split('?')[1] || '').get('buyNow') === 'true')) && !orderConf.show && currentPage === 'checkout'" class="checkout-layout">
                <div class="checkout-form-col">
                    <form id="checkout-form" @submit.prevent="processOrder()" novalidate>
                        <div class="card form-panel">
                            <div class="card-b">
                                <h2 class="form-subh bil-spread"><span class="en">1. Contact Information</span><span class="ar">١. معلومات الاتصال</span></h2>
                                <div class="fg">
                                    <label for="custNameInputCheckout" class="bil-spread lbl-req"><span class="en">Your Full Name *</span><span class="ar">اسمك الكامل *</span></label>
                                    <input id="custNameInputCheckout" type="text" class="input" x-model="checkoutForm.customer_name" @input="clrErr('customer_name')" :aria-invalid="errs.customer_name ? 'true' : 'false'" aria-required="true" autocomplete="name" x-ref="custNameInputCheckout">
                                    <div class="err-msg" x-show="errs.customer_name" x-text="errs.customer_name ? (currLang === 'ar' ? errs.customer_name.ar : errs.customer_name.en) : ''"></div>
                                </div>
                                <div class="fg">
                                    <label for="custPhoneInputCheckout" class="bil-spread lbl-req"><span class="en">Your Phone *</span><span class="ar">رقم هاتفك *</span></label>
                                    <input id="custPhoneInputCheckout" type="tel" class="input" x-model="checkoutForm.customer_phone" @input="clrErr('customer_phone')" :aria-invalid="errs.customer_phone ? 'true' : 'false'" aria-required="true" autocomplete="tel">
                                    <div class="err-msg" x-show="errs.customer_phone" x-text="errs.customer_phone ? (currLang === 'ar' ? errs.customer_phone.ar : errs.customer_phone.en) : ''"></div>
                                </div>
                                <div class="fg">
                                    <label for="custEmailInputCheckout" class="bil-spread lbl-req"><span class="en">Your Email *</span><span class="ar">بريدك الإلكتروني *</span></label>
                                    <input id="custEmailInputCheckout" type="email" class="input" x-model="checkoutForm.customer_email" @input="clrErr('customer_email')" placeholder="confirmation@example.com" :aria-invalid="errs.customer_email ? 'true' : 'false'" aria-required="true" autocomplete="email">
                                    <div class="err-msg" x-show="errs.customer_email" x-text="errs.customer_email ? (currLang === 'ar' ? errs.customer_email.ar : errs.customer_email.en) : ''"></div>
                                </div>
                            </div>
                        </div>

                        <div class="card form-panel" x-show="deliveryNeededForCart()">
                            <div class="card-b">
                                <h2 class="form-subh bil-spread"><span class="en">2. Delivery Information</span><span class="ar">٢. معلومات التوصيل</span></h2>
                                <div class="bil-row field-note delivery-scope-note">
                                    <p class="en"><strong>Important:</strong> Delivery is ONLY available within Egypt to the selected cities. If ordering from abroad for local delivery, please provide an Egyptian phone number and address for the recipient.</p>
                                    <p class="ar"><strong>هام:</strong> التوصيل متاح فقط داخل مصر للمدن المختارة. إذا كنت تطلب من خارج مصر للتوصيل المحلي، يرجى تقديم رقم هاتف وعنوان مصري للمستلم.</p>
                                </div>
                                <div class="fg">
                                    <label for="delCitySelCheckout" class="bil-spread lbl-req"><span class="en">City *</span><span class="ar">المدينة *</span></label>
                                    <select id="delCitySelCheckout" class="input" x-model="checkoutForm.delivery_city_id" @change="clrErr('delivery_city_id'); updateDeliveryFeeForCheckout()" :aria-invalid="errs.delivery_city_id ? 'true' : 'false'" :aria-required="deliveryNeededForCart()">
                                        <option value="">-- Select City -- / -- اختر المدينة --</option>
                                        <template x-for="city in allCities" :key="city.id">
                                            <option :value="city.id" x-text="`${city.nameEn} / ${city.nameAr}`"></option>
                                        </template>
                                    </select>
                                    <div class="err-msg" x-show="errs.delivery_city_id" x-text="errs.delivery_city_id ? (currLang === 'ar' ? errs.delivery_city_id.ar : errs.delivery_city_id.en) : ''"></div>
                                </div>
                                <div x-show="checkoutForm.delivery_fee_egp > 0 || isDelFeeVar" class="info-box">
                                    <div class="card-b">
                                        <div class="bil-row">
                                            <p class="en" x-show="checkoutForm.delivery_fee_egp > 0 && !isDelFeeVar">Delivery Fee: <strong x-text="fmtPrice(checkoutForm.delivery_fee_egp)"></strong>. <small>(Will be added to total).</small></p>
                                            <p class="ar" x-show="checkoutForm.delivery_fee_egp > 0 && !isDelFeeVar">رسوم التوصيل: <strong x-text="fmtPrice(checkoutForm.delivery_fee_egp)"></strong>. <small>(ستضاف للمجموع).</small></p>
                                            <p class="en" x-show="isDelFeeVar && checkoutForm.delivery_city_id">Delivery fee for <span x-text="allCities.find(c=>c.id === checkoutForm.delivery_city_id)?.nameEn || 'selected area'"></span> will be confirmed.</p>
                                            <p class="ar" x-show="isDelFeeVar && checkoutForm.delivery_city_id">سيتم تأكيد رسوم التوصيل لـ <span x-text="allCities.find(c=>c.id === checkoutForm.delivery_city_id)?.nameAr || 'المنطقة المختارة'"></span>.</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="fg">
                                    <label for="delAddrInputCheckout" class="bil-spread lbl-req"><span class="en">Full Address *</span><span class="ar">العنوان بالكامل *</span></label>
                                    <textarea id="delAddrInputCheckout" class="input" rows="2" x-model="checkoutForm.delivery_address" @input="clrErr('delivery_address')" :aria-invalid="errs.delivery_address ? 'true' : 'false'" :aria-required="deliveryNeededForCart()" autocomplete="street-address"></textarea>
                                    <div class="err-msg" x-show="errs.delivery_address" x-text="errs.delivery_address ? (currLang === 'ar' ? errs.delivery_address.ar : errs.delivery_address.en) : ''"></div>
                                </div>
                                <div class="fg">
                                    <label for="delNotesInputCheckout" class="bil-spread lbl-req"><span class="en">Special Instructions (Optional)</span><span class="ar">تعليمات خاصة (اختياري)</span></label>
                                    <textarea id="delNotesInputCheckout" class="input" rows="2" x-model="checkoutForm.delivery_instructions"></textarea>
                                </div>
                                <div class="fg">
                                    <label class="bil-spread lbl-req" id="timeSlotLabelCheckout"><span class="en">Preferred Delivery Time Slot *</span><span class="ar">وقت التوصيل المفضل *</span></label>
                                    <div class="tslots" role="radiogroup" aria-labelledby="timeSlotLabelCheckout">
                                        <template x-for="slot in deliveryTimeSlots" :key="slot.value">
                                            <div class="ts" :class="{'sel': checkoutForm.delivery_time_slot === slot.value}" @click="checkoutForm.delivery_time_slot = slot.value; clrErr('delivery_time_slot')" tabindex="0" @keydown.enter.space.prevent="checkoutForm.delivery_time_slot = slot.value; clrErr('delivery_time_slot')" role="radio" :aria-checked="checkoutForm.delivery_time_slot === slot.value ? 'true' : 'false'" x-text="slot.label"></div>
                                        </template>
                                    </div>
                                    <div class="err-msg" x-show="errs.delivery_time_slot" x-text="errs.delivery_time_slot ? (currLang === 'ar' ? errs.delivery_time_slot.ar : errs.delivery_time_slot.en) : ''"></div>
                                    <div class="bil-row field-note tslot-note"><p class="f-note en">Preferred time. We will confirm exact window.</p><p class="f-note ar">هذا وقتكم المفضل. سنتواصل معكم لتأكيد نافذة التوصيل الدقيقة.</p></div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="card form-panel">
                            <div class="card-b">
                                <h2 class="form-subh bil-spread"><span class="en" x-text="deliveryNeededForCart() ? '3. Payment Method' : '2. Payment Method'"></span><span class="ar" x-text="deliveryNeededForCart() ? '٣. طريقة الدفع' : '٢. طريقة الدفع'"></span></h2>
                                <div class="fg">
                                    <label class="bil-spread lbl-req" id="payMethLabelCheckout"><span class="en">Payment Method *</span><span class="ar">طريقة الدفع *</span></label>
                                    <div class="pay-meths" role="radiogroup" aria-labelledby="payMethLabelCheckout">
                                        <template x-for="pmOpt in availPayMeths" :key="pmOpt.id + '-checkout'">
                                            <div class="pm" :class="{'sel': checkoutForm.payment_method === pmOpt.id}" @click="checkoutForm.payment_method = pmOpt.id; clrErr('payment_method'); calculateFinalTotal();" tabindex="0" @keydown.enter.space.prevent="checkoutForm.payment_method = pmOpt.id; clrErr('payment_method'); calculateFinalTotal();" role="radio" :aria-checked="checkoutForm.payment_method === pmOpt.id ? 'true' : 'false'" :aria-labelledby="'pm-label-' + pmOpt.id + '-checkout'">
                                                <input type="radio" :id="'pm-' + pmOpt.id + '-checkout'" :value="pmOpt.id" x-model="checkoutForm.payment_method" class="sr-only">
                                                <label :for="'pm-' + pmOpt.id + '-checkout'" :title="pmOpt.title" :id="'pm-label-' + pmOpt.id + '-checkout'"><img :src="'images/' + pmOpt.imgSrc" :alt="pmOpt.title" class="pay-icon"></label>
                                            </div>
                                        </template>
                                    </div>
                                    <div class="err-msg" x-show="errs.payment_method" x-text="errs.payment_method ? (currLang === 'ar' ? errs.payment_method.ar : errs.payment_method.en) : ''"></div>
                                    <div class="field-note bil-row" x-show="checkoutForm.payment_method === 'online_card' && settings.online_payment_fee_egp > 0" style="margin-top: var(--s0);">
                                        <p class="en">An online payment processing fee of <strong x-text="fmtPrice(settings.online_payment_fee_egp)"></strong> will be added.</p>
                                        <p class="ar">سيتم إضافة رسوم معالجة دفع إلكتروني بقيمة <strong x-text="fmtPrice(settings.online_payment_fee_egp)"></strong>.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-act tc page-act final-submit">
                             <label class="lbl-chk bil-inline" style="margin-bottom: var(--s2); font-size: 0.9em; display: flex; align-items: center; justify-content: center;">
                                <input type="checkbox" x-model="checkoutForm.terms_agreed" @change="clrErr('terms_agreed')" :aria-invalid="errs.terms_agreed ? 'true' : 'false'" aria-required="true">
                                <span class="en">I agree to the <button type="button" class="link-style" @click.prevent="openRefundModal()">Terms & Refund Policy</button> *</span>
                                <span class="ar">أوافق على <button type="button" class="link-style" @click.prevent="openRefundModal()">الشروط وسياسة الاسترداد</button> *</span>
                            </label>
                            <div class="err-msg tc" x-show="errs.terms_agreed" x-text="errs.terms_agreed ? (currLang === 'ar' ? errs.terms_agreed.ar : errs.terms_agreed.en) : ''"></div>

                            <button type="submit" class="btn bac btn-lg btn-block bil-inline" :disabled="load.checkout || cartItems.length === 0" :class="{'disabled-btn': load.checkout || cartItems.length === 0}">
                                <span x-show="!load.checkout"><span class="en">Place Order & Pay</span><span class="ar">إرسال الطلب والدفع</span></span>
                                <span x-show="load.checkout" aria-live="polite"><span class="en">Processing...</span><span class="ar">جاري المعالجة...</span></span>
                            </button>
                        </div>
                    </form>
                </div>

                <div class="checkout-summary-col">
                    <div class="card form-panel sticky-summary">
                        <div class="card-b">
                            <h2 class="form-subh bil-spread"><span class="en">Order Summary</span><span class="ar">ملخص الطلب</span></h2>
                            <div class="rev-sum checkout-rev-sum">
                                <template x-for="item in cartItems" :key="item.uniqueIdInCart + '-summary'">
                                    <div class="sum-item">
                                        <div class="sum-item-content">
                                            <div class="bil-row"><span class="en" x-text="item.nameENSpec"></span><span class="ar" x-text="item.nameARSpec"></span></div>
                                            <div class="bil-row sm-label" style="font-size:0.8em;"><span class="en" x-text="'Qty: ' + item.quantity"></span><span class="ar" x-text="'الكمية: ' + item.quantity"></span></div>
                                        </div>
                                        <div class="sum-item-price bil-row"><span class="en" x-text="fmtPrice(getSubtotalForItem(item))"></span><span class="ar" x-text="fmtPrice(getSubtotalForItem(item))"></span></div>
                                    </div>
                                </template>
                                <hr class="sum-hr" x-show="checkoutForm.total_service_fee_egp > 0 || checkoutForm.delivery_fee_egp > 0 || (checkoutForm.payment_method === 'online_card' && settings.online_payment_fee_egp > 0)">
                                
                                <div class="sum-item" x-show="checkoutForm.total_service_fee_egp > 0">
                                    <div class="sum-item-content bil-row"><span class="en">Udheya Service Fee(s)</span><span class="ar">رسوم خدمة الأضاحي</span></div>
                                    <div class="sum-item-price bil-row"><span class="en" x-text="fmtPrice(checkoutForm.total_service_fee_egp)"></span><span class="ar" x-text="fmtPrice(checkoutForm.total_service_fee_egp)"></span></div>
                                </div>
                                <div class="sum-item" x-show="deliveryNeededForCart() && checkoutForm.delivery_fee_egp > 0">
                                    <div class="sum-item-content bil-row"><span class="en">Delivery Fee</span><span class="ar">رسوم التوصيل</span></div>
                                    <div class="sum-item-price bil-row"><span class="en" x-text="fmtPrice(checkoutForm.delivery_fee_egp)"></span><span class="ar" x-text="fmtPrice(checkoutForm.delivery_fee_egp)"></span></div>
                                </div>
                                <div class="sum-item" x-show="isDelFeeVar && deliveryNeededForCart() && checkoutForm.delivery_city_id">
                                    <div class="sum-item-content bil-row"><span class="en">Delivery Fee</span><span class="ar">رسوم التوصيل</span></div>
                                    <div class="sum-item-price bil-row"><span class="en">To be confirmed</span><span class="ar">سيتم التأكيد</span></div>
                                </div>
                                <div class="sum-item" x-show="checkoutForm.payment_method === 'online_card' && settings.online_payment_fee_egp > 0">
                                    <div class="sum-item-content bil-row"><span class="en">Online Payment Fee</span><span class="ar">رسوم الدفع الإلكتروني</span></div>
                                    <div class="sum-item-price bil-row"><span class="en" x-text="fmtPrice(settings.online_payment_fee_egp)"></span><span class="ar" x-text="fmtPrice(settings.online_payment_fee_egp)"></span></div>
                                </div>
                                <hr class="sum-hr">
                                <div class="sum-total bil-row">
                                    <div class="en"><strong>Order Total:</strong></div><div class="ar"><strong>المجموع الكلي:</strong></div>
                                    <div class="en"><strong x-text="fmtPrice(checkoutForm.final_total_egp)"></strong></div><div class="ar"><strong x-text="fmtPrice(checkoutForm.final_total_egp)"></strong></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Confirmation Section -->
            <section id="order-conf-sect" class="sec conf-sect-wide" x-show="orderConf.show && currentPage === 'checkout'" x-transition.opacity.duration.300ms>
                <div class="c tc">
                    <div class="sec-head conf-h"><h2 class="bil-spread" x-ref="orderConfTitle" tabindex="-1"><span class="en">Order Confirmed! JazakAllah Khairan.</span><span class="ar">تم تأكيد الطلب! جزاكم الله خيرًا.</span></h2></div>
                    <div class="conf-msg">
                        <div class="bil-row conf-intro"><p class="en">Thank you for choosing Sheep Land. Your order is being processed. May Allah accept it.</p><p class="ar">نشكركم على اختيار أرض الأغنام. طلبكم قيد المعالجة. تقبل الله منا ومنكم.</p></div>
                        <div class="card form-panel order-id-box"><div class="card-b order-id-box-body">
                            <div class="bil-spread"><p class="en order-id-box-imp"><strong>Important: Your Order Details</strong></p><p class="ar order-id-box-imp"><strong>هام: تفاصيل طلبكم</strong></p></div>
                            <div class="bil-spread"><p class="en order-id-box-lbl">Order ID:</p><p class="ar order-id-box-lbl">رقم طلبكم:</p></div>
                            <p class="order-id-disp" x-text="orderConf.orderID"></p>
                            <div class="bil-row">
                                <p class="en order-id-box-note">Save your Order ID for status checking. An email confirmation <strong x-text="orderConf.customerEmail ? 'has been sent to ' + orderConf.customerEmail : 'could not be sent as no email was provided'"></strong>. Please check your spam/junk folder if not received. (Note: Email sending requires server configuration).</p>
                                <p class="ar order-id-box-note">احفظ رقم طلبك للتحقق من الحالة. <strong x-text="orderConf.customerEmail ? 'تم إرسال تأكيد إلى ' + orderConf.customerEmail : 'تعذر إرسال تأكيد لعدم تقديم بريد إلكتروني'"></strong>. يرجى التحقق من مجلد الرسائل غير المرغوب فيها/البريد العشوائي إذا لم تستلمه. (ملاحظة: إرسال البريد الإلكتروني يتطلب إعدادات الخادم).</p>
                            </div>
                        </div></div>
                        <div class="quick-recap">
                            <h4 class="form-subh bil-spread recap-h"><span class="en">Quick Order Recap</span><span class="ar">ملخص سريع للطلب</span></h4>
                            <template x-for="item in orderConf.items" :key="item.item_key_pb + '-conf'"> 
                                 <div class="sum-item bil-row">
                                     <div class="en"><strong x-text="item.name_en"></strong> <span x-text="item.quantity > 1 ? '(x' + item.quantity + ')' : ''"></span></div>
                                     <div class="ar"><strong x-text="item.name_ar"></strong> <span x-text="item.quantity > 1 ? '(×' + item.quantity + ')' : ''"></span></div>
                                 </div>
                            </template>
                             <div class="sum-item bil-row">
                                <div class="en"><strong>Order Total:</strong> <span x-text="fmtPrice(orderConf.totalEgp)"></span></div>
                                <div class="ar"><strong>إجمالي الطلب:</strong> <span x-text="fmtPrice(orderConf.totalEgp)"></span></div>
                            </div>
                        </div>
                        <div class="pay-instr">
                            <h4 class="form-subh bil-spread pay-instr-h"><span class="en">Next Steps & Payment</span><span class="ar">الخطوات التالية والدفع</span></h4>
                            <div x-html="orderConf.paymentInstructions"></div>
                        </div>
                    </div>
                    <div class="form-act tc page-act">
                        <button @click="navigateToOrScroll('home')" class="btn bp btn-lg bil-inline">
                            <span class="en">Back to Homepage</span><span class="ar">العودة للرئيسية</span>
                        </button>
                        <button @click="navigateToOrScroll('account')" class="btn bac btn-lg bil-inline" x-show="currentUser">
                            <span class="en">View My Orders</span><span class="ar">عرض طلباتي</span>
                        </button>
                         <button @click="openOrderStatusModal()" class="btn bp-alt btn-lg bil-inline" x-show="!currentUser">
                            <span class="en">Check Order Status</span><span class="ar">تحقق من حالة الطلب</span>
                        </button>
                    </div>
                </div>
            </section>
        </div>
    </section>
    
    <!-- Auth Section -->
    <section class="sec main-page-sec" id="auth-page" x-show="currentPage === 'auth'" x-transition>
        <div class="c">
            <div class="sec-head">
                <h1 class="bil-spread" x-ref="authTitle" tabindex="-1">
                    <span class="en" x-text="auth.view === 'login' ? 'Login' : 'Register'"></span>
                    <span class="ar" x-text="auth.view === 'login' ? 'تسجيل الدخول' : 'تسجيل حساب جديد'"></span>
                </h1>
            </div>

            <div class="auth-form-container">
                <div class="card form-panel">
                    <div class="card-b">
                        <!-- Login Form -->
                        <form id="login-form" @submit.prevent="loginUser()" novalidate x-show="auth.view === 'login'">
                            <div class="fg">
                                <label for="loginEmail" class="bil-spread lbl-req"><span class="en">Email *</span><span class="ar">البريد الإلكتروني *</span></label>
                                <input id="loginEmail" type="email" class="input" x-model="auth.email" @input="clrErr('auth_email'); clrErr('auth_login')" :aria-invalid="errs.auth_email || errs.auth_login ? 'true' : 'false'" aria-required="true" autocomplete="email">
                                <div class="err-msg" x-show="errs.auth_email" x-text="currLang === 'ar' ? errs.auth_email.ar : errs.auth_email.en"></div>
                            </div>
                            <div class="fg">
                                <label for="loginPassword" class="bil-spread lbl-req"><span class="en">Password *</span><span class="ar">كلمة المرور *</span></label>
                                <input id="loginPassword" type="password" class="input" x-model="auth.password" @input="clrErr('auth_password'); clrErr('auth_login')" :aria-invalid="errs.auth_password || errs.auth_login ? 'true' : 'false'" aria-required="true" autocomplete="current-password">
                                <div class="err-msg" x-show="errs.auth_password" x-text="currLang === 'ar' ? errs.auth_password.ar : errs.auth_password.en"></div>
                            </div>
                            <div class="err-msg tc" x-show="errs.auth_login" x-text="currLang === 'ar' ? errs.auth_login.ar : errs.auth_login.en"></div>
                            <div class="card-act" style="margin-top: var(--s2);">
                                <button type="submit" class="btn bp btn-block bil-inline" :disabled="load.auth">
                                    <span x-show="!load.auth"><span class="en">Login</span><span class="ar">دخول</span></span>
                                    <span x-show="load.auth" aria-live="polite"><span class="en">Logging in...</span><span class="ar">جاري الدخول...</span></span>
                                </button>
                            </div>
                            <p class="auth-toggle-link bil-row">
                                <span class="en">Don't have an account?</span><span class="ar">ليس لديك حساب؟</span>
                                <button type="button" @click="auth.view = 'register'; clrAllErrs();" class="link-style bil-inline"><span class="en">Register here</span><span class="ar">سجل هنا</span></button>
                            </p>
                        </form>

                        <!-- Registration Form -->
                        <form id="register-form" @submit.prevent="registerUser()" novalidate x-show="auth.view === 'register'">
                            <div class="fg">
                                <label for="registerName" class="bil-spread lbl-req"><span class="en">Full Name *</span><span class="ar">الاسم الكامل *</span></label>
                                <input id="registerName" type="text" class="input" x-model="auth.name" @input="clrErr('auth_name')" :aria-invalid="errs.auth_name ? 'true' : 'false'" aria-required="true" autocomplete="name">
                                <div class="err-msg" x-show="errs.auth_name" x-text="currLang === 'ar' ? errs.auth_name.ar : errs.auth_name.en"></div>
                            </div>
                            <div class="fg">
                                <label for="registerEmail" class="bil-spread lbl-req"><span class="en">Email *</span><span class="ar">البريد الإلكتروني *</span></label>
                                <input id="registerEmail" type="email" class="input" x-model="auth.email" @input="clrErr('auth_email')" :aria-invalid="errs.auth_email ? 'true' : 'false'" aria-required="true" autocomplete="email">
                                <div class="err-msg" x-show="errs.auth_email" x-text="currLang === 'ar' ? errs.auth_email.ar : errs.auth_email.en"></div>
                            </div>
                            <div class="fg">
                                <label for="registerPassword" class="bil-spread lbl-req"><span class="en">Password *</span><span class="ar">كلمة المرور *</span></label>
                                <input id="registerPassword" type="password" class="input" x-model="auth.password" @input="clrErr('auth_password')" :aria-invalid="errs.auth_password ? 'true' : 'false'" aria-required="true" autocomplete="new-password">
                                <div class="err-msg" x-show="errs.auth_password" x-text="currLang === 'ar' ? errs.auth_password.ar : errs.auth_password.en"></div>
                            </div>
                            <div class="fg">
                                <label for="registerPasswordConfirm" class="bil-spread lbl-req"><span class="en">Confirm Password *</span><span class="ar">تأكيد كلمة المرور *</span></label>
                                <input id="registerPasswordConfirm" type="password" class="input" x-model="auth.passwordConfirm" @input="clrErr('auth_passwordConfirm')" :aria-invalid="errs.auth_passwordConfirm ? 'true' : 'false'" aria-required="true" autocomplete="new-password">
                                <div class="err-msg" x-show="errs.auth_passwordConfirm" x-text="currLang === 'ar' ? errs.auth_passwordConfirm.ar : errs.auth_passwordConfirm.en"></div>
                            </div>
                            <div class="err-msg tc" x-show="errs.auth_register" x-text="currLang === 'ar' ? errs.auth_register.ar : errs.auth_register.en"></div>
                            <div class="succ-msg tc" x-show="errs.auth_form_success" x-text="currLang === 'ar' ? errs.auth_form_success.ar : errs.auth_form_success.en"></div>
                            <div class="card-act" style="margin-top: var(--s2);">
                                <button type="submit" class="btn bp btn-block bil-inline" :disabled="load.auth">
                                    <span x-show="!load.auth"><span class="en">Register</span><span class="ar">تسجيل</span></span>
                                    <span x-show="load.auth" aria-live="polite"><span class="en">Registering...</span><span class="ar">جاري التسجيل...</span></span>
                                </button>
                            </div>
                            <p class="auth-toggle-link bil-row">
                                <span class="en">Already have an account?</span><span class="ar">لديك حساب بالفعل؟</span>
                                <button type="button" @click="auth.view = 'login'; clrAllErrs();" class="link-style bil-inline"><span class="en">Login here</span><span class="ar">سجل الدخول هنا</span></button>
                            </p>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Account Section -->
    <section class="sec main-page-sec" id="account-page" x-show="currentPage === 'account'" x-transition>
        <div class="c">
            <div class="sec-head">
                <h1 class="bil-spread" x-ref="accountTitle" tabindex="-1">
                    <span class="en">My Account</span>
                    <span class="ar">حسابي</span>
                </h1>
            </div>

            <div x-show="!currentUser && !load.auth && currentPage === 'account'" class="empty-state tc">
                <p class="bil-row section-intro"><span class="en">Please <a href="#auth" @click.prevent="navigateToOrScroll('auth')" class="link-style">login or register</a> to view your account details and order history.</span><span class="ar">يرجى <a href="#auth" @click.prevent="navigateToOrScroll('auth')" class="link-style">تسجيل الدخول أو إنشاء حساب</a> لعرض تفاصيل حسابك وسجل الطلبات.</span></p>
            </div>
            
            <div x-show="currentUser && currentPage === 'account'">
                <div class="card form-panel">
                    <div class="card-b">
                        <h2 class="form-subh bil-spread"><span class="en">Account Information</span><span class="ar">معلومات الحساب</span></h2>
                        <div class="sum-item bil-row"><span class="en"><strong>Email:</strong></span><span class="ar"><strong>البريد الإلكتروني:</strong></span> <span x-text="currentUser.email"></span></div>
                        <div class="sum-item bil-row"><span class="en"><strong>Name:</strong></span><span class="ar"><strong>الاسم:</strong></span> <span x-text="currentUser.name || 'Not set'"></span></div>
                        <button @click="logoutUser()" class="btn bp-alt" style="margin-top: var(--s2);"><span class="en">Logout</span><span class="ar">تسجيل الخروج</span></button>
                    </div>
                </div>

                <div class="card form-panel" style="margin-top: var(--s3);">
                    <div class="card-b">
                        <h2 class="form-subh bil-spread"><span class="en">Order History</span><span class="ar">سجل الطلبات</span></h2>
                        <div x-show="load.orders" class="load-text tc" aria-live="polite"><span class="en">Loading your orders...</span><span class="ar">جاري تحميل طلباتك...</span></div>
                        
                        <div x-show="!load.orders && userOrders.length === 0" class="empty-state tc">
                            <p class="bil-row section-intro"><span class="en">You have not placed any orders yet.</span><span class="ar">لم تقم بأي طلبات بعد.</span></p>
                            <button @click="navigateToOrScroll('udheya')" class="btn bp" style="margin-top: var(--s1);">
                                <span class="en">Start Shopping</span><span class="ar">ابدأ التسوق</span>
                            </button>
                        </div>

                        <div x-show="!load.orders && userOrders.length > 0" class="order-history-list">
                            <template x-for="order in userOrders" :key="order.id">
                                <div class="order-history-item card">
                                    <div class="card-b">
                                        <div class="sum-item bil-row">
                                            <div><strong class="en">Order ID:</strong><strong class="ar">رقم الطلب:</strong></div>
                                            <div><span x-text="order.order_id_text"></span></div>
                                        </div>
                                        <div class="sum-item bil-row">
                                            <div><strong class="en">Date:</strong><strong class="ar">التاريخ:</strong></div>
                                            <div><span class="en" x-text="new Date(order.created).toLocaleDateString('en-GB', { year: 'numeric', month: 'short', day: 'numeric' })"></span><span class="ar" x-text="new Date(order.created).toLocaleDateString('ar-EG-u-nu-latn', { year: 'numeric', month: 'short', day: 'numeric' })"></span></div>
                                        </div>
                                        <div class="sum-item bil-row">
                                             <div><strong class="en">Total:</strong><strong class="ar">الإجمالي:</strong></div>
                                             <div><span x-text="fmtPrice(order.total_amount_due_egp)"></span></div>
                                        </div>
                                        <div class="sum-item bil-row">
                                            <div><strong class="en">Status:</strong><strong class="ar">الحالة:</strong></div>
                                            <div><span class="stat-hl" x-text="order.order_status"></span></div>
                                        </div>
                                        <div class="sum-item bil-row">
                                            <div><strong class="en">Payment:</strong><strong class="ar">الدفع:</strong></div>
                                            <div><span x-text="order.payment_status"></span></div>
                                        </div>
                                        <details class="order-details-toggle">
                                            <summary class="bil-spread"><span class="en">View Items</span><span class="ar">عرض العناصر</span></summary>
                                            <ul class="order-items-list">
                                                <template x-for="item in order.line_items" :key="item.item_key_pb + '-' + order.id"> 
                                                    <li class="bil-row">
                                                        <span class="en" x-text="item.name_en + (item.quantity > 1 ? ` (x${item.quantity})` : '')"></span>
                                                        <span class="ar" x-text="item.name_ar + (item.quantity > 1 ? ` (×${item.quantity})` : '')"></span>
                                                    </li>
                                                </template>
                                            </ul>
                                        </details>
                                    </div>
                                </div>
                            </template>
                        </div>
                         <div class="err-msg tc" x-show="errs.orders_fetch" x-text="errs.orders_fetch ? (currLang === 'ar' ? errs.orders_fetch.ar : errs.orders_fetch.en) : ''"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</main>

<footer class="foot main-page-sec">
    <div class="c">
        <div class="foot-grid">
            <div class="bil-row foot-brand-desc">
                <p class="en">Your trusted partner for premium, Sharia-compliant livestock and meat, delivered with care and tradition.</p>
                <p class="ar">شريكك الموثوق للمواشي واللحوم الفاخرة المتوافقة مع الشريعة، نوصلها بعناية وأصالة.</p>
            </div>
        </div>
        <div class="foot-pay tc">
            <h5 class="bil-spread">
                <span class="en">Secure Payment Options Available</span><span class="ar">تتوفر خيارات دفع آمنة</span>
            </h5>
        </div>
        <hr class="foot-div">
        <p class="foot-copy">© <span x-text="new Date().getFullYear()"></span> Sheep Land.
            <span class="bil-copy">
                <span class="en">All rights reserved.</span><span class="ar">جميع الحقوق محفوظة.</span>
            </span>
             | <button @click.prevent="openRefundModal()" class="footer-link-btn bil-inline"><span class="en">Refund Policy</span><span class="ar">سياسة الاسترداد</span></button>
        </p>
    </div>
</footer>
<script src="vendor/pocketbase.umd.js"></script>
<script defer src="vendor/alpine.min.js"></script>
<script defer src="vendor/alpine-collapse.min.js"></script>
<script type="module" src="/src/main.js"></script>

</body>
</html>
===== public/setup.html =====
<!-- Filename: /setup.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>PB Setup: Sheep Land</title>
    <script src="https://unpkg.com/pocketbase@latest/dist/pocketbase.umd.js"></script>
    <style>
        body{font-family:sans-serif;font-size:13px;line-height:1.4;padding:10px;background:#f0f0f0;color:#333;display:flex;flex-direction:column;align-items:center;margin:0;}
        .c{max-width:700px;width:100%;background:white;padding:15px;border-radius:5px;box-shadow:0 2px 8px rgba(0,0,0,0.1);}
        h1{color:#333;border-bottom:1px solid #ccc;padding-bottom:5px;margin:0 0 10px 0;font-size:1.2em;}
        p{font-size:0.9em;margin:0 0 0.5em 0;} .warn{color:red;font-weight:bold;}
        button{padding:6px 10px;background:#007bff;color:white;border:0;border-radius:3px;cursor:pointer;font-size:0.85em;margin-bottom:5px;}
        button:disabled{background:#ccc;} button:hover:not(:disabled){background:#0056b3;}
        #out{margin-top:10px;padding:8px;background:#222;color:#eee;border-radius:3px;white-space:pre-wrap;font-family:monospace;font-size:11px;max-height:70vh;overflow-y:auto;}
        .ls{color:lime;font-weight:bold;} /* success */
        .le{color:salmon;font-weight:bold;} /* error */
        .li{color:cyan;} /* info */
        .lw{color:yellow;} /* warning */
        .ld{color:gray;} /* debug / data */
        #out pre { margin-top: 5px; padding: 5px; background-color: #333; border-radius: 3px; font-size: 0.9em; }
    </style>
</head>
<body>
    <div class="c">
        <h1>PB Sheep Land Setup</h1>
        <p class="warn">WARNING: This script uses default admin credentials (admin@example.com / unifiedpassword). CHANGE THESE IMMEDIATELY in a production environment. This script will create/update collections and data. Backup your existing data if necessary before running.</p>
        <button id="runFullSetup">Run Full Setup</button>
        <button id="runSchemaOnly">Schema Only</button>
        <button id="runSeedOnly" disabled>Seed Data Only</button>
        <div id="out"></div>
    </div>
<script>
    const pbUrl = '/';
    const outputDiv = document.getElementById('out');
    const runFullSetupButton = document.getElementById('runFullSetup');
    const runSchemaOnlyButton = document.getElementById('runSchemaOnly');
    const runSeedOnlyButton = document.getElementById('runSeedOnly');
    const ADM_E = 'admin@example.com';
    const ADM_P = 'unifiedpassword';

    const log = (message, type = 'i', data = null) => {
        const timestamp = `[${new Date().toLocaleTimeString([], { hour12: false, hour: '2-digit', minute: '2-digit', second: '2-digit' })}] `;
        const p = document.createElement('p');
        p.className = `l${type[0].toLowerCase()}`;
        let logMessage = timestamp + message.replace(/</g, '&lt;').replace(/>/g, '&gt;');
        if (data) {
            const pre = document.createElement('pre');
            pre.className = 'ld'; 
            pre.textContent = JSON.stringify(data, null, 2);
            logMessage += "\n" + pre.outerHTML; 
        }
        p.innerHTML = logMessage; 
        outputDiv.appendChild(p);
        outputDiv.scrollTop = outputDiv.scrollHeight;
        
        const consoleMessage = timestamp + message.replace(/<[^>]*>?/gm, ''); 
        if (type === 'e') console.error(consoleMessage, data || '');
        else if (type === 'w') console.warn(consoleMessage, data || '');
        else if (type === 'd') console.debug(consoleMessage, data || '');
        else console.log(consoleMessage, data || '');
    };

    async function authenticateAdmin(pb) {
        try {
            await pb.admins.authWithPassword(ADM_E, ADM_P);
            log('Admin authentication successful', 's');
            return true;
        } catch (error) {
            log(`Admin authentication failed: ${error.message}`, 'e');
            return false;
        }
    }
    
    const defaultRefundPolicyHTMLForSeed = `
        <div class="bil-row">
            <p class="en">Welcome to Sheep Land. We strive to provide the best quality Udheya and livestock services. Please read our policy carefully.</p>
            <p class="ar" dir="rtl">مرحباً بكم في أرض الأغنام. نسعى جاهدين لتقديم أفضل جودة في خدمات الأضاحي والمواشي. يرجى قراءة سياستنا بعناية.</p>
        </div>
        <h3 class="bil-spread modal-section-title">
            <span class="en">Udheya Orders</span><span class="ar" dir="rtl">طلبات الأضاحي</span>
        </h3>
        <div class="bil-row">
            <p class="en">Due to the nature of Udheya (Qurbani/Sacrifice), which is a time-sensitive religious observance, our refund and cancellation policy is as follows:</p>
            <p class="ar" dir="rtl">نظرًا لطبيعة الأضحية، وهي شعيرة دينية مرتبطة بوقت محدد، فإن سياسة الاسترداد والإلغاء لدينا هي كما يلي:</p>
        </div>
        <ul class="modal-list">
            <li><div class="bil-row"><p class="en"><strong>Cancellations Before Cut-off:</strong> Full refund available before specified deadline, minus payment processing fees.</p><p class="ar" dir="rtl"><strong>الإلغاء قبل الموعد النهائي:</strong> استرداد كامل متاح قبل الموعد النهائي المحدد، مخصومًا منه رسوم معالجة الدفع.</p></div></li>
            <li><div class="bil-row"><p class="en"><strong>Cancellations After Cut-off:</strong> Non-refundable once animal is allocated and preparations begin.</p><p class="ar" dir="rtl"><strong>الإلغاء بعد الموعد النهائي:</strong> غير قابل للاسترداد بمجرد تخصيص الحيوان وبدء الاستعدادات.</p></div></li>
            <li><div class="bil-row"><p class="en"><strong>Non-Fulfilment by Sheep Land:</strong> Full refund if we cannot fulfill confirmed orders due to unforeseen circumstances.</p><p class="ar" dir="rtl"><strong>عدم التنفيذ من قبل أرض الأغنام:</strong> استرداد كامل إذا لم نتمكن من تلبية الطلبات المؤكدة بسبب ظروف غير متوقعة.</p></div></li>
        </ul>
        <h3 class="bil-spread modal-section-title"><span class="en">Other Products</span><span class="ar" dir="rtl">منتجات أخرى</span></h3>
        <div class="bil-row"><p class="en">For livestock, meat cuts, and gathering packages: cancellations typically allowed up to 48 hours before delivery. Quality issues should be reported within 12-24 hours with photographic evidence.</p><p class="ar" dir="rtl">للمواشي وقطعيات اللحوم وباقات الولائم: يُسمح بالإلغاء عادةً حتى 48 ساعة قبل التوصيل. يجب الإبلاغ عن مشاكل الجودة خلال 12-24 ساعة مع دليل فوتوغرافي.</p></div>
    `;

    // Following PB dev doc guidelines: use correct field structure with direct properties
    const collectionsDefinition = [
        {
            name: "settings",
            type: "base",
            system: false,
            listRule: "", // Public read access
            viewRule: "", // Public view access
            createRule: null, 
            updateRule: "@request.auth.id != '' && @request.auth.verified = true", 
            deleteRule: null, 
            fields: [ 
                { name: "xchgRates", type: "json", required: true, presentable: true }, 
                { name: "defCurr", type: "text", required: true, presentable: true, max: 5, min: 3 },
                { name: "waNumRaw", type: "text", required: false, presentable: true, max: 20 }, 
                { name: "waNumDisp", type: "text", required: false, presentable: true, max: 30 },
                { name: "promoEndISO", type: "date", required: false, presentable: true }, 
                { name: "promoDiscPc", type: "number", required: false, presentable: true, min: 0, max: 100 },
                { name: "promoActive", type: "bool", required: false, presentable: true }, 
                { name: "servFeeEGP", type: "number", required: true, presentable: true, min: 0 },
                { name: "delAreas", type: "json", required: false, presentable: true }, 
                { name: "payDetails", type: "json", required: false, presentable: true },
                { name: "enable_udheya_section", type: "bool", required: false, presentable: true }, 
                { name: "enable_livestock_section", type: "bool", required: false, presentable: true },
                { name: "enable_meat_section", type: "bool", required: false, presentable: true }, 
                { name: "enable_gatherings_section", type: "bool", required: false, presentable: true },
                { name: "slaughter_location_gmaps_url", type: "url", required: false, presentable: true },
                { name: "online_payment_fee_egp", type: "number", required: false, presentable: true, min: 0 },
                { name: "refund_policy_html", type: "editor", required: false, presentable: false }, 
                { name: "app_email_sender_address", type: "email", required: false, presentable: false },
                { name: "app_email_sender_name", type: "text", required: false, presentable: false, max: 100 }
            ]
        },
        {
            name: "products", 
            type: "base", 
            system: false,
            listRule: "", 
            viewRule: "", 
            createRule: "@request.auth.id != '' && @request.auth.verified = true", 
            updateRule: "@request.auth.id != '' && @request.auth.verified = true", 
            deleteRule: "@request.auth.id != '' && @request.auth.verified = true",
            fields: [
                { name: "item_key", type: "text", required: true, presentable: true, unique: true, max: 100, min: 1, pattern: "^[a-z0-9_]+$" },
                { name: "product_category", type: "select", required: true, presentable: true, maxSelect: 1, values: ["udheya", "livestock_general", "meat_cuts", "gathering_package", "other"] },
                { name: "type_key", type: "text", required: true, presentable: true, max: 50, min: 1, pattern: "^[a-z0-9_]+$" },
                { name: "type_name_en", type: "text", required: true, presentable: true, max: 100, min: 1 }, 
                { name: "type_name_ar", type: "text", required: true, presentable: true, max: 100, min: 1 },
                { name: "type_description_en", type: "text", required: false, presentable: true, max: 300 }, 
                { name: "type_description_ar", type: "text", required: false, presentable: true, max: 300 },
                { name: "price_per_kg_egp", type: "number", required: false, presentable: true, min: 0 },
                { name: "variant_name_en", type: "text", required: true, presentable: true, max: 150, min: 1 },
                { name: "variant_name_ar", type: "text", required: true, presentable: true, max: 150, min: 1 }, 
                { name: "weight_range_text_en", type: "text", required: false, presentable: true, max: 50 },
                { name: "weight_range_text_ar", type: "text", required: false, presentable: true, max: 50 }, 
                { name: "avg_weight_kg", type: "number", required: false, presentable: true, min: 0 },
                { name: "base_price_egp", type: "number", required: true, presentable: true, min: 0 }, 
                { name: "stock_available_pb", type: "number", required: true, presentable: true, min: 0, noDecimal: true },
                { name: "is_active", type: "bool", required: false, presentable: true }, 
                { name: "sort_order_type", type: "number", required: false, presentable: true, min: 0, noDecimal: true },
                { name: "sort_order_variant", type: "number", required: false, presentable: true, min: 0, noDecimal: true }
            ],
            indexes: [ "CREATE UNIQUE INDEX `idx_products_item_key` ON `products` (`item_key`)", "CREATE INDEX `idx_products_category` ON `products` (`product_category`)" ]
        },
        { 
            name: "users", // This will target the existing _pb_users_auth_
            type: "auth",
            system: false, 
            listRule: "@request.auth.id = id || @request.auth.admin = true",
            viewRule: "@request.auth.id = id || @request.auth.admin = true",
            createRule: "", 
            updateRule: "@request.auth.id = id || @request.auth.admin = true", 
            deleteRule: "@request.auth.id = id || @request.auth.admin = true", 
            options: { 
                emailVisibility: true, 
                requireEmailVerification: false, 
                allowOAuth2Auth: false,
                allowUsernameAuth: false, 
                allowPasswordAuth: true,
                onlyVerified: false 
            },
            fields: [ 
                { name: "name", type: "text", required: false, presentable: true, max: 100 }
            ]
        },
        { 
            name: "orders", 
            type: "base", 
            system: false,
            // NOTE: Initial rules without user field reference - will be updated after relation is added
            // This prevents "unknown field 'user'" error during collection creation
            listRule: "@request.query.lookupOrderID != '' && order_id_text = @request.query.lookupOrderID", 
            viewRule: "@request.query.lookupOrderID != '' && order_id_text = @request.query.lookupOrderID",
            createRule: "", 
            updateRule: "@request.auth.id != '' && @request.auth.verified = true", 
            deleteRule: "@request.auth.id != '' && @request.auth.verified = true", 
            fields: [
                { name: "order_id_text", type: "text", required: true, presentable: true, unique: true, max: 50, min: 1 },
                // user relation field will be added in the addOrVerifyRelationFields step
                { name: "customer_name", type: "text", required: true, presentable: true, max: 150, min: 1 },
                { name: "customer_phone", type: "text", required: true, presentable: true, max: 30, min: 7 },
                { name: "customer_email", type: "email", required: true, presentable: true },
                { name: "line_items", type: "json", required: true, presentable: true }, 
                { name: "delivery_option", type: "select", required: true, presentable: true, maxSelect: 1, values: ["home_delivery", "self_pickup_or_internal_distribution"] },
                { name: "delivery_city_id", type: "text", required: false, presentable: true, max: 50 },
                { name: "delivery_area_name_en", type: "text", required: false, presentable: true, max: 100 },
                { name: "delivery_area_name_ar", type: "text", required: false, presentable: true, max: 100 },
                { name: "delivery_address", type: "text", required: false, presentable: true, max: 500 },
                { name: "delivery_instructions", type: "text", required: false, presentable: true, max: 500 },
                { name: "delivery_time_slot", type: "text", required: false, presentable: true, max: 50 },
                { name: "payment_method", type: "text", required: true, presentable: true, max: 50, min: 1 },
                { name: "payment_status", type: "select", required: true, presentable: true, maxSelect: 1, values: ["pending_payment", "payment_under_review", "paid_confirmed", "cod_pending_confirmation", "cod_confirmed_pending_delivery", "failed", "refunded", "partially_refunded", "pending_gateway_redirect"] },
                { name: "order_status", type: "select", required: true, presentable: true, maxSelect: 1, values: ["pending_confirmation", "confirmed_pending_payment", "payment_confirmed_processing", "ready_for_fulfillment", "out_for_delivery", "fulfilled_completed", "cancelled_by_user", "cancelled_by_admin", "on_hold", "awaiting_payment_gateway"] },
                { name: "terms_agreed", type: "bool", required: true, presentable: true },
                { name: "admin_notes", type: "editor", required: false, presentable: false },
                { name: "user_ip_address", type: "text", required: false, presentable: false, max: 50 },
                { name: "user_agent_string", type: "text", required: false, presentable: false, max: 300 },
                { name: "subtotal_amount_egp", type: "number", required: true, presentable: true, min: 0 },
                { name: "total_udheya_service_fee_egp", type: "number", required: false, presentable: true, min: 0 },
                { name: "delivery_fee_applied_egp", type: "number", required: false, presentable: true, min: 0 },
                { name: "online_payment_fee_applied_egp", type: "number", required: false, presentable: true, min: 0 },
                { name: "total_amount_due_egp", type: "number", required: true, presentable: true, min: 0 },
                { name: "selected_display_currency", type: "text", required: false, presentable: true, max: 5 }
            ],
            indexes: [ "CREATE UNIQUE INDEX `idx_orders_order_id_text` ON `orders` (`order_id_text`)" ]
        }
    ];

    const seedData = {
        settings: [{
            xchgRates: { EGP: { rate_from_egp: 1, symbol: "LE", is_active: true }, USD: { rate_from_egp: 0.020, symbol: "$", is_active: true }, GBP: { rate_from_egp: 0.015, symbol: "£", is_active: true }, EUR: { rate_from_egp: 0.018, symbol: "€", is_active: true } },
            defCurr: "EGP", waNumRaw: "201117117489", waNumDisp: "+20 11 1711 7489", 
            promoEndISO: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(), 
            promoDiscPc: 10, promoActive: true, servFeeEGP: 750,
            delAreas: [ { id: "giza_west", name_en: "Giza West", name_ar: "غرب الجيزة", cities: [ { id: "october", name_en: "6th of October City", name_ar: "مدينة 6 أكتوبر", delivery_fee_egp: 150 }, { id: "zayed", name_en: "Sheikh Zayed", name_ar: "الشيخ زايد", delivery_fee_egp: 150 }, { id: "hadayek_october", name_en: "Hadayek October", name_ar: "حدائق أكتوبر", delivery_fee_egp: 120 } ] }, { id:"cairo_east", name_en:"Cairo East", name_ar:"شرق القاهرة", cities:[ {id:"tagamoa", name_en:"New Cairo (Tagamoa)", name_ar:"التجمع (القاهرة الجديدة)", delivery_fee_egp: 250 }, {id:"madinaty", name_en:"Madinaty", name_ar:"مدينتي", delivery_fee_egp: 300 }, {id:"shorouk", name_en:"El Shorouk", name_ar:"الشروق", delivery_fee_egp: 300} ] } ],
            payDetails: { vodafone_cash: "01076543210", instapay_ipn: "seed_user@instapay", revolut_details: "@seedUserRevolut", monzo_details: "monzo.me/seeduser", bank_name: "Seed Bank Egypt", bank_account_name: "Sheep Land Seed Account", bank_account_number: "1234567890123456", bank_iban: "EG00123400000000001234567890", bank_swift: "SEEDBANKEGCA" },
            enable_udheya_section: true, enable_livestock_section: true, enable_meat_section: true, enable_gatherings_section: true,
            slaughter_location_gmaps_url: "https://maps.app.goo.gl/GmWajZfqzPh4ZAey7", online_payment_fee_egp: 35,
            refund_policy_html: defaultRefundPolicyHTMLForSeed, app_email_sender_address: "noreply@sheepland.example.com", app_email_sender_name: "Sheep Land Orders"
        }],
        products: [
            { item_key: "baladi_udheya_45kg", product_category: "udheya", type_key: "baladi", type_name_en: "Baladi Udheya Sheep", type_name_ar: "خروف بلدي للأضحية", type_description_en: "Local breed, excellent for Udheya, known for its marbling and taste.", type_description_ar: "سلالة محلية، ممتازة للأضحية، معروفة بدهونها المتداخلة وطعمها الغني.", price_per_kg_egp: 230, variant_name_en: "Baladi Udheya (Approx. 45kg)", variant_name_ar: "أضحية بلدي (تقريباً ٤٥ كجم)", weight_range_text_en: "40-50kg", weight_range_text_ar: "٤٠-٥٠ كجم", avg_weight_kg: 45, base_price_egp: 10350, stock_available_pb: 10, is_active: true, sort_order_type: 1, sort_order_variant: 1 },
            { item_key: "baladi_udheya_55kg", product_category: "udheya", type_key: "baladi", type_name_en: "Baladi Udheya Sheep", type_name_ar: "خروف بلدي للأضحية", type_description_en: "Larger local breed, excellent for Udheya.", type_description_ar: "سلالة محلية أكبر حجمًا، ممتازة للأضحية.", price_per_kg_egp: 230, variant_name_en: "Baladi Udheya (Approx. 55kg)", variant_name_ar: "أضحية بلدي (تقريباً ٥٥ كجم)", weight_range_text_en: "50-60kg", weight_range_text_ar: "٥٠-٦٠ كجم", avg_weight_kg: 55, base_price_egp: 12650, stock_available_pb: 8, is_active: true, sort_order_type: 1, sort_order_variant: 2 },
            { item_key: "barki_udheya_50kg", product_category: "udheya", type_key: "barki", type_name_en: "Barki Udheya Sheep", type_name_ar: "خروف برقي للأضحية", type_description_en: "Desert breed, lean and flavorful meat, popular for Udheya.", type_description_ar: "سلالة صحراوية، لحم قليل الدهن وذو نكهة مميزة، شائع للأضحية.", price_per_kg_egp: 250, variant_name_en: "Barki Udheya (Approx. 50kg)", variant_name_ar: "أضحية برقي (تقريباً ٥٠ كجم)", weight_range_text_en: "45-55kg", weight_range_text_ar: "٤٥-٥٥ كجم", avg_weight_kg: 50, base_price_egp: 12500, stock_available_pb: 12, is_active: true, sort_order_type: 2, sort_order_variant: 1 },
            { item_key: "live_ram_baladi_large", product_category: "livestock_general", type_key: "live_ram", type_name_en: "Live Baladi Ram", type_name_ar: "كبش بلدي حي", type_description_en: "Large healthy Baladi ram for breeding or other purposes.", type_description_ar: "كبش بلدي كبير صحي للتربية أو أغراض أخرى.", variant_name_en: "Large Baladi Ram (70-80kg)", variant_name_ar: "كبش بلدي كبير (٧٠-٨٠كجم)", base_price_egp: 15000, stock_available_pb: 3, is_active: true, sort_order_type: 3, sort_order_variant: 1 },
            { item_key: "live_ewe_barki_medium", product_category: "livestock_general", type_key: "live_ewe", type_name_en: "Live Barki Ewe", type_name_ar: "نعجة برقي حية", type_description_en: "Healthy Barki ewe, excellent for breeding programs.", type_description_ar: "نعجة برقي صحية، ممتازة لبرامج التربية.", variant_name_en: "Medium Barki Ewe (50-60kg)", variant_name_ar: "نعجة برقي متوسطة (٥٠-٦٠كجم)", base_price_egp: 9500, stock_available_pb: 5, is_active: true, sort_order_type: 3, sort_order_variant: 2 },
            { item_key: "lamb_chops_kg", product_category: "meat_cuts", type_key: "lamb_cuts", type_name_en: "Lamb Cuts", type_name_ar: "قطعيات ضأن", type_description_en: "Fresh premium lamb chops, tender and juicy.", type_description_ar: "ريش ضأن طازجة فاخرة، طرية وغنية بالعصارة.", variant_name_en: "Lamb Chops (per kg)", variant_name_ar: "ريش ضاني (للكيلو)", weight_range_text_en: "Per kg", weight_range_text_ar: "للكيلو", base_price_egp: 450, stock_available_pb: 15, is_active: true, sort_order_type: 4, sort_order_variant: 1 },
            { item_key: "lamb_leg_whole", product_category: "meat_cuts", type_key: "lamb_cuts", type_name_en: "Lamb Cuts", type_name_ar: "قطعيات ضأن", type_description_en: "Whole lamb leg, perfect for roasting or special meals.", type_description_ar: "فخذة ضأن كاملة، مثالية للتحمير أو الوجبات الخاصة.", variant_name_en: "Whole Lamb Leg (Approx. 2-3kg)", variant_name_ar: "فخذة ضاني كاملة (تقريباً ٢-٣ كجم)", avg_weight_kg: 2.5, base_price_egp: 1100, stock_available_pb: 7, is_active: true, sort_order_type: 4, sort_order_variant: 2 },
            { item_key: "beef_mince_kg", product_category: "meat_cuts", type_key: "beef_cuts", type_name_en: "Beef Cuts", type_name_ar: "قطعيات بقري", type_description_en: "Freshly ground local beef, versatile for many dishes.", type_description_ar: "لحم بقري محلي مفروم طازج، متعدد الاستخدامات للعديد من الأطباق.", variant_name_en: "Beef Mince (per kg)", variant_name_ar: "لحم بقري مفروم (للكيلو)", weight_range_text_en: "Per kg", weight_range_text_ar: "للكيلو", base_price_egp: 380, stock_available_pb: 20, is_active: true, sort_order_type: 4, sort_order_variant: 3 },
            { item_key: "gathering_feast_medium", product_category: "gathering_package", type_key: "feast_pack", type_name_en: "Medium Feast Package", type_name_ar: "باقة وليمة متوسطة", type_description_en: "Complete package for a medium gathering. Includes one processed sheep (approx 50kg live weight), rice, and salads.", type_description_ar: "باقة متكاملة لوليمة متوسطة. تشمل خروف مجهز (وزن حي تقريباً ٥٠ كجم)، أرز، وسلطات.", variant_name_en: "Medium Feast (serves 15-20)", variant_name_ar: "وليمة متوسطة (تكفي ١٥-٢٠ فرد)", base_price_egp: 14500, stock_available_pb: 5, is_active: true, sort_order_type: 5, sort_order_variant: 1 },
            { item_key: "gathering_bbq_large", product_category: "gathering_package", type_key: "bbq_pack", type_name_en: "Large BBQ Package", type_name_ar: "باقة شواء كبيرة", type_description_en: "Generous assortment of marinated meats, skewers, and sides for a large BBQ event.", type_description_ar: "تشكيلة وفيرة من اللحوم المتبلة، الأسياخ، والأطباق الجانبية لحفل شواء كبير.", variant_name_en: "Large BBQ Pack (serves 20-25)", variant_name_ar: "باقة شواء كبيرة (تكفي ٢٠-٢٥ فردًا)", base_price_egp: 4500, stock_available_pb: 8, is_active: true, sort_order_type: 5, sort_order_variant: 2 }
        ]
    };

    async function safeExecute(operation, operationName, pbInstance = null) {
        const pb = pbInstance || new PocketBase(pbUrl);
        try {
            log(`Starting ${operationName}...`, 'i');
            const result = await operation(pb);
            log(`${operationName} completed successfully.`, 's');
            return { success: true, result };
        } catch (error) {
            log(`${operationName} FAILED: ${error.message}`, 'e');
            console.error(`${operationName} error:`, error);
            if (error.response && error.response.data) {
                log('Server error details:', 'e', error.response.data);
            } else if (error.data) {
                 log('Error details:', 'e', error.data);
            }
            if (error.stack) {
                log('Stack trace:', 'd', error.stack.split('\n').slice(0, 5).join('\n'));
            }
            return { success: false, error };
        } finally {
            if (pbInstance === null && pb.authStore.isValid && pb.authStore.isAdmin) {
                log(`Clearing temporary admin auth after ${operationName}`, 'd');
                pb.authStore.clear();
            }
        }
    }

    async function setupSchema(pb) {
        if (!await authenticateAdmin(pb)) return false;

        log('Processing initial collections (settings, products, users config, orders without relations)...', 'i');
        if (!await importOrUpdateCollections(pb, collectionsDefinition)) { 
             log('Initial collection setup failed.', 'e'); return false;
        }
        
        log('Processing relation fields for "orders" collection...', 'i');
        if (!await addOrVerifyRelationFields(pb)) {
             log('Relation field setup for "orders" failed.', 'e'); return false;
        }

        log('Schema setup phase completed successfully.', 's');
        return true;
    }
    
    async function importOrUpdateCollections(pb, collectionsToProcess) {
        log('Starting collection schema setup/update for specified collections...', 'i');
        for (const collectionDef of collectionsToProcess) {
            let existingCollection = null;
            const isAuthCollection = collectionDef.name === "users";
            const collectionNameToUse = isAuthCollection ? "_pb_users_auth_" : collectionDef.name;

            try {
                existingCollection = await pb.collections.getOne(collectionNameToUse);
                log(`Collection "${collectionNameToUse}" exists. Attempting update...`, 'i');
                
                // Follow dev doc: use 'fields' for individual operations
                const updatePayload = {
                    listRule: collectionDef.listRule,
                    viewRule: collectionDef.viewRule,
                    createRule: collectionDef.createRule,
                    updateRule: collectionDef.updateRule,
                    deleteRule: collectionDef.deleteRule,
                    fields: collectionDef.fields,
                };
                
                if (isAuthCollection && collectionDef.options) { 
                    updatePayload.options = { ... (existingCollection.options || {}), ...collectionDef.options };
                }
                
                await pb.collections.update(collectionNameToUse, updatePayload);
                log(`Collection "${collectionNameToUse}" updated successfully.`, 's');

            } catch (e) {
                if (e.status === 404 && !isAuthCollection) { 
                    log(`Collection "${collectionDef.name}" not found. Creating...`, 'i');
                    try {
                         const newCollectionData = {
                            name: collectionDef.name,
                            type: collectionDef.type,
                            system: collectionDef.system || false,
                            fields: collectionDef.fields, // Use 'fields' for individual operations
                            listRule: collectionDef.listRule !== undefined ? collectionDef.listRule : null,
                            viewRule: collectionDef.viewRule !== undefined ? collectionDef.viewRule : null,
                            createRule: collectionDef.createRule !== undefined ? collectionDef.createRule : null,
                            updateRule: collectionDef.updateRule !== undefined ? collectionDef.updateRule : null,
                            deleteRule: collectionDef.deleteRule !== undefined ? collectionDef.deleteRule : null,
                            options: collectionDef.options || {} 
                        };
                        
                        await pb.collections.create(newCollectionData); 
                        log(`Collection "${collectionDef.name}" created successfully.`, 's');
                    } catch (createError) {
                        log(`Error CREATING collection "${collectionDef.name}": ${createError.message}`, 'e', createError.data || createError);
                        return false; 
                    }
                } else if (e.status === 404 && isAuthCollection) {
                     log(`Auth collection "${collectionNameToUse}" should exist. This error indicates a problem with PocketBase itself or the system user collection is missing.`, 'e', e.data || e);
                     return false;
                } else { 
                    log(`Error processing collection "${collectionNameToUse}": ${e.message}`, 'e', e.data || e);
                    return false; 
                }
            }
            await new Promise(r => setTimeout(r, 100));
        }
        log('Collection schema processing finished.', 's');
        return true;
    }
    
    // Following dev doc guidelines for relation fields
    async function addOrVerifyRelationFields(pb) {
        log('Adding/Verifying relation fields...', 'i');
        let overallSuccess = true;
        
        // Get the actual users collection ID first
        let usersCollectionId;
        try {
            const usersCollection = await pb.collections.getOne("_pb_users_auth_");
            usersCollectionId = usersCollection.id;
            log(`Found users collection ID: ${usersCollectionId}`, 'd');
        } catch (error) {
            log(`Failed to get users collection: ${error.message}`, 'e');
            return false;
        }
        
        const relationsToAdd = [
            { 
                sourceCollectionName: "orders", 
                fieldName: "user", 
                targetCollectionId: usersCollectionId, // Use actual collection ID
                cascadeDelete: false, 
                minSelect: null, 
                maxSelect: 1, 
                displayFields: ["email", "name"],
                required: false, 
                presentable: true
            }
        ];

        for (const rel of relationsToAdd) {
            try {
                const sourceCollection = await pb.collections.getOne(rel.sourceCollectionName);
                let fields = sourceCollection.fields || [];
                const fieldExists = fields.find(f => f.name === rel.fieldName && f.type === "relation");

                if (fieldExists) {
                    log(`Relation field "${rel.fieldName}" in "${rel.sourceCollectionName}" exists. Verifying...`, 'w');
                    let fieldChanged = false;
                    
                    // Follow dev doc: use direct properties, not nested options
                    if (fieldExists.required !== rel.required) { fieldChanged = true; fieldExists.required = rel.required; }
                    if (fieldExists.presentable !== rel.presentable) { fieldChanged = true; fieldExists.presentable = rel.presentable; }
                    if (fieldExists.collectionId !== rel.targetCollectionId) { fieldChanged = true; fieldExists.collectionId = rel.targetCollectionId; }
                    if (fieldExists.cascadeDelete !== rel.cascadeDelete) { fieldChanged = true; fieldExists.cascadeDelete = rel.cascadeDelete; }
                    if (fieldExists.minSelect !== rel.minSelect) { fieldChanged = true; fieldExists.minSelect = rel.minSelect; }
                    if (fieldExists.maxSelect !== rel.maxSelect) { fieldChanged = true; fieldExists.maxSelect = rel.maxSelect; }
                    if (JSON.stringify(fieldExists.displayFields?.sort()) !== JSON.stringify(rel.displayFields?.sort())) {
                        fieldChanged = true;
                        fieldExists.displayFields = rel.displayFields;
                    }

                    if(fieldChanged) {
                        log(`Updating existing relation field "${rel.fieldName}" in "${rel.sourceCollectionName}".`, 'i');
                        await pb.collections.update(sourceCollection.id, { fields: fields });
                    }
                    
                    // Ensure API rules are correct for orders collection
                    if (rel.sourceCollectionName === "orders") {
                        const currentCollection = await pb.collections.getOne(rel.sourceCollectionName);
                        const expectedListRule = "(@request.auth.id != '' && user = @request.auth.id) || (@request.query.lookupOrderID != '' && order_id_text = @request.query.lookupOrderID) || @request.auth.admin = true";
                        const expectedViewRule = "(@request.auth.id != '' && user = @request.auth.id) || (@request.query.lookupOrderID != '' && order_id_text = @request.query.lookupOrderID) || @request.auth.admin = true";
                        
                        if (currentCollection.listRule !== expectedListRule || currentCollection.viewRule !== expectedViewRule) {
                            log('Updating orders collection API rules...', 'i');
                            await pb.collections.update(sourceCollection.id, {
                                listRule: expectedListRule,
                                viewRule: expectedViewRule
                            });
                            log('Orders collection API rules updated.', 's');
                        }
                    }
                    continue;
                }
                
                // Follow dev doc: use direct properties for relation fields
                const newField = {
                    name: rel.fieldName,
                    type: "relation",
                    required: rel.required,
                    presentable: rel.presentable,
                    collectionId: rel.targetCollectionId, // Direct property
                    cascadeDelete: rel.cascadeDelete, // Direct property
                    minSelect: rel.minSelect, // Direct property
                    maxSelect: rel.maxSelect, // Direct property
                    displayFields: rel.displayFields // Direct property
                };
                
                fields.push(newField);
                await pb.collections.update(sourceCollection.id, { fields: fields });
                log(`Relation field "${rel.fieldName}" added to "${rel.sourceCollectionName}" successfully.`, 's');
                
                // Update API rules now that user field exists
                if (rel.sourceCollectionName === "orders") {
                    log('Updating orders collection API rules with user field references...', 'i');
                    await pb.collections.update(sourceCollection.id, {
                        listRule: "(@request.auth.id != '' && user = @request.auth.id) || (@request.query.lookupOrderID != '' && order_id_text = @request.query.lookupOrderID) || @request.auth.admin = true",
                        viewRule: "(@request.auth.id != '' && user = @request.auth.id) || (@request.query.lookupOrderID != '' && order_id_text = @request.query.lookupOrderID) || @request.auth.admin = true"
                    });
                    log('Orders collection API rules updated successfully.', 's');
                }

            } catch (error) {
                log(`Error adding/verifying relation field "${rel.fieldName}" to "${rel.sourceCollectionName}": ${error.message}`, 'e', error.data || error);
                overallSuccess = false;
            }
            await new Promise(r => setTimeout(r, 100)); 
        }
        return overallSuccess;
    }

    async function seedCollectionData(pb, collectionName, seedItems, uniqueKeyField = null) {
        log(`Seeding data for ${collectionName}...`, 'i');
        let createdCount = 0, updatedCount = 0, errorCount = 0;
        
        for (const item of seedItems) {
            try {
                let existingRecord = null;
                if (uniqueKeyField && item[uniqueKeyField] !== undefined) { 
                    try { 
                        existingRecord = await pb.collection(collectionName).getFirstListItem(`${uniqueKeyField}="${pb.utils.escapeFilterValue(item[uniqueKeyField])}"`); 
                    } catch (e) { /* Record doesn't exist, will create */ }
                } else if (!uniqueKeyField && collectionName === "settings") { 
                    const list = await pb.collection(collectionName).getList(1, 1);
                    if (list.items.length > 0) existingRecord = list.items[0];
                }

                if (existingRecord) {
                    await pb.collection(collectionName).update(existingRecord.id, item);
                    updatedCount++;
                } else {
                    await pb.collection(collectionName).create(item);
                    createdCount++;
                }
            } catch (error) {
                log(`Error processing item in ${collectionName} (${item[uniqueKeyField] || 'new item'}): ${error.message}`, 'e');
                console.error('Seed error:', error);
                if (error.response?.data) log('Seed error details:', 'e', error.response.data);
                errorCount++;
            }
        }
        log(`Seeding ${collectionName} complete. Created: ${createdCount}, Updated: ${updatedCount}, Errors: ${errorCount}`, errorCount > 0 ? 'w' : 's');
        return { created: createdCount, updated: updatedCount, errors: errorCount };
    }

    async function setupSeedData(pb) {
        log('=== SEED DATA PHASE ===', 'i');
        if (!await authenticateAdmin(pb)) return false;

        log('Pausing for 1 second before seeding...', 'i');
        await new Promise(resolve => setTimeout(resolve, 1000));

        let anySeedErrors = false;
        const settingsResult = await seedCollectionData(pb, 'settings', seedData.settings);
        if(settingsResult.errors > 0) anySeedErrors = true;

        const productsResult = await seedCollectionData(pb, 'products', seedData.products, 'item_key');
        if(productsResult.errors > 0) anySeedErrors = true;
        
        if (anySeedErrors) {
            log('Seed data setup completed with errors.', 'w');
            return false; 
        }
        log('Seed data setup completed successfully.', 's');
        return true;
    }
    
    function validateProductionSecurity() {
        const warnings = [];
        collectionsDefinition.forEach(collection => {
            const collName = collection.name === "users" ? "_pb_users_auth_" : collection.name;
            if ((collection.createRule === "" || collection.createRule === "@everyone") && collName !== "orders" && collName !== "_pb_users_auth_") {
                warnings.push(`Collection "${collName}" has public createRule.`);
            }
           
            if (collection.type === "auth" && (collection.name === "users" || collection.name === "_pb_users_auth_")) {
                 const authOptions = collection.options || {};
                if (authOptions.requireEmailVerification === false) {
                    warnings.push(`Auth Collection "${collName}" has 'requireEmailVerification' set to false. Recommended to enable for production.`);
                }
            }
        });
        
        if (ADM_E === 'admin@example.com' && ADM_P === 'unifiedpassword') {
            warnings.push('Using default admin credentials (admin@example.com / unifiedpassword) - CHANGE FOR PRODUCTION!');
        }
        
        if (warnings.length > 0) {
            log('🚨 PRODUCTION SECURITY WARNINGS:', 'e');
            warnings.forEach(warning => log(`⚠️  ${warning}`, 'w'));
            log('🚨 REVIEW AND SECURE THESE BEFORE PRODUCTION DEPLOYMENT', 'e');
        } else {
            log('✓ Production security preliminary checks passed (always review rules manually for production).', 's');
        }
        return warnings.length === 0;
    }

    // Event handlers following dev doc best practices
    runFullSetupButton.onclick = async () => {
        [runFullSetupButton, runSchemaOnlyButton, runSeedOnlyButton].forEach(b => b.disabled = true);
        outputDiv.innerHTML = ''; 
        log('=== FULL SETUP PROCESS STARTED ===', 'i');
        const pb = new PocketBase(pbUrl);
        let schemaSuccess = false;
        
        try {
            const schemaResult = await safeExecute(async (pbInstance) => setupSchema(pbInstance), "Schema Setup", pb);
            schemaSuccess = schemaResult.success;

            if (!schemaSuccess) {
                log('Schema setup failed, aborting full setup', 'e');
            } else {
                const seedResult = await safeExecute(async (pbInstance) => setupSeedData(pbInstance), "Seed Data", pb);
                if (!seedResult.success) {
                    log('Seed data setup failed, but schema might be okay.', 'w');
                }
                log('=== FULL SETUP COMPLETED ===', seedResult.success ? 's' : 'w');
                validateProductionSecurity();
            }
        } catch (error) {
            log(`CRITICAL UNHANDLED ERROR during full setup: ${error.message}`, 'e');
            console.error('Full setup unhandled error:', error);
        } finally {
            if (pb.authStore.isValid && pb.authStore.isAdmin) pb.authStore.clear();
            [runFullSetupButton, runSchemaOnlyButton].forEach(b => b.disabled = false);
             runSeedOnlyButton.disabled = !schemaSuccess; 
            log('Process finished, admin auth cleared if used.', 'i');
        }
    };

    runSchemaOnlyButton.onclick = async () => {
        [runFullSetupButton, runSchemaOnlyButton, runSeedOnlyButton].forEach(b => b.disabled = true);
        outputDiv.innerHTML = ''; 
        log('=== SCHEMA ONLY SETUP STARTED ===', 'i');
        const pb = new PocketBase(pbUrl);
        let success = false;
        
        try {
            const schemaResult = await safeExecute(async (pbInstance) => setupSchema(pbInstance), "Schema Setup", pb);
            success = schemaResult.success;
            if (success) {
                log('Schema setup completed successfully', 's');
                validateProductionSecurity();
            } else {
                 log('Schema setup FAILED', 'e');
            }
        } catch (error) {
            log(`UNHANDLED ERROR during schema setup: ${error.message}`, 'e');
            console.error('Schema error:', error);
        } finally {
            if (pb.authStore.isValid && pb.authStore.isAdmin) pb.authStore.clear();
            [runFullSetupButton, runSchemaOnlyButton].forEach(b => b.disabled = false);
            runSeedOnlyButton.disabled = !success;
            log('Schema only process finished, admin auth cleared if used.', 'i');
        }
    };

    runSeedOnlyButton.onclick = async () => {
        [runFullSetupButton, runSchemaOnlyButton, runSeedOnlyButton].forEach(b => b.disabled = true);
        outputDiv.innerHTML = ''; 
        log('=== SEED DATA ONLY STARTED ===', 'i');
        const pb = new PocketBase(pbUrl);
        let success = false;
        
        try {
            const seedResult = await safeExecute(async (pbInstance) => setupSeedData(pbInstance), "Seed Data", pb);
            success = seedResult.success;
             if (success) {
                log('Seed data setup completed successfully', 's');
            } else {
                 log('Seed data setup FAILED or completed with errors.', 'w');
            }
        } catch (error) {
            log(`UNHANDLED ERROR during seed setup: ${error.message}`, 'e');
            console.error('Seed error:', error);
        } finally {
            if (pb.authStore.isValid && pb.authStore.isAdmin) pb.authStore.clear();
            [runFullSetupButton, runSchemaOnlyButton, runSeedOnlyButton].forEach(b => b.disabled = false);
            log('Seed data only process finished, admin auth cleared if used.', 'i');
        }
    };
</script>
</body>
</html>
===== src/main.js =====
// Filename: /script.js
document.addEventListener('alpine:init', () => {
    const initialCheckoutForm = {
        customer_name: "", customer_phone: "", customer_email: "",
        delivery_option: "self_pickup_or_internal_distribution",
        delivery_city_id: "", delivery_address: "", delivery_instructions: "", delivery_time_slot: "9AM-11AM",
        payment_method: "fa", 
        terms_agreed: false,
        total_service_fee_egp: 0, delivery_fee_egp: 0, online_payment_fee_applied_egp: 0,
        final_total_egp: 0, user_id: null
    };

    const initialTempUdheyaConfig = {
        itemKey: null, niyyahNames: "", serviceOption: "standard_service",
        sacrificeDay: "day1_10_dhul_hijjah", viewingPreference: "none",
        distribution: { choice: "me", splitOption: "", customSplitText: "" },
        isBuyNowIntent: false 
    };

    const payMethOptsList = [
        { id: 'online_card', title: 'Online Payment (Card)', imgSrc: 'card_payment.svg', requiresServerAction: true },
        { id: 'revolut', title: 'Revolut', imgSrc: 'revolut.svg' },
        { id: 'monzo', title: 'Monzo', imgSrc: 'monzo.svg' },
        { id: 'ip', title: 'InstaPay', imgSrc: 'instapay.svg' },
        { id: 'fa', title: 'Fawry', imgSrc: 'fawry.svg' },
        { id: 'vo', title: 'Vodafone Cash', imgSrc: 'vodafone.svg' },
        { id: 'cod', title: 'Cash on Delivery', imgSrc: 'cod.svg' },
        { id: 'bank_transfer', title: 'Bank Transfer', imgSrc: 'bank_transfer.svg' }
    ];

    const sacrificeDayMapInternal = {
        "day1_10_dhul_hijjah": { "en": "Day 1 of Eid (10th Dhul Hijjah)", "ar": "اليوم الأول (10 ذو الحجة)" },
        "day2_11_dhul_hijjah": { "en": "Day 2 of Eid (11th Dhul Hijjah)", "ar": "اليوم الثاني (11 ذو الحجة)" },
        "day3_12_dhul_hijjah": { "en": "Day 3 of Eid (12th Dhul Hijjah)", "ar": "اليوم الثالث (12 ذو الحجة)" },
        "day4_13_dhul_hijjah": { "en": "Day 4 of Eid (13th Dhul Hijjah)", "ar": "اليوم الرابع (13 ذو الحجة)" },
    };

    const pageTitles = {
        home: "Premium Udheya, Livestock & Meats",
        udheya: "Udheya Ordering",
        livestock: "Our Livestock",
        meat: "Fresh Meat Cuts",
        gatherings: "Gatherings & Feasts",
        checkout: "Checkout",
        auth: "Login / Register",
        account: "My Account"
    };

    Alpine.data('udh', () => ({
        load: { init: true, status: false, checkout: false, auth: false, orders: false, addingToCart: null, configuringUdheya: null },
        settings: {
            xchgRates: { EGP: { rate_from_egp: 1, symbol: "LE", is_active: true } },
            defCurr: "EGP", waNumRaw: "", waNumDisp: "",
            promoEndISO: new Date().toISOString(), promoDiscPc: 0, promoActive: false,
            servFeeEGP: 0, delAreas: [], payDetails: {},
            enable_udheya_section: true, enable_livestock_section: true, enable_meat_section: true, enable_gatherings_section: true,
            slaughter_location_gmaps_url: "", online_payment_fee_egp: 0, refundPolicyHTMLContent: "<p>Loading policy...</p>",
            app_email_sender_address: "noreply@example.com", app_email_sender_name: "Sheep Land"
        },
        prodOpts: { udheya: [], livestock_general: [], meat_cuts: [], gathering_package: [] },
        cartItems: [], 
        apiErr: null, usrApiErr: "",
        get availPayMeths() { return payMethOptsList; },
        
        isMobNavOpen: false, isCartOpen: false, isRefundModalOpen: false, isOrderStatusModalOpen: false,
        isUdheyaConfigModalOpen: false,
        currentPage: 'home', // Default page
        currentProductPage: '', // For specific product list messages
        currLang: "en", curr: "EGP",
        cd: { days: "00", hours: "00", mins: "00", secs: "00", ended: false },
        cdTimer: null,
        
        checkoutForm: JSON.parse(JSON.stringify(initialCheckoutForm)),
        tempUdheyaConfig: JSON.parse(JSON.stringify(initialTempUdheyaConfig)), 
        configuringUdheyaItem: null, 
        addedToCartMsg: { text: null, isError: false, pageContext: '' },
        
        statRes: null, statNotFound: false, lookupOrderID: "",
        orderConf: { show: false, orderID: "", totalEgp: 0, items: [], paymentInstructions: "", customerEmail: "" },
        
        currentUser: null, 
        auth: { email: "", password: "", passwordConfirm: "", name: "" , view: 'login' }, 
        userOrders: [], 
        redirectAfterLogin: null,

        errs: {}, 
        errMsgs: { 
            required: { en: "This field is required.", ar: "هذا الحقل مطلوب." },
            select: { en: "Please make a selection.", ar: "يرجى الاختيار." },
            email: { en: "Please enter a valid email address.", ar: "يرجى إدخال بريد إلكتروني صحيح." },
            phone: { en: "Please enter a valid phone number.", ar: "يرجى إدخال رقم هاتف صحيح." },
            password_mismatch: { en: "Passwords do not match.", ar: "كلمات المرور غير متطابقة." },
            password_short: { en: "Password must be at least 8 characters.", ar: "يجب أن تكون كلمة المرور 8 أحرف على الأقل." },
            terms_agreed: { en: "You must agree to the terms and refund policy.", ar: "يجب أن توافق على الشروط وسياسة الاسترداد." },
            udheya_animal: { en: "Please select an Udheya animal and weight.", ar: "يرجى اختيار حيوان الأضحية والوزن."},
            udheya_service_config: { en: "Please select an Udheya service option.", ar: "يرجى اختيار خيار خدمة الأضحية."},
            udheya_sacrifice_day_config: { en: "Please select a sacrifice day.", ar: "يرجى اختيار يوم الذبح."},
            udheya_distribution_choice_config: { en: "Please select a distribution choice.", ar: "يرجى اختيار طريقة التوزيع."},
            udheya_split_option_config: { en: "Please specify split details or choose an option.", ar: "يرجى تحديد تفاصيل التقسيم أو اختيار خيار."},
            auth_login: { en: 'Login failed. Please check credentials.', ar: 'فشل الدخول. تحقق من البيانات.'},
            auth_register: { en: 'Registration failed. Please try again.', ar: 'فشل التسجيل. حاول مرة أخرى.'},
            auth_name: {en: 'Name is required for registration.', ar: 'الاسم مطلوب للتسجيل.'},
            auth_email: {en: 'A valid email is required.', ar: 'البريد الإلكتروني مطلوب وصحيح.'},
            auth_password: {en: 'Password is required.', ar: 'كلمة المرور مطلوبة.'},
            auth_passwordConfirm: {en: 'Password confirmation is required.', ar: 'تأكيد كلمة المرور مطلوب.'},
            orders_fetch: { en: 'Could not fetch your orders.', ar: 'تعذر جلب طلباتك.'}
        },
        allCities: [], isDelFeeVar: false, 
        
        pageTitle() {
            const title = pageTitles[this.currentPage] || "Premium Udheya, Livestock & Meats";
            return this.currLang === 'ar' ? this.translatePageTitle(title) : title;
        },
        translatePageTitle(englishTitle) {
            // Basic translation for titles, can be expanded
            const translations = {
                "Premium Udheya, Livestock & Meats": "أضاحي ومواشي ولحوم فاخرة",
                "Udheya Ordering": "طلب الأضحية",
                "Our Livestock": "مواشينا",
                "Fresh Meat Cuts": "قطعيات اللحوم الطازجة",
                "Gatherings & Feasts": "الولائم والمناسبات",
                "Checkout": "إتمام الطلب",
                "Login / Register": "دخول / تسجيل",
                "My Account": "حسابي"
            };
            return translations[englishTitle] || englishTitle;
        },
        
        get cartItemCount() { return this.cartItems.reduce((sum, item) => sum + item.quantity, 0); },

        async initApp() {
            this.load.init = true; this.apiErr = null; this.usrApiErr = "";
            this.determineCurrentPageFromURL(); // Sets initial currentPage
            
            const pb = new PocketBase('/'); this.pb = pb;
            
            if (pb.authStore.isValid && pb.authStore.model) {
                this.currentUser = pb.authStore.model;
            } else {
                pb.authStore.clear(); 
                this.currentUser = null;
            }
            this.loadCartFromStorage(); 

            try {
                const rs = await pb.collection('settings').getFirstListItem('id!=""', { requestKey: "settings_init_global" });
                if (rs) {
                    this.settings.xchgRates = rs.xchgRates || this.settings.xchgRates;
                    this.settings.defCurr = rs.defCurr || this.settings.defCurr;
                    this.settings.waNumRaw = rs.waNumRaw || ""; this.settings.waNumDisp = rs.waNumDisp || "";
                    this.settings.promoEndISO = rs.promoEndISO || new Date().toISOString();
                    this.settings.promoDiscPc = Number(rs.promoDiscPc) || 0;
                    this.settings.promoActive = typeof rs.promoActive === 'boolean' ? rs.promoActive : false;
                    this.settings.servFeeEGP = Number(rs.servFeeEGP) || 0;
                    this.settings.delAreas = Array.isArray(rs.delAreas) ? rs.delAreas : [];
                    this.settings.payDetails = typeof rs.payDetails === 'object' && rs.payDetails !== null ? rs.payDetails : {};
                    this.settings.enable_udheya_section = typeof rs.enable_udheya_section === 'boolean' ? rs.enable_udheya_section : true;
                    this.settings.enable_livestock_section = typeof rs.enable_livestock_section === 'boolean' ? rs.enable_livestock_section : true;
                    this.settings.enable_meat_section = typeof rs.enable_meat_section === 'boolean' ? rs.enable_meat_section : true;
                    this.settings.enable_gatherings_section = typeof rs.enable_gatherings_section === 'boolean' ? rs.enable_gatherings_section : true;
                    this.settings.slaughter_location_gmaps_url = rs.slaughter_location_gmaps_url || "";
                    this.settings.online_payment_fee_egp = Number(rs.online_payment_fee_egp) || 0;
                    this.settings.refundPolicyHTMLContent = rs.refund_policy_html || this.generateDefaultRefundPolicyHTML();
                    this.settings.app_email_sender_address = rs.app_email_sender_address || "noreply@example.com";
                    this.settings.app_email_sender_name = rs.app_email_sender_name || "Sheep Land";
                } else { this.usrApiErr = "App configuration could not be loaded. Essential features may be unavailable.";}

                const allProducts = await pb.collection('products').getFullList({ filter: 'is_active = true', sort:'+sort_order_type,+sort_order_variant', requestKey: "all_products_init_global" });
                const categorizeAndGroupProducts = (products, categoryFilter) => {
                    const categoryProducts = products.filter(p => p.product_category === categoryFilter);
                    const grouped = {};
                    categoryProducts.forEach(p => {
                        if (!grouped[p.type_key]) { grouped[p.type_key] = { valKey: p.type_key, nameEn: p.type_name_en, nameAr: p.type_name_ar, descEn: p.type_description_en, descAr: p.type_description_ar, priceKgEgp: p.price_per_kg_egp || 0, wps: [] }; }
                        grouped[p.type_key].wps.push({ itemKey: p.item_key, varIdPb: p.id, nameENSpec: p.variant_name_en, nameARSpec: p.variant_name_ar, wtRangeEn: p.weight_range_text_en, wtRangeAr: p.weight_range_text_ar, avgWtKg: p.avg_weight_kg, priceEGP: p.base_price_egp, stock: p.stock_available_pb, isActive: p.is_active, product_category: p.product_category, type_key: p.type_key, type_name_en: p.type_name_en, type_name_ar: p.type_name_ar, descEn: p.type_description_en, descAr: p.type_description_ar });
                    });
                    return Object.values(grouped);
                };
                this.prodOpts.udheya = categorizeAndGroupProducts(allProducts, 'udheya');
                this.prodOpts.livestock_general = categorizeAndGroupProducts(allProducts, 'livestock_general');
                this.prodOpts.meat_cuts = categorizeAndGroupProducts(allProducts, 'meat_cuts');
                this.prodOpts.gathering_package = categorizeAndGroupProducts(allProducts, 'gathering_package');
            
                let cities = []; (this.settings.delAreas || []).forEach(gov => { 
                    if (gov.cities && Array.isArray(gov.cities) && gov.cities.length > 0) { gov.cities.forEach(city => { cities.push({ id: `${gov.id}_${city.id}`, nameEn: `${gov.name_en} - ${city.name_en}`, nameAr: `${gov.name_ar} - ${city.name_ar}`, delFeeEgp: city.delivery_fee_egp, govId: gov.id }); });
                    } else if (gov.delivery_fee_egp !== undefined) { cities.push({ id: gov.id, nameEn: gov.name_en, nameAr: gov.name_ar, delFeeEgp: gov.delivery_fee_egp, govId: gov.id }); }
                });
                this.allCities = cities.sort((a,b) => a.nameEn.localeCompare(b.nameEn));
                
            } catch (e) { this.apiErr = String(e.message || "Could not load initial application data."); this.usrApiErr = "Error loading essential data. Please try refreshing the page or contact support if the issue persists."; console.error("Init App Error:", e); }
            
            this.curr = this.settings.defCurr || "EGP"; this.startCd(); this.clrAllErrs();
            
            // Call page-specific initializers based on current page
            if (this.currentPage === 'checkout') this.initCheckoutPage();
            else if (this.currentPage === 'auth') this.initAuthPage();
            else if (this.currentPage === 'account') this.initAccountPage();
            else this.calculateFinalTotal(); // For cart updates on other pages
            
            this.load.init = false;
            window.addEventListener('hashchange', () => this.determineCurrentPageFromURL());
        },
        determineCurrentPageFromURL() {
            const hash = window.location.hash.replace(/^#/, '');
            const validPages = ['home', 'udheya', 'livestock', 'meat', 'gatherings', 'checkout', 'auth', 'account'];
            if (hash && validPages.includes(hash.split('?')[0])) {
                this.currentPage = hash.split('?')[0];
            } else {
                this.currentPage = 'home'; // Default page
            }
            this.updatePageSpecifics();
        },
        updatePageSpecifics() {
            // This function is called when currentPage changes.
            // Reset orderConf if not on checkout page
            if (this.currentPage !== 'checkout' && this.orderConf.show) {
                this.orderConf = { show: false, orderID: "", totalEgp: 0, items: [], paymentInstructions: "", customerEmail: "" };
            }

            // Run page-specific initializers
            if (this.currentPage === 'checkout') this.initCheckoutPage();
            else if (this.currentPage === 'auth') this.initAuthPage();
            else if (this.currentPage === 'account') this.initAccountPage();

            // Set currentProductPage context for messages
            if (['udheya', 'livestock', 'meat', 'gatherings'].includes(this.currentPage)) {
                this.currentProductPage = this.currentPage;
            } else {
                this.currentProductPage = '';
            }

            // Scroll to top of new content
            this.$nextTick(() => {
                const mainContentArea = document.querySelector(`main > section[x-show="currentPage === '${this.currentPage}']`);
                if (mainContentArea) {
                    let offset = document.querySelector('.site-head')?.offsetHeight || 0;
                     window.scrollTo({ top: mainContentArea.offsetTop - offset - 10, behavior: 'smooth' });
                } else {
                    window.scrollTo({top: 0, behavior: 'smooth'});
                }
            });
        },
        navigateToOrScroll(targetPage, targetAnchor = null) {
            if (targetPage.startsWith('#')) { // Internal anchor link on the same conceptual page
                targetAnchor = targetPage.substring(1);
                targetPage = this.currentPage; // Stay on current page view
            }
            
            const pageName = targetPage.split('?')[0]; // Remove query params for page name
            
            if (this.currentPage !== pageName) {
                this.currentPage = pageName;
                window.location.hash = targetPage; // Update hash for deep linking and history
            } else {
                // If already on the page, just scroll to anchor if provided
                if (targetAnchor) {
                    const element = document.getElementById(targetAnchor);
                    if (element) {
                        let offset = document.querySelector('.site-head')?.offsetHeight || 0;
                        window.scrollTo({ top: element.getBoundingClientRect().top + window.pageYOffset - offset - 10, behavior: 'smooth' });
                    }
                } else {
                    // Scroll to top of current section if no anchor
                     const mainContentArea = document.querySelector(`main > section[x-show="currentPage === '${this.currentPage}']`);
                     if (mainContentArea) {
                         let offset = document.querySelector('.site-head')?.offsetHeight || 0;
                         window.scrollTo({ top: mainContentArea.offsetTop - offset - 10, behavior: 'smooth' });
                     } else {
                         window.scrollTo({top: 0, behavior: 'smooth'});
                     }
                }
            }
            // updatePageSpecifics will be called by hashchange listener or directly if needed
        },

        generateDefaultRefundPolicyHTML() {
            return `<div class="bil-row"><p class="en">Welcome to Sheep Land. We strive to provide the best quality Udheya and livestock services. Please read our policy carefully.</p><p class="ar" dir="rtl">مرحباً بكم في أرض الأغنام. نسعى جاهدين لتقديم أفضل جودة في خدمات الأضاحي والمواشي. يرجى قراءة سياستنا بعناية.</p></div> <h3 class="bil-spread modal-section-title"><span class="en">Udheya Orders</span><span class="ar" dir="rtl">طلبات الأضاحي</span></h3> <div class="bil-row"><p class="en">Due to the nature of Udheya (Qurbani/Sacrifice), which is a time-sensitive religious observance, our refund and cancellation policy is as follows:</p><p class="ar" dir="rtl">نظرًا لطبيعة الأضحية، وهي شعيرة دينية مرتبطة بوقت محدد، فإن سياسة الاسترداد والإلغاء لدينا هي كما يلي:</p></div> <ul class="modal-list"><li><div class="bil-row"><p class="en"><strong>Cancellations Before [Specify Cut-off Date, e.g., 72 hours before Eid Day 1]:</strong> Full refund, less any payment processing fees.</p><p class="ar" dir="rtl"><strong>الإلغاء قبل [تحديد تاريخ القطع، مثلاً، ٧٢ ساعة قبل أول أيام العيد]:</strong> استرداد كامل، مخصومًا منه رسوم معالجة الدفع.</p></div></li><li><div class="bil-row"><p class="en"><strong>Cancellations After Cut-off:</strong> Non-refundable as animal is committed.</p><p class="ar" dir="rtl"><strong>الإلغاء بعد تاريخ القطع:</strong> غير قابل للاسترداد لالتزام الحيوان.</p></div></li><li><div class="bil-row"><p class="en"><strong>Non-Fulfilment by Us:</strong> Full refund if we cannot fulfill order.</p><p class="ar" dir="rtl"><strong>عدم التنفيذ من طرفنا:</strong> استرداد كامل إذا لم نتمكن من تنفيذ الطلب.</p></div></li></ul> <h3 class="bil-spread modal-section-title"><span class="en">Other Products</span><span class="ar" dir="rtl">المنتجات الأخرى</span></h3> <ul class="modal-list"><li><div class="bil-row"><p class="en"><strong>Cancellations:</strong> Up to [e.g., 24 hours] before delivery for full refund (minus processing/customization costs).</p><p class="ar" dir="rtl"><strong>الإلغاء:</strong> حتى [مثلاً، ٢٤ ساعة] قبل التوصيل لاسترداد كامل (ناقص تكاليف المعالجة/التخصيص).</p></div></li><li><div class="bil-row"><p class="en"><strong>Quality Issues:</strong> Contact within [e.g., 6 hours] of receipt with evidence for review.</p><p class="ar" dir="rtl"><strong>مشاكل الجودة:</strong> تواصل خلال [مثلاً، ٦ ساعات] من الاستلام مع إثبات للمراجعة.</p></div></li></ul> <h3 class="bil-spread modal-section-title"><span class="en">General</span><span class="ar" dir="rtl">عام</span></h3> <div class="bil-row"><p class="en">Refunds processed within [e.g., 7-14] business days. Policy subject to change.</p><p class="ar" dir="rtl">تتم معالجة المبالغ المستردة خلال [مثلاً، ٧-١٤] يوم عمل. السياسة قابلة للتغيير.</p></div>`;
        },
        openCart() { this.isCartOpen = true; document.body.classList.add('overflow-hidden'); },
        closeCart() { this.isCartOpen = false; document.body.classList.remove('overflow-hidden'); },
        addItemToCart(productVariant, udheyaConfigDetails = null) {
            this.load.addingToCart = productVariant.itemKey;
            this.addedToCartMsg = { text: null, isError: false, pageContext: this.currentProductPage };
            
            if (!productVariant || !productVariant.itemKey || productVariant.stock <= 0) {
                this.addedToCartMsg = { text: { en: 'This item is out of stock.', ar: 'هذا المنتج غير متوفر.' }, isError: true, pageContext: this.currentProductPage };
                this.load.addingToCart = null; setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 3000); return;
            }
            const isUdheya = productVariant.product_category === 'udheya';
            const existingItemIndex = this.cartItems.findIndex(item => item.itemKey === productVariant.itemKey && item.product_category === productVariant.product_category);

            if (existingItemIndex > -1) {
                if (isUdheya) {
                    this.addedToCartMsg = { text: { en: 'This Udheya is already in your cart. You can modify details during checkout if needed.', ar: 'هذه الأضحية موجودة بالفعل في سلتك. يمكنك تعديل التفاصيل عند الدفع إذا لزم الأمر.' }, isError: true, pageContext: this.currentProductPage };
                    this.load.addingToCart = null; setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 5000); return;
                }
                if (this.cartItems[existingItemIndex].quantity < productVariant.stock) { this.cartItems[existingItemIndex].quantity++; } 
                else { this.addedToCartMsg = { text: { en: 'Stock limit reached for this item.', ar: 'لقد وصلت إلى الحد الأقصى للمخزون لهذا المنتج.' }, isError: true, pageContext: this.currentProductPage }; this.load.addingToCart = null; setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 3000); return; }
            } else {
                const newItem = { ...productVariant, quantity: 1, uniqueIdInCart: Date.now().toString(36) + Math.random().toString(36).substring(2) };
                if (isUdheya && udheyaConfigDetails) { newItem.udheya_details = { ...udheyaConfigDetails }; }
                this.cartItems.push(newItem);
            }
            this.saveCartToStorage(); this.calculateFinalTotal(); 
            this.addedToCartMsg = { text: { en: `${productVariant.nameENSpec} added to cart.`, ar: `تمت إضافة ${productVariant.nameARSpec} إلى السلة.` }, isError: false, pageContext: this.currentProductPage };
            this.load.addingToCart = null;
            if (this.isUdheyaConfigModalOpen && udheyaConfigDetails && !udheyaConfigDetails.isBuyNowIntent) this.closeUdheyaConfiguration(); 
            setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 3000);
        },
        async buyNow(productVariant, udheyaConfigDetails = null) {
            this.load.addingToCart = productVariant.itemKey; 
            this.addedToCartMsg = { text: null, isError: false, pageContext: this.currentProductPage }; 
            this.clrAllErrs(); 

            if (!productVariant || !productVariant.itemKey || productVariant.stock <= 0) {
                this.addedToCartMsg = { text: { en: 'This item is out of stock.', ar: 'هذا المنتج غير متوفر.' }, isError: true, pageContext: this.currentProductPage };
                this.load.addingToCart = null;
                setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 3000);
                return;
            }

            const buyNowItem = {
                ...productVariant,
                quantity: 1, 
                uniqueIdInCart: Date.now().toString(36) + Math.random().toString(36).substring(2)
            };

            if (productVariant.product_category === 'udheya') {
                if (!udheyaConfigDetails) {
                    this.openUdheyaConfiguration(productVariant, true); 
                    this.load.addingToCart = null;
                    return;
                }
                buyNowItem.udheya_details = { ...udheyaConfigDetails };
            }
            
            try {
                localStorage.setItem('sheepLandBuyNowItem', JSON.stringify(buyNowItem));
            } catch(e) {
                console.error("Error saving Buy Now item to localStorage", e);
                this.usrApiErr = "Could not proceed with Buy Now. Please try adding to cart.";
                this.load.addingToCart = null;
                return;
            }
            
            this.load.addingToCart = null;
            if (this.isUdheyaConfigModalOpen) this.closeUdheyaConfiguration();
            this.navigateToOrScroll('checkout?buyNow=true'); // Will update hash and trigger page change
        },
        removeFromCart(uniqueIdInCart) { this.cartItems = this.cartItems.filter(item => item.uniqueIdInCart !== uniqueIdInCart); this.saveCartToStorage(); this.calculateFinalTotal();},
        updateCartQuantity(uniqueIdInCart, newQuantity) { 
            const itemIndex = this.cartItems.findIndex(i => i.uniqueIdInCart === uniqueIdInCart);
            if (itemIndex > -1) { 
                const item = this.cartItems[itemIndex];
                const qty = Math.max(1, parseInt(newQuantity) || 1);
                if (item.product_category === 'udheya' && qty > 1) { this.addedToCartMsg = { text: { en: 'Only one of each Udheya can be added.', ar: 'يمكن إضافة أضحية واحدة فقط من كل نوع.'}, isError: true, pageContext: 'cart' }; item.quantity = 1; setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 3000); } 
                else if (qty <= item.stock) { item.quantity = qty; this.addedToCartMsg = { text: null, isError: false, pageContext: '' }; } 
                else { item.quantity = item.stock; this.addedToCartMsg = { text: { en: 'Requested quantity exceeds available stock.', ar: 'الكمية المطلوبة تتجاوز المخزون المتاح.'}, isError: true, pageContext: 'cart' }; setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext: '' }, 3000);}
            } this.saveCartToStorage(); this.calculateFinalTotal();
        },
        getSubtotalForItem(cartItem) { let itemTotal = cartItem.priceEGP * cartItem.quantity; if (cartItem.product_category === 'udheya' && cartItem.udheya_details?.serviceOption === 'standard_service') { itemTotal += (this.settings.servFeeEGP || 0); } return itemTotal;},
        calculateCartSubtotal() { return this.cartItems.reduce((total, item) => total + (item.priceEGP * item.quantity), 0);},
        calculateTotalServiceFee() { return this.cartItems.reduce((totalFee, item) => { if (item.product_category === 'udheya' && item.udheya_details?.serviceOption === 'standard_service') { return totalFee + (this.settings.servFeeEGP || 0); } return totalFee; }, 0);},
        calculateCartTotal() { const subtotal = this.calculateCartSubtotal(); const serviceFee = this.calculateTotalServiceFee(); return subtotal + serviceFee;},
        saveCartToStorage() { try { localStorage.setItem('sheepLandCart-' + (this.currentUser?.id || 'guest'), JSON.stringify(this.cartItems)); } catch(e){ console.error("Error saving cart to localStorage", e); } },
        loadCartFromStorage() { try { const storedCart = localStorage.getItem('sheepLandCart-' + (this.currentUser?.id || 'guest')); if (storedCart) { this.cartItems = JSON.parse(storedCart); } else { this.cartItems = [];} } catch(e){ console.error("Error loading/parsing cart from localStorage", e); this.cartItems = []; localStorage.removeItem('sheepLandCart-' + (this.currentUser?.id || 'guest'));} this.calculateFinalTotal(); },
        clearCart() { this.cartItems = []; this.saveCartToStorage(); this.calculateFinalTotal(); },

        openUdheyaConfiguration(item, isBuyNowIntent = false) { 
            if (!item.isActive || item.stock <= 0) { this.addedToCartMsg = { text: { en: 'This Udheya is out of stock.', ar: 'هذه الأضحية غير متوفرة حالياً.' }, isError: true, pageContext: 'udheya' }; setTimeout(() => this.addedToCartMsg = { text: null, isError: false, pageContext:'' }, 3000); return; }
            this.configuringUdheyaItem = {...item}; 
            this.tempUdheyaConfig = JSON.parse(JSON.stringify(initialTempUdheyaConfig)); 
            this.tempUdheyaConfig.itemKey = item.itemKey; 
            this.tempUdheyaConfig.isBuyNowIntent = isBuyNowIntent; 
            this.isUdheyaConfigModalOpen = true; document.body.classList.add('overflow-hidden');
        },
        closeUdheyaConfiguration() { 
            this.isUdheyaConfigModalOpen = false; this.configuringUdheyaItem = null; 
            const errorKeys = ['udheya_service_config', 'udheya_sacrifice_day_config', 'udheya_distribution_choice_config', 'udheya_split_option_config'];
            errorKeys.forEach(key => this.clrErr(key));
            document.body.classList.remove('overflow-hidden');
        },
        confirmUdheyaConfigurationAndProceed() { 
            if (!this.configuringUdheyaItem) return; let isValid = true; 
            const errorKeys = ['udheya_service_config', 'udheya_sacrifice_day_config', 'udheya_distribution_choice_config', 'udheya_split_option_config'];
            errorKeys.forEach(key => this.clrErr(key));

            if (!this.tempUdheyaConfig.serviceOption) { this.setErr('udheya_service_config', 'select'); isValid = false; }
            if (this.tempUdheyaConfig.serviceOption === 'standard_service' && !this.tempUdheyaConfig.sacrificeDay) { this.setErr('udheya_sacrifice_day_config', 'select'); isValid = false; }
            if (!this.tempUdheyaConfig.distribution.choice) { this.setErr('udheya_distribution_choice_config', 'select'); isValid = false; }
            if (this.tempUdheyaConfig.distribution.choice === 'split' && !this.tempUdheyaConfig.distribution.splitOption) { this.setErr('udheya_split_option_config', 'select'); isValid = false; }
            if (this.tempUdheyaConfig.distribution.choice === 'split' && this.tempUdheyaConfig.distribution.splitOption === 'custom' && !this.tempUdheyaConfig.distribution.customSplitText.trim()) { this.setErr('udheya_split_option_config', {en: 'Please specify custom split details.', ar: 'يرجى تحديد تفاصيل التقسيم المخصصة.'}); isValid = false; }
            if (!isValid) return;

            if (this.tempUdheyaConfig.isBuyNowIntent) {
                this.buyNow(this.configuringUdheyaItem, this.tempUdheyaConfig);
            } else {
                this.addItemToCart(this.configuringUdheyaItem, this.tempUdheyaConfig);
            }
        },
        getUdheyaConfigErrorText() {
            const errorKeys = ['udheya_service_config', 'udheya_sacrifice_day_config', 'udheya_distribution_choice_config', 'udheya_split_option_config'];
            for (const key of errorKeys) { if (this.errs[key]) return this.currLang === 'ar' ? this.errs[key].ar : this.errs[key].en; } return '';
        },

        openRefundModal() { this.isRefundModalOpen = true; document.body.classList.add('overflow-hidden'); },
        closeRefundModal() { this.isRefundModalOpen = false; document.body.classList.remove('overflow-hidden'); },
        openOrderStatusModal() { this.isOrderStatusModalOpen = true; document.body.classList.add('overflow-hidden'); this.$nextTick(() => this.$refs.lookupOrderIdInputModal?.focus()); },
        closeOrderStatusModal() { this.isOrderStatusModalOpen = false; document.body.classList.remove('overflow-hidden'); this.lookupOrderID = ''; this.statRes = null; this.statNotFound = false; this.clrErr('lookupOrderID');},

        startCd() { if(this.cdTimer)clearInterval(this.cdTimer); if(!this.settings.promoActive||!this.settings.promoEndISO) {this.cd.ended=true; return;} const t=new Date(this.settings.promoEndISO).getTime(); if(isNaN(t)){this.cd.ended=true; return;} this.updCdDisp(t); this.cdTimer=setInterval(()=>this.updCdDisp(t),1000); },
        updCdDisp(t) { const d = t - Date.now(); if (d < 0) { if (this.cdTimer) clearInterval(this.cdTimer); this.cd.days = "00"; this.cd.hours = "00"; this.cd.mins = "00"; this.cd.secs = "00"; this.cd.ended = true; return; } this.cd.ended = false; this.cd.days = String(Math.floor(d / 864e5)).padStart(2, '0'); this.cd.hours = String(Math.floor(d % 864e5 / 36e5)).padStart(2, '0'); this.cd.mins = String(Math.floor(d % 36e5 / 6e4)).padStart(2, '0'); this.cd.secs = String(Math.floor(d % 6e4 / 1e3)).padStart(2, '0'); },
        fmtPrice(p, c) { const cc=c||this.curr; const ci=this.settings?.xchgRates?.[cc]; if(p==null||p === undefined ||!ci||typeof ci.rate_from_egp !=='number') return`${ci?.symbol||(cc==='EGP'?'LE':'')} ---`; const cp=p*ci.rate_from_egp; return`${ci.symbol||(cc==='EGP'?'LE':cc)} ${cp.toFixed((ci.symbol==="LE"||ci.symbol==="ل.م"||cc==='EGP'||ci.symbol==="€")?0:2)}`; },
        getStockDisplayInfo(stock, isActive, lang = this.currLang) {
            if (!isActive) return lang === 'ar' ? "غير نشط" : "Inactive";
            if (stock === undefined || stock === null || stock <= 0) return lang === 'ar' ? "نفذ المخزون" : "Out of Stock";
            return lang === 'ar' ? `متوفر: ${stock}` : `${stock} Available`;
        },
        getSacrificeDayText(dayValue, lang) { const dayInfo = sacrificeDayMapInternal[dayValue]; return dayInfo ? (lang === 'ar' ? dayInfo.ar : dayInfo.en) : dayValue; },

        isEmailValid: (e) => (!e?.trim()) || /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e),
        isPhoneValid: (p) => p?.trim() && /^\+?[0-9\s\-()]{7,20}$/.test(p.trim()),
        setErr(f, m, isUserErr = true) { 
            this.errs[f] = (typeof m === 'string' ? this.errMsgs[m] || {en:m, ar:m} : m) || this.errMsgs.required; 
            if (isUserErr && typeof this.errs[f] === 'object') { this.usrApiErr = this.currLang === 'ar' ? this.errs[f].ar : this.errs[f].en; } 
            else if (isUserErr) { this.usrApiErr = String(this.errs[f]); } 
            this.$nextTick(() => { const firstErrorEl = document.querySelector(`[aria-invalid="true"]`); if (firstErrorEl) firstErrorEl.focus({ preventScroll: false }); else if (this.usrApiErr && !this.isCartOpen && !this.isOrderStatusModalOpen && !this.isRefundModalOpen && !this.isUdheyaConfigModalOpen) { const errInd = document.querySelector('.err-ind'); if(errInd) errInd.focus(); } }); 
        },
        clrErr(f) { if(this.errs[f]) delete this.errs[f]; let hasVisibleErrors = Object.keys(this.errs).some(key => this.errs[key]); if (!hasVisibleErrors) { this.usrApiErr = ""; this.apiErr = null;} },
        clrAllErrs() { this.errs = {}; this.usrApiErr = ""; this.apiErr = null; },
        focusRef(r, s=true) { this.$nextTick(()=>{ const target = this.$refs[r]; if(target){ target.focus({preventScroll:!s}); if(s) setTimeout(()=>{ try{ target.scrollIntoView({behavior:'smooth',block:'center',inline:'nearest'}); }catch(e){ console.warn("ScrollIntoView failed for:", r, e); } },50); } }) },
        
        slViewOpts() { return [ { val: 'none', txtEn: 'No Preference / Not Required', txtAr: 'لا يوجد تفضيل / غير مطلوب' }, { val: 'physical_inquiry', txtEn: 'Inquire about Physical Attendance', txtAr: 'الاستفسار عن الحضور الشخصي' }, { val: 'video_request', txtEn: 'Request Video/Photos of Process', txtAr: 'طلب فيديو/صور للعملية' }, { val: 'live_video_inquiry', txtEn: 'Inquire about Live Video', txtAr: 'الاستفسار عن فيديو مباشر' } ]; },
        distrOpts() { return [ { val: 'me', txtEn: 'Deliver All to Me', txtAr: 'توصيل الكل لي' }, { val: 'char', txtEn: 'Donate All (Sheep Land distributes)', txtAr: 'تبرع بالكل (أرض الأغنام توزع)' }, { val: 'split', txtEn: 'Split Portions', txtAr: 'تقسيم الحصص' } ]; },
        splitOptsList() { return [ { val: '1/3_me_2/3_charity_sl', txtEn: '1/3 me, 2/3 charity (SL)', txtAr: 'ثلث لي، ثلثان صدقة (أرض الأغنام)' }, { val: '1/2_me_1/2_charity_sl', txtEn: '1/2 me, 1/2 charity (SL)', txtAr: 'نصف لي، نصف صدقة (أرض الأغنام)' }, { val: '2/3_me_1/3_charity_sl', txtEn: '2/3 me, 1/3 charity (SL)', txtAr: 'ثلثان لي، ثلث صدقة (أرض الأغنام)' }, { val: 'all_me_custom_distro', txtEn: 'All for me (I distribute)', txtAr: 'الكل لي (أنا أوزع)' }, { val: 'custom', txtEn: 'Other (Specify) *', txtAr: 'أخرى (حدد) *' } ]; },
        deliveryTimeSlots: [ { value: "9AM-11AM", label: "9 AM - 11 AM" }, { value: "11AM-1PM", label: "11 AM - 1 PM" }, { value: "1PM-3PM", label: "1 PM - 3 PM" }, { value: "3PM-5PM", label: "3 PM - 5 PM" }, { value: "5PM-7PM", label: "5 PM - 7 PM"} ],

        initAuthPage() { 
            this.clrAllErrs();
            if (this.currentUser) { this.navigateToOrScroll('account'); return; } 
            this.auth.view = 'login'; 
        },
        async loginUser() { 
            this.clrAllErrs(); this.load.auth = true;
            try { const authData = await this.pb.collection('users').authWithPassword(this.auth.email, this.auth.password); 
                this.currentUser = authData.record; 
                this.checkoutForm.user_id = this.currentUser.id; 
                this.loadCartFromStorage(); 
                this.load.auth = false; 
                this.navigateToOrScroll(this.redirectAfterLogin || 'account'); 
                this.redirectAfterLogin = null; 
            } 
            catch (e) { this.load.auth = false; this.setErr('auth_login', this.errMsgs.auth_login); console.error("Login Error:", e.data || e); }
        },
        async registerUser() { 
            this.clrAllErrs(); this.load.auth = true;
            let regValid = true;
            if (!this.auth.name.trim()) { this.setErr('auth_name', this.errMsgs.auth_name); regValid = false; }
            if (!this.isEmailValid(this.auth.email)) { this.setErr('auth_email', this.errMsgs.email); regValid = false; }
            if (this.auth.password.length < 8) { this.setErr('auth_password', this.errMsgs.password_short); regValid = false; }
            if (this.auth.password !== this.auth.passwordConfirm) { this.setErr('auth_passwordConfirm', this.errMsgs.password_mismatch); regValid = false; }
            if (!regValid) { this.load.auth = false; return;}

            try { const data = {email: this.auth.email, password: this.auth.password, passwordConfirm: this.auth.passwordConfirm, name: this.auth.name, emailVisibility: true }; 
                const newUser = await this.pb.collection('users').create(data); 
                
                const usersCollection = await this.pb.collections.getOne("_pb_users_auth_");
                if (usersCollection && usersCollection.options && usersCollection.options.requireEmailVerification) {
                    await this.pb.collection('users').requestVerification(this.auth.email);
                     this.errs.auth_form_success = {en: 'Registration successful! Please check your email to verify your account, then login.', ar: 'تم التسجيل بنجاح! يرجى التحقق من بريدك الإلكتروني لتفعيل حسابك، ثم تسجيل الدخول.'};
                } else {
                    this.errs.auth_form_success = {en: 'Registration successful! Please login.', ar: 'تم التسجيل بنجاح! يرجى تسجيل الدخول.'};
                }
                this.load.auth = false; 
                this.auth.view = 'login'; this.auth.password = ""; this.auth.passwordConfirm = "";
            } 
            catch (e) { this.load.auth = false; if (e.data?.data) { Object.keys(e.data.data).forEach(key => { this.setErr(`auth_${key}`, {en: e.data.data[key].message, ar: e.data.data[key].message}); }); } else { this.setErr('auth_register', { en: e.data?.message || 'Registration failed. This email might already be in use.', ar: e.data?.message || 'فشل التسجيل. قد يكون هذا البريد الإلكتروني مستخدمًا بالفعل.' }); } console.error("Register Error:", e.data || e); }
        },
        logoutUser() { this.pb.authStore.clear(); this.currentUser = null; this.userOrders = []; this.checkoutForm = JSON.parse(JSON.stringify(initialCheckoutForm)); this.loadCartFromStorage(); this.navigateToOrScroll('home'); },

        async initAccountPage() { 
            this.clrAllErrs();
            if (!this.pb.authStore.isValid) { this.redirectAfterLogin = 'account'; this.navigateToOrScroll('auth'); return; } 
            if (!this.currentUser && this.pb.authStore.model) this.currentUser = this.pb.authStore.model; 
            if (this.currentUser) await this.fetchUserOrders(); 
        },
        async fetchUserOrders() { 
            if (!this.currentUser) return; this.load.orders = true; this.clrErr('orders_fetch');
            try { const resultList = await this.pb.collection('orders').getFullList({ filter: `user = "${this.currentUser.id}"`, sort: '-created' });
                this.userOrders = resultList.map(order => ({ ...order, order_status: order.order_status?.replace(/_/g, " ") || "N/A", payment_status: order.payment_status?.replace(/_/g, " ") || "N/A"}));
            } catch (e) { this.setErr('orders_fetch', this.errMsgs.orders_fetch); console.error("Fetch Orders Error:", e.data || e); } 
            finally { this.load.orders = false; }
        },

        initCheckoutPage() { 
            this.clrAllErrs();
            const urlParams = new URLSearchParams(window.location.hash.split('?')[1] || '');
            const isBuyNow = urlParams.get('buyNow') === 'true';
            let buyNowItem = null;

            if (isBuyNow) {
                try {
                    const storedItem = localStorage.getItem('sheepLandBuyNowItem');
                    if (storedItem) {
                        buyNowItem = JSON.parse(storedItem);
                        this.cartItems = [buyNowItem]; 
                    }
                    localStorage.removeItem('sheepLandBuyNowItem'); 
                } catch (e) { console.error("Error loading Buy Now item from localStorage", e); }
            } else {
                this.loadCartFromStorage();
            }
            
            if (this.cartItems.length === 0 && !this.orderConf.show) { 
                this.navigateToOrScroll('udheya'); 
                return; 
            }
            this.checkoutForm = JSON.parse(JSON.stringify(initialCheckoutForm)); 
            if (this.currentUser) { 
                this.checkoutForm.customer_name = this.currentUser.name || ""; 
                this.checkoutForm.customer_email = this.currentUser.email || ""; 
                this.checkoutForm.user_id = this.currentUser.id; 
            } else { this.checkoutForm.user_id = null; }
            this.updateDeliveryFeeForCheckout(); 
            this.calculateFinalTotal();
        },
        deliveryNeededForCart() { 
            return this.cartItems.some(item => {
                if (item.product_category === 'udheya') { const distChoice = item.udheya_details?.distribution?.choice; const splitOpt = item.udheya_details?.distribution?.splitOption; const customSplit = item.udheya_details?.distribution?.customSplitText?.toLowerCase();
                    return distChoice === 'me' || (distChoice === 'split' && (["1/3_me_2/3_charity_sl", "1/2_me_1/2_charity_sl", "2/3_me_1/3_charity_sl", "all_me_custom_distro"].includes(splitOpt) || (splitOpt === 'custom' && customSplit && (customSplit.includes("for me") || customSplit.includes("all delivered to me") || customSplit.includes("لي") || customSplit.includes("توصيل لي") || customSplit.includes("استلام"))) ));
                } return ['meat_cuts', 'livestock_general', 'gathering_package'].includes(item.product_category);
            });
        },
        updateDeliveryFeeForCheckout() { this.checkoutForm.delivery_fee_egp = 0; this.isDelFeeVar = false; if (!this.deliveryNeededForCart() || !this.checkoutForm.delivery_city_id) { this.calculateFinalTotal(); return; } const cityData = this.allCities.find(c => c.id === this.checkoutForm.delivery_city_id); if (cityData && typeof cityData.delFeeEgp === 'number') { this.checkoutForm.delivery_fee_egp = cityData.delFeeEgp; this.isDelFeeVar = false; } else if (cityData && cityData.delFeeEgp === null) { this.isDelFeeVar = true; this.checkoutForm.delivery_fee_egp = 0; } else { this.isDelFeeVar = true; this.checkoutForm.delivery_fee_egp = 0; } this.calculateFinalTotal(); },
        calculateFinalTotal() { const cartSubtotal = this.calculateCartSubtotal(); const totalServiceFee = this.calculateTotalServiceFee(); this.checkoutForm.total_service_fee_egp = totalServiceFee; let deliveryFee = 0; if (this.deliveryNeededForCart() && this.checkoutForm.delivery_fee_egp > 0 && !this.isDelFeeVar) { deliveryFee = this.checkoutForm.delivery_fee_egp; } let onlinePaymentFee = 0; if (this.checkoutForm.payment_method === 'online_card' && this.settings.online_payment_fee_egp > 0) { onlinePaymentFee = this.settings.online_payment_fee_egp; } this.checkoutForm.online_payment_fee_applied_egp = onlinePaymentFee; this.checkoutForm.final_total_egp = cartSubtotal + totalServiceFee + deliveryFee + onlinePaymentFee; },
        validateCheckoutForm() { 
            this.clrAllErrs(); let isValid = true;
            if (!this.checkoutForm.customer_name.trim()) { this.setErr('customer_name', 'required'); isValid = false; }
            if (!this.isPhoneValid(this.checkoutForm.customer_phone)) { this.setErr('customer_phone', 'phone'); isValid = false; }
            if (!this.isEmailValid(this.checkoutForm.customer_email)) { this.setErr('customer_email', 'email'); isValid = false; }
            if (this.deliveryNeededForCart()) { if (!this.checkoutForm.delivery_city_id) { this.setErr('delivery_city_id', 'select'); isValid = false; } if (!this.checkoutForm.delivery_address.trim()) { this.setErr('delivery_address', 'required'); isValid = false; } if (!this.checkoutForm.delivery_time_slot) { this.setErr('delivery_time_slot', {en: 'Please select a delivery time slot.', ar: 'يرجى اختيار وقت التوصيل.'}); isValid = false; } }
            if (!this.checkoutForm.payment_method) { this.setErr('payment_method', 'select'); isValid = false; }
            if (!this.checkoutForm.terms_agreed) { this.setErr('terms_agreed', 'terms_agreed'); isValid = false; }
            if(!isValid && this.$refs.checkoutTitle) this.focusRef('checkoutTitle'); return isValid;
        },
        async processOrder() { 
            if (!this.validateCheckoutForm()) return; this.load.checkout = true; this.usrApiErr = ""; this.apiErr = "";
            const lineItemsForOrder = this.cartItems.map(item => { let lineItem = { item_key_pb: item.varIdPb, product_category: item.product_category, name_en: item.nameENSpec, name_ar: item.nameARSpec, quantity: item.quantity, price_egp_each: item.priceEGP, udheya_details: null }; if (item.product_category === 'udheya' && item.udheya_details) { lineItem.udheya_details = item.udheya_details; } return lineItem; });
            let deliveryOpt = "self_pickup_or_internal_distribution"; if (this.deliveryNeededForCart()) { deliveryOpt = "home_delivery"; } else { this.checkoutForm.delivery_city_id = ""; this.checkoutForm.delivery_address = ""; this.checkoutForm.delivery_instructions = ""; this.checkoutForm.delivery_time_slot = ""; this.checkoutForm.delivery_fee_egp = 0; } this.calculateFinalTotal();
            const orderPayload = { order_id_text: `${Date.now().toString(36).toUpperCase()}${Math.random().toString(36).substring(2, 7).toUpperCase()}`, user: this.checkoutForm.user_id || null, customer_name: this.checkoutForm.customer_name, customer_phone: this.checkoutForm.customer_phone, customer_email: this.checkoutForm.customer_email, line_items: lineItemsForOrder, delivery_option: deliveryOpt, delivery_city_id: this.checkoutForm.delivery_city_id, delivery_address: this.checkoutForm.delivery_address, delivery_instructions: this.checkoutForm.delivery_instructions, delivery_time_slot: this.checkoutForm.delivery_time_slot, payment_method: this.checkoutForm.payment_method, terms_agreed: this.checkoutForm.terms_agreed, selected_display_currency: this.curr, subtotal_amount_egp: this.calculateCartSubtotal(), total_udheya_service_fee_egp: this.checkoutForm.total_service_fee_egp, delivery_fee_applied_egp: this.checkoutForm.delivery_fee_egp, online_payment_fee_applied_egp: this.checkoutForm.online_payment_fee_applied_egp, total_amount_due_egp: this.checkoutForm.final_total_egp, };
            try { const createdOrder = await this.pb.collection('orders').create(orderPayload); this.orderConf.orderID = createdOrder.order_id_text; this.orderConf.totalEgp = createdOrder.total_amount_due_egp; this.orderConf.items = createdOrder.line_items.map(li => ({...li})); this.orderConf.customerEmail = createdOrder.customer_email; this.orderConf.paymentInstructions = this.getPaymentInstructionsHTML(createdOrder.payment_method, createdOrder.total_amount_due_egp, createdOrder.order_id_text); this.orderConf.show = true; 
                const urlParams = new URLSearchParams(window.location.hash.split('?')[1] || '');
                const isBuyNow = urlParams.get('buyNow') === 'true';
                if (!isBuyNow) { 
                    this.clearCart(); 
                }
                localStorage.removeItem('sheepLandBuyNowItem'); 
                this.checkoutForm = JSON.parse(JSON.stringify(initialCheckoutForm)); 
                this.$nextTick(() => { if(this.$refs.orderConfTitle) this.navigateToOrScroll('checkout', 'order-conf-sect'); else console.warn("Order conf title ref not found for scroll"); this.focusRef('orderConfTitle'); }); } 
            catch (e) { this.apiErr = String(e.data?.message || e.message || "Order placement failed."); let userFriendlyError = "An unexpected error occurred. Please check your selections or contact support."; if (e.data && typeof e.data === 'object') { if (e.data.message && e.data.message.toLowerCase().includes("out of stock")) { userFriendlyError = "One or more items in your cart are now out of stock. Please review your cart."; this.usrApiErr = userFriendlyError; await this.initApp(); this.openCart(); } else if (e.data.data && Object.keys(e.data.data).length > 0) { Object.keys(e.data.data).forEach(serverFieldKey => { const clientFieldKey = serverFieldKey; if(this.checkoutForm.hasOwnProperty(clientFieldKey) || clientFieldKey.startsWith('line_items.')) { this.setErr(clientFieldKey, {en: e.data.data[serverFieldKey].message, ar: e.data.data[serverFieldKey].message }, false); }}); userFriendlyError = "Please correct the highlighted errors."; this.usrApiErr = userFriendlyError; } else if (e.data.message) { this.usrApiErr = e.data.message; } } else { this.usrApiErr = userFriendlyError; } if (this.apiErr && !this.orderConf.show && document.querySelector('.err-ind')) { this.$nextTick(() => this.navigateToOrScroll('checkout', '.err-ind')); }} 
            finally { this.load.checkout = false; }
        },
        getPaymentInstructionsHTML(payMeth, totalEgp, orderID) { 
            let instructions = ""; const priceText = this.fmtPrice(totalEgp); const waLink = `https://wa.me/${this.settings.waNumRaw}?text=Order%20Payment%20Confirmation%3A%20${orderID}`;
            const confirmWALink = `<a href="${waLink}" target="_blank" rel="noopener noreferrer" class="link-style">${this.settings.waNumDisp || 'WhatsApp'}</a>`;
            if (payMeth === 'online_card') { instructions = `<div class="bil-row"><p class="en">Your order total is <strong>${priceText}</strong>. To complete your payment via our secure online gateway, you will be contacted shortly with instructions or redirected. If you are not redirected or contacted within a few minutes, please contact us referencing Order ID: <strong class="pay-ref">${orderID}</strong>.</p><p class="ar">إجمالي طلبك هو <strong>${priceText}</strong>. لإتمام الدفع عبر بوابتنا الآمنة عبر الإنترنت، سنتصل بك قريبًاพร้อมًا بالتعليمات أو سيتم إعادة توجيهك. إذا لم يتم إعادة توجيهك أو الاتصال بك في غضون دقائق قليلة، فيرجى الاتصال بنا مع ذكر رقم الطلب: <strong class="pay-ref">${orderID}</strong>.</p></div>`; } 
            else if (payMeth === 'fa') { instructions = `<div class="bil-row"><p class="en">Fawry: Pay <strong>${priceText}</strong>. Use Order ID <strong class="pay-ref">${orderID}</strong>. Due in 24h.</p><p class="ar">فوري: ادفع <strong>${priceText}</strong>. استخدم رقم الطلب <strong class="pay-ref">${orderID}</strong>. خلال 24س.</p></div>`; } 
            else if (payMeth === 'vo') { instructions = `<div class="bil-row"><p class="en">Vodafone Cash: Pay <strong>${priceText}</strong> to <strong class="pay-ref">${this.settings.payDetails?.vodafone_cash || 'N/A'}</strong>. Ref: <strong class="pay-ref">${orderID}</strong>. Confirm via ${confirmWALink}.</p><p class="ar">فودافون كاش: ادفع <strong>${priceText}</strong> إلى <strong class="pay-ref">${this.settings.payDetails?.vodafone_cash || 'غير متوفر'}</strong>. مرجع: <strong class="pay-ref">${orderID}</strong>. أكد عبر ${confirmWALink}.</p></div>`; } 
            else if (payMeth === 'ip') { instructions = `<div class="bil-row"><p class="en">InstaPay: Pay <strong>${priceText}</strong> to <strong class="pay-ref">${this.settings.payDetails?.instapay_ipn || 'N/A'}</strong>. Ref: <strong class="pay-ref">${orderID}</strong>. Confirm via ${confirmWALink}.</p><p class="ar">إنستا باي: ادفع <strong>${priceText}</strong> إلى <strong class="pay-ref">${this.settings.payDetails?.instapay_ipn || 'غير متوفر'}</strong>. مرجع: <strong class="pay-ref">${orderID}</strong>. أكد عبر ${confirmWALink}.</p></div>`; } 
            else if (payMeth === 'revolut') { instructions = `<div class="bil-row"><p class="en">Revolut: Pay <strong>${priceText}</strong> to <strong class="pay-ref">${this.settings.payDetails?.revolut_details || 'N/A'}</strong>. Ref: <strong class="pay-ref">${orderID}</strong>. Confirm via ${confirmWALink}.</p><p class="ar">ريفولوت: ادفع <strong>${priceText}</strong> إلى <strong class="pay-ref">${this.settings.payDetails?.revolut_details || 'غير متوفر'}</strong>. مرجع: <strong class="pay-ref">${orderID}</strong>. أكد عبر ${confirmWALink}.</p></div>`; } 
            else if (payMeth === 'monzo') { instructions = `<div class="bil-row"><p class="en">Monzo: Pay <strong>${priceText}</strong> to <strong class="pay-ref">${this.settings.payDetails?.monzo_details || 'N/A'}</strong>. Ref: <strong class="pay-ref">${orderID}</strong>. Confirm via ${confirmWALink}.</p><p class="ar">مونزو: ادفع <strong>${priceText}</strong> إلى <strong class="pay-ref">${this.settings.payDetails?.monzo_details || 'غير متوفر'}</strong>. مرجع: <strong class="pay-ref">${orderID}</strong>. أكد عبر ${confirmWALink}.</p></div>`; } 
            else if (payMeth === 'bank_transfer') { instructions = `<div class="bil-row"><p class="en">Bank Transfer <strong>${priceText}</strong> to:</p><p class="ar">تحويل بنكي <strong>${priceText}</strong> إلى:</p></div><ul class="bank-dets"><li class="bil-row"><span class="en">Bank: <strong class="pay-ref">${this.settings.payDetails?.bank_name || 'N/A'}</strong></span><span class="ar">البنك: <strong class="pay-ref">${this.settings.payDetails?.bank_name || 'غير متوفر'}</strong></span></li><li class="bil-row"><span class="en">Acc Name: <strong class="pay-ref">${this.settings.payDetails?.bank_account_name || 'N/A'}</strong></span><span class="ar">اسم الحساب: <strong class="pay-ref">${this.settings.payDetails?.bank_account_name || 'غير متوفر'}</strong></span></li><li class="bil-row"><span class="en">Acc No: <strong class="pay-ref">${this.settings.payDetails?.bank_account_number || 'N/A'}</strong></span><span class="ar">رقم الحساب: <strong class="pay-ref">${this.settings.payDetails?.bank_account_number || 'غير متوفر'}</strong></span></li>${this.settings.payDetails?.bank_iban ? `<li class="bil-row"><span class="en">IBAN: <strong class="pay-ref">${this.settings.payDetails.bank_iban}</strong></span><span class="ar">IBAN: <strong class="pay-ref">${this.settings.payDetails.bank_iban}</strong></span></li>` : ''}${this.settings.payDetails?.bank_swift ? `<li class="bil-row"><span class="en">SWIFT: <strong class="pay-ref">${this.settings.payDetails.bank_swift}</strong></span><span class="ar">SWIFT: <strong class="pay-ref">${this.settings.payDetails.bank_swift}</strong></span></li>` : ''}</ul><div class="bil-row bank-note"><p class="en">Crucial: Ref Order ID: <strong class="pay-ref">${orderID}</strong>. Confirm via ${confirmWALink}.</p><p class="ar">هام: مرجع الطلب: <strong class="pay-ref">${orderID}</strong>. أكد عبر ${confirmWALink}.</p></div>`; } 
            else if (payMeth === 'cod') { let codNote = this.isDelFeeVar && this.deliveryNeededForCart() ? `<br><span class="en">Note: Delivery fee for your area will be confirmed by phone and paid separately.</span><span class="ar">ملاحظة: سيتم تأكيد رسوم التوصيل لمنطقتكم عبر الهاتف وتدفع بشكل منفصل.</span>` : ""; instructions = `<div class="bil-row"><p class="en">COD: Our team will call <strong>${this.checkoutForm.customer_phone}</strong> to confirm. Total Amount Due <strong>${priceText}</strong>. Order ID: <strong class="pay-ref">${orderID}</strong>.${codNote}</p><p class="ar">الدفع عند الاستلام: سيتصل بك الفريق على <strong>${this.checkoutForm.customer_phone}</strong> للتأكيد. المجموع الكلي للطلب <strong>${priceText}</strong>. رقم الطلب: <strong class="pay-ref">${orderID}</strong>.${codNote}</p></div>`; } return instructions;
        },

        async submitStatValid() { this.clrErr('lookupOrderID'); if (!(this.lookupOrderID || "").trim()) { this.setErr('lookupOrderID', 'required'); this.$refs.lookupOrderIdInputModal?.focus(); return; } await this.chkOrderStatus(); },
        async chkOrderStatus() { 
            this.statRes = null; this.statNotFound = false; this.load.status = true; this.apiErr = null; this.usrApiErr = ""; const id = (this.lookupOrderID || "").trim();
            try { 
                const result = await this.pb.collection('orders').getList(1, 1, {
                    filter: `order_id_text = "${this.pb.utils.escapeFieldValue(id)}"`,
                });
                if (result.items && result.items.length > 0) { 
                    const o = result.items[0]; 
                    this.statRes = { 
                        orderIdTxt: o.order_id_text, customer_name: o.customer_name, 
                        order_status: o.order_status?.replace(/_/g," ")||"N/A", 
                        payment_status: o.payment_status?.replace(/_/g, " ") || "N/A", 
                        line_items: o.line_items || [], total_amount_due_egp: o.total_amount_due_egp, 
                        payment_method: o.payment_method, delivery_option: o.delivery_option, 
                        delivery_address: o.delivery_address, 
                        delivery_area_name_en: o.delivery_area_name_en, 
                        delivery_area_name_ar: o.delivery_area_name_ar 
                    }; 
                } else { this.statNotFound = true; this.usrApiErr = "No order found with that ID."; }
            } catch (e) { this.apiErr=String(e.message); this.usrApiErr="Could not get order status. Please check details or contact support."; this.statNotFound=true; console.error("Check Status Error:", e.data || e); }
            finally { this.load.status = false; }
        },
    }));
});
===== src/main.css =====
/* Filename: /styles.css */
:root{
    --c1:#5D4037; --c1d:#3E2723; --c2:#386641; --c2l:#A3B18A; --c3:#F28C28;
    --t1:#212529; --tm:#6c757d; --td:#FAF8F5;
    --b1:var(--td); --b2:#F0EBE3; --bc:#fff; --bs:#DDE0E3;
    --rad:6px; --s0:.2rem; --s1:.4rem; --s2:.5rem; --s3:1.2rem; --s4:1.6rem;
    --fe:'Inter',sans-serif; --fa:'Noto Kufi Arabic',sans-serif;
    --lh:1.5; --head-h:70px; --head-h-mob:60px;
    --modal-max-width: 700px;
    --cart-sidebar-width: 380px;
    --udheya-config-modal-width: 600px;
}
*,::after,::before{box-sizing:border-box;margin:0;padding:0}
html{font-size:15px;scroll-behavior:smooth;overflow-x:clip;height:100%}
body{font-family:var(--fe);line-height:var(--lh);color:var(--t1);background:var(--b1);padding-top:var(--head-h);overflow-x:clip;position:relative;display:flex;flex-direction:column;min-height:100vh}
body.overflow-hidden { overflow: hidden; }

img{max-width:100%;display:block;height:auto;}
a{text-decoration:none;color:var(--c2);transition:color .2s,background-color .2s,border-color .2s}
a:hover{color:var(--c1d)}
:focus-visible{outline:2px solid var(--c3);outline-offset:2px;box-shadow:0 0 0 4px rgba(242,140,40,.2);border-radius:var(--rad)}

h1,h2,h3,h4,h5{font-weight:700;line-height:1.25;color:var(--c1d);margin-bottom:var(--s1)}
h1{font-size:1.9rem} h2{font-size:1.1rem} h3{font-size:1.1rem} h4{font-size:1rem;color:var(--c1d)} h5{font-size:.9rem}
p{margin:0 0 var(--s1)} p:last-child{margin-bottom:0}
ul,ol{list-style:none}

/* Main content area - expands to push footer down */
main{flex:1 0 auto;display:flex;flex-direction:column}

.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}
.load-ind,.err-ind{position:fixed;top:45%;left:50%;transform:translateX(-50%);z-index:2000;padding:20px;text-align:center;box-shadow:0 2px 10px rgba(0,0,0,.2);border-radius:var(--rad);max-width:400px; margin: 0 auto; font-weight:500}
.load-ind{background:rgba(255,255,255,.95);color:var(--c1d)}
.err-ind{background:rgba(220,53,69,.95);color:#fff}

.c{width:90%;max-width:1100px;margin:0 auto;padding:0 var(--s2)}
.sec,.main-page-sec{padding:var(--s4) 0}
.load-text{padding:var(--s3) 0;text-align:center;color:var(--tm)}
.disabled-btn{background-color:var(--tm)!important;border-color:var(--tm)!important;cursor:not-allowed!important;color:var(--td)!important}
.disabled-btn:hover{filter:none!important;transform:none!important}
.tc{text-align:center} .mt1{margin-top:var(--s1)}

.bil-row{display:flex;justify-content:space-between;width:100%;gap:var(--s1);align-items:baseline}
.bil-row > .en, .bil-row > p.en{flex:1 1 48%;text-align:left;min-width:0;word-wrap:break-word}
.bil-row > .ar, .bil-row > p.ar{flex:1 1 48%;font-family:var(--fa);direction:rtl;text-align:right;min-width:0;word-wrap:break-word}
.bil-spread{display:flex;justify-content:space-between;align-items:baseline;width:100%}
.bil-spread>.en{text-align:left;margin-right:auto;padding-right:var(--s0)}
.bil-spread>.ar{text-align:right;font-family:var(--fa);direction:rtl;margin-left:auto;padding-left:var(--s0)}
.bil-spread>.en,.bil-spread>.ar{margin-bottom:0}
.bil-inline{display:inline-flex;justify-content:center;align-items:baseline;gap:.7em}
.bil-inline>.en{margin-right:0;padding-right:0}
.bil-inline>.ar{margin-left:0;padding-left:0;font-family:var(--fa);direction:rtl}
.logo.bil-inline,.nav-link.bil-inline,.nav-link-mob.bil-inline,
.badge.bil-inline,.btn.bil-inline{display:inline-flex;width:auto}

.lbl-req.bil-spread > .en{font-weight:500;font-size:.85rem;color:var(--tm);text-align:left;flex-grow:1;margin-right:auto;padding-right:var(--s0)}
.lbl-req.bil-spread > .ar{font-weight:500;font-size:.85rem;color:var(--tm);font-family:var(--fa);text-align:right;flex-grow:1;margin-left:auto;padding-left:var(--s0)}
.lbl-chk.bil-inline > .en{font-size:.85rem}
.lbl-chk.bil-inline > .ar{font-size:.85rem;font-family:var(--fa)}
.lbl-chk input[type=checkbox]{margin-right:var(--s0);vertical-align:middle;}
html[lang=ar] .lbl-chk input[type=checkbox],:root:lang(ar) .lbl-chk input[type=checkbox]{margin-left:var(--s0);margin-right:0}

.btn{display:inline-flex;align-items:center;justify-content:center;padding:var(--s1) var(--s2);font-weight:700;border-radius:var(--rad);border:2px solid transparent;cursor:pointer;transition:transform .2s,filter .2s,background-color .2s,border-color .2s,color .2s;white-space:nowrap;font-size:.85rem;line-height:1.4;text-align:center}
.btn:hover{transform:translateY(-2px);filter:brightness(1.08)}
.btn.bil-inline>.en,.btn.bil-inline>.ar{display:inline;vertical-align:middle;line-height:inherit}
.btn.bp,.btn.bac{color:var(--td)}
.btn.bp{background:var(--c1);border-color:var(--c1)}.btn.bp:hover{background:var(--c1d);border-color:var(--c1d)}
.btn.bp-alt{background:transparent; border-color: var(--c1); color: var(--c1);} .btn.bp-alt:hover{background:var(--c1d);border-color:var(--c1d); color: var(--td);}
.btn.bac{background:var(--c2);border-color:var(--c2)}.btn.bac:hover{background:var(--c1d);border-color:var(--c1d)}
.btn-block{display:flex;width:100%}.btn-lg{padding:var(--s2) var(--s3)}
.btn-sm{padding: calc(var(--s0) / 2) var(--s0); font-size: 0.75rem;}


.sec-head{margin-bottom:var(--s3);position:relative}
.sec-head h1, .sec-head h2,.sec-head h3,.sec-head h4{margin:0}
.sec-head:not(.form-step .sec-head):not(.compact-how-it-works-head) :is(h1,h2,h3).bil-spread .en::after{content:'';display:block;width:50px;height:3px;background:var(--c2l);position:absolute;bottom:-8px;left:0;border-radius:2px}
.sec-head:not(.form-step .sec-head):not(.compact-how-it-works-head) :is(h1,h2,h3).bil-spread .ar::after{content:'';display:block;width:50px;height:3px;background:var(--c2l);position:absolute;bottom:-8px;right:0;border-radius:2px}
.section-intro { margin-bottom: var(--s3); font-size: 1rem; color: var(--tm); }
.section-intro p { margin-bottom: var(--s0); }

.card{background:var(--bc);border-radius:var(--rad);box-shadow:0 1px 3px #0000000f;border:1px solid var(--bs);display:flex;flex-direction:column;height:100%;overflow:hidden}
.card:is(:hover,.selected,.card-sel){box-shadow:0 3px 10px #0000001a,0 0 0 2px var(--c2l)}
.card-live.card-sel{border-color:var(--c2);box-shadow:0 3px 10px #0000001a,0 0 0 2px var(--c2)}
.card-img{position:relative;padding-top:60%;overflow:hidden;background-color:var(--b2)}
.card-img img{position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;transition:transform .3s ease-out;background-color:#eee}
.card:hover .card-img img{transform:scale(1.05)}
.card-b{padding:var(--s2);flex-grow:1;display:flex;flex-direction:column}
.card-content{margin-bottom:var(--s2);flex-grow:1}
.card-h.bil-spread>.en,.card-h.bil-spread>.ar{font-size:1rem;margin:0 0 var(--s0)}
.card-p{font-size:.85rem;color:var(--tm);margin:0;line-height:1.4}
.card-foot{margin-top:auto;padding-top:var(--s1);border-top:1px solid var(--b2)}
.card-foot .price{font-size:1rem;font-weight:700;color:var(--c1);margin-bottom:var(--s0);line-height:1}
.card-act{display:flex;gap:var(--s0);align-items:center; flex-wrap: wrap;} /* Allow buttons to wrap */
.card-live .card-act{flex-direction:column;align-items:stretch;gap:var(--s0)}
.card-live .card-act select{width:100%}
.card-act select,.card-act .btn{border:1px solid var(--bs);border-radius:4px;font-size:.75rem;background-color:var(--b1);height:34px; flex: 1 1 auto;} /* Allow buttons to take space */
.card-act select{padding:var(--s0) var(--s1);flex-grow:1}
.card-act .btn{flex-shrink:0;padding:var(--s0) .6rem}
.badge{position:absolute;top:var(--s0);left:var(--s0);font-size:.65rem;font-weight:600;padding:2px var(--s0);border-radius:var(--rad);color:var(--td);z-index:1;text-transform:uppercase;line-height:1; background-color: var(--c2);}
.badge.udheya-badge { background-color: var(--c3); color: var(--c1d);}
.badge .en{margin-right:.2em}.badge .ar{margin-left:.2em;font-size:.9em}
.stock-display { font-size: 0.75rem; color: var(--tm); margin-top: 2px; display: block; width: 100%; text-align: center;}
.stock-display.bil-inline { display: inline-flex; width: auto; text-align: left; }
.stock-display.out-of-stock { color: #dc3545; font-weight: bold; }

.grid2,.prod-grid,.content-grid,.feat-grid{display:grid;gap:var(--s3)}
.grid2{grid-template-columns:repeat(auto-fit,minmax(min(100%,280px),1fr))}
.feat-grid{grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:var(--s3);text-align:center}
.feat-item .icon-ph{width:60px;height:60px;margin:0 auto var(--s1);background-color:transparent;border-radius:50%;display:flex;align-items:center;justify-content:center;font-size:1.5rem;color:var(--c2)}
.icon-ph.num{font-size:1.3rem;font-weight:700;background-color:var(--c2l); color: var(--c1d);}
.icon-ph .icon-cust{display:inline-flex;align-items:center;justify-content:center;width:45px;height:45px}
.icon-cust img,.icon-cust svg{width:100%;height:100%;object-fit:contain}
.icon-ph.emoji { font-size: 2.5rem; width: auto; height: auto; background-color: transparent; }

.site-head{background-color:var(--b2);padding:var(--s1) 0;box-shadow:0 2px 4px rgba(0,0,0,.05);position:fixed;top:0;left:0;width:100%;z-index:1000;height:var(--head-h); color: var(--c1d);}
.site-head .c{padding-right:0} /* Remove right padding so icons are hard right */
.nav-cont{display:flex;justify-content:space-between;align-items:center;height:100%;padding-right:0;position:relative}
.logo{font-size:1.1rem;font-weight:700;color:var(--c1d);display:inline-flex;align-items:baseline;margin-right:var(--s2);gap:.5em}
.logo:hover .en,.logo:hover .ar{color:var(--c2)}
.nav-main.nav-desk{margin:0;flex:1;display:flex;justify-content:space-between;align-items:center;position:relative;padding-right:0} /* Remove right padding */
.nav-main.nav-desk .nav-list{display:flex;gap:var(--s0);align-items:center;justify-content:center}
/* Position the icon buttons absolutely to the far right edge - HARD RIGHT */
.nav-icons-absolute{position:absolute;right:0;display:flex;gap:var(--s0);align-items:center;z-index:15;padding-right:0;margin-right:0}
.nav-main.nav-desk .nav-link{font-size:.9rem;color:var(--tm);font-weight:500;padding:var(--s0) var(--s1);border-radius:var(--rad);display:inline-flex;align-items:center;gap:.5em; line-height: 1;}
.nav-main.nav-desk .nav-link.as-button { background: none; border: none; cursor: pointer; padding: var(--s0); height: 36px; color: var(--tm); fill: var(--tm); margin-right:0}
.nav-main.nav-desk .nav-link:hover,.nav-main.nav-desk .nav-link.active-nav,
.nav-main.nav-desk .nav-link.as-button:hover, .nav-main.nav-desk .nav-link.as-button.active-nav {
    color:var(--c1d);background-color:rgba(0,0,0,.03);font-weight:700; fill: var(--c1d);
}
.nav-main.nav-desk .nav-link.active-nav :is(.en,.ar){color:var(--c1d)}

/* Move WhatsApp to left side, next to logo */
.head-extras.desk-extras{display:flex;align-items:center;gap:var(--s1);margin-left:var(--s2);padding-right:0;position:static;z-index:5}
.head-extras.desk-extras .curr-sel{display:none} /* Hide currency selector on desktop for cleaner look */
/* Ensure mobile keeps currency selector */
.mob-extras .curr-sel{display:block}
.curr-sel select{padding:var(--s0) calc(var(--s1)/2);font-size:.8rem;border:1px solid var(--bs);border-radius:var(--rad);background-color:var(--bc);height:30px;color:var(--tm)}
.wa-contact a{display:flex;align-items:center;gap:.5em;color:var(--c1);text-decoration:none;padding:var(--s0) var(--s1);border-radius:var(--rad);font-size:.9rem}
.wa-contact a:hover{color:var(--c1d);background-color:rgba(0,0,0,.03)}
.wa-icon{width:20px;height:20px; fill: currentColor;} .wa-num{font-weight:500;white-space:nowrap}
.menu-btn{display:none;background:0 0;border:none;cursor:pointer;padding:var(--s0);color:var(--c1d);z-index:1010;}
.menu-btn:hover{color:var(--c2)}
.mob-nav{position:absolute;top:var(--head-h);left:0;right:0;background-color:var(--b2);padding:var(--s2) var(--s2) var(--s3);box-shadow:0 4px 6px rgba(0,0,0,.1);z-index:1005;border-top:1px solid var(--bs)}
.nav-list-mob{list-style:none;padding:0;margin:0;display:flex;flex-direction:column;align-items:center;gap:0}
.nav-list-mob > li{width:100%}
.nav-link-mob{font-size:1rem;color:var(--tm);font-weight:500;padding:var(--s1) var(--s2);border-radius:var(--rad);display:flex;align-items:center;gap:.5em;text-decoration:none;width:100%;box-sizing:border-box;justify-content:center; line-height: 1;}
.nav-link-mob.as-button { background: none; border: none; cursor: pointer; color: var(--tm); fill: var(--tm); }
.nav-link-mob:hover,.nav-link-mob.active-nav,
.nav-link-mob.as-button:hover, .nav-link-mob.as-button.active-nav {
    color:var(--c1d);background-color:rgba(0,0,0,.03);font-weight:700; fill: var(--c1d);
}
.nav-link-mob.active-nav :is(.en,.ar){color:var(--c1d)}
.mob-extras{margin-top:var(--s3);padding-top:var(--s2);border-top:1px solid var(--bs);display:flex;flex-direction:column;align-items:center;gap:var(--s2)}
.mob-extras .curr-sel select{font-size:.9rem;padding:var(--s0) var(--s1)}
.mob-extras .wa-contact a{font-size:1rem}

.nav-icon { vertical-align: middle; fill: currentColor; width: 20px; height: 20px;} 
.nav-main.nav-desk .nav-link.as-button .nav-icon { margin-right: 0; } 
.nav-link-mob.as-button .nav-icon { margin-right: 0.5em; } 
html[dir="rtl"] .nav-link-mob.as-button .nav-icon { margin-right: 0; margin-left: 0.5em;}

.cart-count-badge { position: absolute; top: -5px; right: -8px; background-color: var(--c3); color: white; font-size: 0.65rem; font-weight: bold; border-radius: 50%; width: 16px; height: 16px; display: flex; align-items: center; justify-content: center; line-height: 1; }
.nav-link.as-button, .nav-link-mob.as-button { position: relative; }


.hero{background-color:var(--b2);padding:var(--s4) 0 var(--s3);background-image:linear-gradient(rgba(0,0,0,.3),rgba(0,0,0,.3)),url(images/hero-sheep-farm.jpg);background-size:cover;background-position:center;background-repeat:no-repeat;color:var(--td);min-height:85vh;display:flex;flex-direction:column;align-items:center;justify-content:center;box-sizing:border-box}
.hero>.c{display:flex;flex-direction:column;align-items:center;justify-content:center}
.hero :is(h1,h2,p){color:var(--td)}
.hero h1.bil-spread>:is(.en,.ar),.hero h2.bil-spread>:is(.en,.ar){margin-right:0;margin-left:0}
.hero-desc{max-width:100%;margin:var(--s2) auto var(--s3)}
.hero-promo{margin-top:var(--s3)}
.hero-promo-link{display:block;text-decoration:none;max-width:100%;margin:0 auto;border-radius:var(--rad);transition:transform .2s,box-shadow .2s}
.hero-promo-link:hover{transform:translateY(-3px);box-shadow:0 4px 10px rgba(0,0,0,.1)}
.pban{padding:var(--s2);background:linear-gradient(135deg,var(--c3),#FFD1A3);color:var(--c1d);border-radius:var(--rad);box-shadow:0 2px 8px #00000017;display:flex;flex-direction:column;align-items:center;gap:var(--s1);text-align:center}
.pban-text{width:100%}.pban-text .bil-row{gap:var(--s0);align-items:stretch;justify-content:space-between}
.pban-text .bil-row>.en{text-align:center;flex:1 1 48%}
.pban-text .bil-row>.ar{text-align:center;font-family:var(--fa);direction:rtl;flex:1 1 48%}
.prm-h,.pban .prm-h :is(strong,span){color:var(--c1d);font-size:1rem;margin:0;line-height:1.3;font-weight:700}
.pban .pban-cta{font-size:.85rem;padding:var(--s0) var(--s2);margin-top:var(--s0);width:auto;max-width:300px}
.cd-wrap{display:flex;justify-content:center;width:100%;margin-top:var(--s0);margin-bottom:var(--s1)}
.cd{display:flex;justify-content:center;align-items:center;gap:var(--s0);font-size:.9em}
.cd-seg{display:flex;flex-direction:column;align-items:center;background-color:rgba(255,255,255,.15);padding:2px var(--s0);border-radius:var(--rad);min-width:35px;text-align:center}
.cd-val{font-size:1.2em;font-weight:700;line-height:1.1;color:var(--td)}
.cd-lbl{font-size:.7em;text-transform:uppercase;line-height:1;color:var(--td);opacity:.8}
.cd-sep{font-size:1em;font-weight:700;color:var(--td);padding:0 2px}
.why-us.hero-why{margin-top:var(--s4);padding-top:var(--s3);border-top:1px solid rgba(255,255,255,.2);width:100%}
.why-us-h.bil-spread>:is(.en,.ar){color:var(--td)}
.why-us-h h2.bil-spread :is(.en,.ar)::after{background:var(--c3)}
.hero .why-us-grid .feat-item h4 { color: var(--td); }
.why-us-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(min(100%,200px),1fr));gap:var(--s2);text-align:center;margin-top:var(--s3)}
.hero .why-us-grid .feat-item p.card-p{color:#e0e0e0}
.hero .why-us-grid .feat-item .icon-ph{background-color:transparent;color:var(--td);border:none}
.hero .why-us-grid .feat-item .icon-ph.emoji { color: var(--td); filter: none; font-size: 2.5rem; }

.order-sect{background-color:var(--b2)} .order-sect-h{margin-bottom:var(--s3)}
#udh-selection-panel{scroll-margin-top:calc(var(--head-h) + 10px);margin-top:0;background-color:var(--bc)}
.form-panel .card-b{padding: var(--s2);}
.form-panel .form-step .card-b { padding: 0; } 
.form-step .sec-head{margin-bottom:var(--s2);background-color:var(--b2);padding:var(--s2);border-radius:var(--rad) var(--rad) 0 0;border-bottom:1px solid var(--bs)}
.form-step .sec-head h1, .form-step .sec-head h2.bil-spread :is(.en,.ar)::after{display:none}
.form-step{padding:var(--s3) var(--s2);background-color:var(--bc)}
.form-panel > .card-b > .form-step:first-child { padding-top: var(--s2); border-top: none; margin-top: 0;}
.form-step:not(:first-child){border-top:1px dashed var(--bs);margin-top:var(--s2);padding-top:var(--s3)}
.form-step:last-of-type{border-bottom:none}
.form-panel{margin-bottom:0}
.live-note{font-size:.9em;color:var(--tm);margin:var(--s1) 0 var(--s2); padding: var(--s1); background-color:var(--b1); border-radius: var(--rad); border-left: 3px solid var(--c2l); }
.live-note p { margin-bottom: var(--s0); } .live-note p:last-child { margin-bottom: 0; }
.info-box { margin-bottom: var(--s2); background-color: var(--b1); border: 1px dashed var(--bs); border-radius: var(--rad); }
.info-box .card-b { padding: var(--s1); }
.info-box h4.form-subh { font-size: 0.9rem; margin-bottom: var(--s0); color: var(--c1d); padding-bottom: 0; border-bottom: none; }
.info-box .bil-row { font-size: 0.85rem; gap: var(--s0); }
.info-box p { font-size: 0.85rem; color: var(--tm); margin-bottom: 0; line-height: 1.4; }
.info-box strong { color: var(--c1d); }

.fg{margin-bottom:var(--s2);position:relative}
.fg label:not(.lbl-chk){margin-bottom:var(--s0)}
.input,.fg :is(input[type=text],input[type=tel],input[type=date],input[type=email],input[type=password],select,textarea){width:100%;border:1px solid var(--bs);border-radius:var(--rad);font-size:.85rem;background:var(--bc);min-height:38px;}
.input,.fg :is(input[type=text]:not(textarea),input[type=tel],input[type=email],input[type=date],input[type=password],select){padding:var(--s1) var(--s1);line-height:1.4;height:38px}
.fg textarea,textarea.input{padding:var(--s1);line-height:1.3;min-height:60px}
.fg select[disabled],.input[disabled]{background-color:var(--b2);color:var(--tm);cursor:not-allowed}
.input[aria-invalid=true],.fg :is(input,select,textarea)[aria-invalid=true]{border-color:#dc3545!important;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)!important}
.err-msg{color:#dc3545;font-size:.75rem;margin-top:var(--s0);display:block;text-align:left}
html[dir=ar] .err-msg,body:has([dir=rtl]) .err-msg,.err-msg.ar{text-align:right;font-family:var(--fa)}
.succ-msg { color: var(--c2); font-size: 0.85rem; margin-top: var(--s1); display: block; text-align: center; }
.niyyah-wrap{margin-top:var(--s1)}
.del-det-h,.wakeel-note{margin-top:var(--s2)}
.split-opts{margin:var(--s1) 0 0 var(--s2)}
.rgrp{margin-top:var(--s0)}.rgrp fieldset{border:none;padding:0;margin:0}
.rgrp legend.bil-spread{margin-bottom:var(--s0)}
.rgrp label{display:flex;align-items:center;margin-bottom:2px;font-size:.85rem;cursor:pointer;padding:5px 0}
.rgrp label.bil-spread > .en { text-align: left; flex-grow: 1; margin-right: auto; }
.rgrp label.bil-spread > .ar { text-align: right; flex-grow: 1; margin-left: auto; font-family: var(--fa); }
.rgrp label span.ar{direction:rtl;text-align:right;font-family:var(--fa)}
.rgrp input[type=radio]{margin-right:calc(var(--s0) + 2px);transform:scale(1.1)}
.custom-split-ta,.split-opts textarea.input{margin-top:var(--s0);font-size:.85em;margin-left:calc(var(--s0) + 16px);width:calc(100% - (var(--s0) + 16px))}
.tslots{display:flex;flex-wrap:wrap;gap:var(--s0);margin-top:var(--s0);justify-content:center}
.ts{padding:var(--s1);border:1px solid var(--bs);border-radius:var(--rad);font-size:.8rem;cursor:pointer;background:var(--bc);line-height:1.3;white-space:nowrap;min-width:80px;min-height:38px;display:inline-flex;align-items:center;justify-content:center}
.ts:hover{border-color:var(--c2l);background:var(--c2l)}
.ts.sel{background:var(--c2);color:var(--td);border-color:var(--c2)}

.delivery-scope-note { background-color: #fff3cd; color: #856404; border: 1px solid #ffeeba; padding: var(--s1); margin-bottom: var(--s2) !important; border-radius: var(--rad); }
.delivery-scope-note p { color: #856404 !important; font-size: 0.85em; margin-bottom: var(--s0) !important; }
.delivery-scope-note p:last-child { margin-bottom: 0 !important; }
.delivery-scope-note strong { color: #664d03; }

.rev-sum{border:1px solid var(--bs);border-radius:var(--rad);padding:var(--s2);background-color:var(--b1);margin-bottom:var(--s2)}
.rev-sum .form-subh.rev-sum-h{font-size:1.1rem;border-bottom:1px solid var(--c1);padding-bottom:var(--s1)}
.rev-sum .form-subh.bil-spread>:is(.en,.ar){border-bottom:none;padding-bottom:0}
.sum-item{padding:var(--s1) 0;border-bottom:1px dashed var(--bs);display:flex;justify-content:space-between;align-items:baseline;gap:var(--s1)}
.sum-item:last-of-type{border-bottom:none}
.sum-item-content{flex-grow:1}.sum-item .sum-item-content > .bil-row > div{font-size:.9rem;color:var(--tm)}
.sum-item .sum-item-content > .bil-row strong{color:var(--c1d)}
.sum-item-price { flex-shrink: 0; text-align: right; min-width: 100px; font-size: 0.9rem; color: var(--tm); }
.sum-item-price.bil-row > .en { text-align: left; }
.sum-item-price.bil-row > .ar { text-align: right; font-family: var(--fa); }
.sum-item-price strong { color: var(--c1d); font-weight: 700; }
.sum-hr{border:0;border-top:1px solid var(--c1);margin:var(--s1) 0}
.sum-total div{font-size:1.1rem;font-weight:700;color:var(--c1)}
.sum-total small { font-size: 0.75rem; color: var(--tm); font-weight: normal; margin-left: var(--s0); }

.xtra-opts-pay{margin-top:var(--s3);margin-bottom:var(--s2)}
.xtra-opts-pay .form-subh{margin-bottom:var(--s2)}
.pay-meths{display:grid;grid-template-columns:repeat(auto-fit,minmax(90px,1fr));gap:var(--s1);margin-top:var(--s0)}
.pm input[type=radio]{ position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}
.pm label{display:flex;align-items:center;justify-content:center;padding:var(--s2);border:1px solid var(--bs);border-radius:var(--rad);cursor:pointer;text-align:center;min-height:80px;background-color:var(--bc);transition: background-color .2s, border-color .2s}
.pay-meths .pay-icon{height:45px;width:auto;max-width:100%;object-fit:contain;display:block;transition: filter .2s}
.pm input[type=radio]:checked+label,.pm.sel label,.pm input[type=radio]:focus-visible+label{border-color:var(--c1d);background:var(--c2)}
.pm input[type=radio]:checked+label img,.pm.sel label img,.pm input[type=radio]:focus-visible+label img{filter:brightness(0) invert(1)}
.form-step>.bil-spread:first-child .form-subh{margin-top:0}
.form-div{border:0;border-top:1px dashed var(--bs);margin:var(--s2) 0}
.f-note{font-size:.75em;color:var(--tm);margin-top:2px;line-height:1.25}
.f-note.ar{text-align:right}
.field-note { width: 100%; } .field-note p.f-note { width: 100%; }
.final-submit{margin-top:var(--s4)}
.gmaps-link { color: var(--c3); text-decoration: underline; }
.gmaps-link:hover { color: var(--c1d); }

.conf-h{border-bottom:none;margin-bottom:var(--s2)}
.conf-msg p{font-size:1rem;line-height:1.5;margin-bottom:var(--s1)}
.conf-msg strong{color:var(--c2);font-weight:700}
.conf-intro{justify-content:center;margin-bottom:var(--s1)} .conf-intro p{font-size:1.1rem}
.order-id-box{margin-top:var(--s2);margin-bottom:var(--s3);text-align:center;background-color:var(--b1);border:2px solid var(--c2)}
.order-id-box-body{padding:var(--s2) var(--s3)}
.order-id-box .bil-spread{margin-bottom:var(--s0)}
.order-id-box-imp{margin-bottom:0;font-size:1.05rem;color:var(--c1d)}
.order-id-box-lbl{font-size:.95rem;margin-bottom:0}
.order-id-disp{font-size:1.4rem;font-weight:700;color:var(--c2);margin-bottom:var(--s2);background-color:var(--b2);padding:var(--s0) var(--s2);border-radius:var(--rad);display:inline-block}
.order-id-box-note{font-size:.9em;color:var(--tm);margin-bottom:0}
.quick-recap,.pay-instr{margin-top:0;margin-bottom:var(--s1);text-align:left}
.quick-recap { max-width: 700px; margin-left: auto; margin-right: auto; }
#order-conf-sect .form-act.page-act{width:100%;max-width:100%}
.recap-h,.pay-instr-h{border-top:1px solid var(--bs);padding-top:var(--s2); margin-bottom: var(--s1);}
.recap-h.bil-spread>:is(.en,.ar),.pay-instr-h.bil-spread>:is(.en,.ar){border-top:none;padding-top:0}
.pay-instr .bil-row p { font-size: 0.9rem; }
.pay-ref{color:var(--c2);font-weight:500; background-color: var(--b2); padding: 0 3px; border-radius: 3px;}
.bank-dets{margin:var(--s0) 0 var(--s1) 0;font-size:.9em}
.bank-dets li.bil-row > .en{text-align:left} .bank-dets li.bil-row > .ar{text-align:right}
.bank-note{margin-top:var(--s1)}

.chk-stat-lbl{margin-bottom:var(--s1)}
.chk-stat-input,.chk-stat-btn{height:38px}
#chk-stat-form-modal .card-act{display:flex;gap:var(--s1);align-items:center}
#chk-stat-form-modal .chk-stat-input{flex-grow:1;min-width:150px}
#chk-stat-form-modal .chk-stat-btn{flex-shrink:0;padding:var(--s0) var(--s2)}
#btn-chk-stat-modal{background-color:var(--c1);color:var(--td);border-color:var(--c1)}
#btn-chk-stat-modal:hover{background-color:var(--c1d);border-color:var(--c1d)}
.order-stat-res{background-color:var(--b2);border-top:3px solid var(--c1); padding: var(--s2); border-radius: var(--rad);}
.order-stat-res .sum-item strong{min-width:80px;display:inline-block}
.order-stat-res #stat-content-modal { max-width: 100%; }
.stat-hl{color:var(--c2);font-weight:700}
.stat-no-res{text-align:center}
#stat-no-res-modal p{color:var(--c3);font-weight:700;padding:var(--s1)}

.foot{background-color:var(--c1d);color:var(--b2);padding:var(--s3) 0;margin-top:auto;flex-shrink:0}
.foot-grid{text-align:left;gap:var(--s4)}
.foot-brand-desc p.en{text-align:left;flex-basis:48%}
.foot-brand-desc p.ar{font-family:var(--fa);direction:rtl;text-align:right;flex-basis:48%}
.foot-pay{margin-top:var(--s3);padding-bottom:var(--s2)}
.foot-pay h5{margin-bottom:var(--s1); color: var(--b2);}
.foot-div{border-color:rgba(255,255,255,.2);margin:var(--s2) 0 var(--s1)}
.foot-copy{font-size:.8em;text-align:center;color:var(--b2);opacity:.7;margin-bottom:0}
.bil-copy{display:inline-flex;justify-content:space-between;align-items:baseline;width:auto;margin-left:var(--s0)}
.bil-copy .en{text-align:left} .bil-copy .ar{font-family:var(--fa);direction:rtl;text-align:right}
.footer-link-btn { background:none; border:none; color: var(--c2l); text-decoration: underline; padding:0; font-size: inherit; cursor:pointer; font-family: inherit;}
.footer-link-btn:hover { color: var(--td); }


.bil-row-mob { flex-direction: row !important; flex-wrap: nowrap !important; }
.bil-row-mob > .en,.bil-row-mob > p.en { flex-basis: 48% !important; text-align: left !important; margin-bottom: 0 !important; }
.bil-row-mob > .ar,.bil-row-mob > p.ar { flex-basis: 48% !important; text-align: right !important; margin-bottom: 0 !important; }
.bil-spread.bil-row-mob > .en { margin-right: auto !important; text-align: left !important;}
.bil-spread.bil-row-mob > .ar { margin-left: auto !important; text-align: right !important;}

/* Cart Sidebar Styles */
.cart-sidebar-overlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.5); z-index: 1040; }
.cart-sidebar { position: fixed; top: 0; right: 0; width: var(--cart-sidebar-width); max-width: 90vw; height: 100%; background-color: var(--b1); box-shadow: -2px 0 8px rgba(0,0,0,0.15); z-index: 1050; display: flex; flex-direction: column; }
.cart-sidebar-header { display: flex; justify-content: space-between; align-items: center; padding: var(--s2); border-bottom: 1px solid var(--bs); background-color: var(--b2); }
.cart-sidebar-content { flex-grow: 1; overflow-y: auto; padding: var(--s2); }
.cart-item { display: flex; justify-content: space-between; align-items: center; padding: var(--s1) 0; border-bottom: 1px dashed var(--bs); gap: var(--s1); }
.cart-item:last-child { border-bottom: none; }
.cart-item-details { flex-grow: 1; min-width: 0; }
.cart-item-name { font-weight: bold; font-size: 0.9rem; }
.cart-item-price { font-size: 0.85rem; color: var(--tm); margin-top: 2px; }
.cart-item-quantity { display: flex; align-items: center; flex-shrink: 0; margin: 0 var(--s0); }
.qty-btn { padding: 2px 6px; height: 24px; line-height: 1; min-width: 24px; }
.cart-qty-display { padding: 0 var(--s0); font-size: 0.9rem; min-width: 20px; text-align: center;}
.cart-item-subtotal { font-size: 0.9rem; font-weight: 500; color: var(--c1); flex-shrink: 0; min-width: 70px; text-align: right; }
.cart-item-remove { background: none; border: none; color: #dc3545; cursor: pointer; font-size: 1.2em; padding: var(--s0); flex-shrink: 0; }
.cart-item-remove:hover { color: #a71d2a; }
.cart-sidebar-footer { padding: var(--s2); border-top: 1px solid var(--bs); background-color: var(--b2); }
.cart-total { margin-bottom: var(--s2); font-size: 1.1em; font-weight: bold; } 
.cart-total .bil-row > .en, .cart-total .bil-row > .ar { flex-basis: auto;}
.cart-empty-msg p { font-size: 1rem; color: var(--tm); }
.udheya-detail { font-size: 0.75rem; color: var(--tm); margin: 2px 0 0 0; }
.udheya-detail .sm-label { font-weight: 500; color: var(--c1d); margin-right: 0.3em;}
html[dir="rtl"] .udheya-detail .sm-label { margin-left: 0.3em; margin-right: 0;}
.udheya-detail .sm-val { margin-left: 3px; margin-right: 3px; }
html[dir="rtl"] .udheya-detail .sm-val { margin-right: 3px; margin-left: 3px; }

/* General Modal Styles */
.modal-overlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.6); z-index: 1040; }
.modal { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--b1); border-radius: var(--rad); box-shadow: 0 5px 15px rgba(0,0,0,0.3); z-index: 1050; width: 90vw; max-width: var(--modal-max-width); display: flex; flex-direction: column; max-height: 90vh; }
.udheya-config-modal { max-width: var(--udheya-config-modal-width); }
.modal-header { display: flex; justify-content: space-between; align-items: center; padding: var(--s2); border-bottom: 1px solid var(--bs); background-color: var(--b2); }
.modal-title { margin-bottom: 0; font-size: 1.1rem; }
.modal-close-btn { background: none; border: none; font-size: 1.5rem; cursor: pointer; color: var(--tm); padding: var(--s0); line-height: 1; }
.modal-close-btn:hover { color: var(--c1d); }
.modal-content { padding: var(--s3); overflow-y: auto; flex-grow: 1; }
.modal-footer { padding: var(--s2); border-top: 1px solid var(--bs); text-align: right; background-color: var(--b2); display: flex; justify-content: flex-end; gap: var(--s1);}
html[dir="rtl"] .modal-footer { text-align: left; justify-content: flex-start; }

.policy-container ul.modal-list { list-style: disc; padding-left: var(--s3); margin-left: var(--s2); }
html[dir="rtl"] .policy-container ul.modal-list { padding-left: 0; padding-right: var(--s3); margin-right: var(--s2); list-style-position: inside;}
.modal-section-title { font-size: 1rem; margin-top: var(--s2); padding-bottom: var(--s0); border-bottom: 1px solid var(--bs); margin-bottom: var(--s1); }
.modal-section-title:first-of-type { margin-top: 0; }

/* Checkout Page Layout */
.checkout-layout { display: flex; flex-wrap: wrap; gap: var(--s3); }
.checkout-form-col { flex: 2 1 500px; min-width: 300px; }
.checkout-summary-col { flex: 1 1 300px; min-width: 280px; }
.sticky-summary { position: sticky; top: calc(var(--head-h) + var(--s2)); } 
.checkout-rev-sum { padding: 0; border: none; background: none; }

/* Account Page Specifics */
.order-history-list .card { margin-bottom: var(--s2); }
.order-history-item .card-b { padding: var(--s2); }
.order-details-toggle summary { cursor: pointer; padding: var(--s0) 0; font-weight: 500; color: var(--c2); display: list-item; }
.order-details-toggle summary::marker { content: "▶ "; font-size: 0.8em; }
.order-details-toggle[open] summary::marker { content: "▼ "; }
html[dir="rtl"] .order-details-toggle summary::marker { content: "◀ ";}
html[dir="rtl"] .order-details-toggle[open] summary::marker { content: "▼ ";}
.order-details-toggle summary:hover { color: var(--c1d); }
.order-items-list { padding-left: var(--s2); margin-top: var(--s0); font-size: 0.9em; }
html[dir="rtl"] .order-items-list { padding-left: 0; padding-right: var(--s2); }
.order-items-list li { margin-bottom: 2px; }
.empty-state { padding: var(--s3); text-align: center; color: var(--tm); }
.empty-state p { font-size: 1.1rem; margin-bottom: var(--s2); }

/* Auth Page Specifics */
.auth-toggle-link { display: block; text-align: center; margin-top: var(--s2); }
.auth-form-container { max-width: 450px; margin: 0 auto; }
.link-style { background: none; border: none; padding: 0; color: var(--c3); text-decoration: underline; cursor: pointer; font-size: inherit; }
.link-style:hover { color: var(--c1d); }


/* MODIFIED MOBILE RESPONSIVE STYLES - MAINTAINS SIDE-BY-SIDE BILINGUAL LAYOUT */
@media(max-width:768px){
    /* KEEP bil-row elements as flex with side-by-side layout - NO STACKING */
    .bil-row {
        display: flex !important;
        justify-content: space-between !important;
        align-items: baseline !important;
        gap: var(--s1) !important;
        flex-wrap: nowrap !important;
    }
    
    /* Force English to always be left-aligned and take left space */
    .bil-row > .en, .bil-row > p.en { 
        flex: 1 1 48% !important; 
        text-align: left !important; 
        margin-bottom: 0 !important;
        padding-right: var(--s0) !important;
    }
    
    /* Force Arabic to always be right-aligned and take right space */
    .bil-row > .ar, .bil-row > p.ar { 
        flex: 1 1 48% !important; 
        text-align: right !important; 
        margin-bottom: 0 !important;
        font-family: var(--fa) !important;
        direction: rtl !important;
        padding-left: var(--s0) !important;
    }

    /* Keep bil-spread elements side-by-side instead of stacking */
    .bil-spread {
        display: flex !important;
        justify-content: space-between !important;
        align-items: baseline !important;
        flex-direction: row !important;
        text-align: left !important;
        flex-wrap: nowrap !important;
    }
    
    .bil-spread > .en {
        flex: 1 1 48% !important;
        text-align: left !important;
        margin-right: auto !important;
        margin-bottom: 0 !important;
        padding-right: var(--s0) !important;
    }
    
    .bil-spread > .ar {
        flex: 1 1 48% !important;
        text-align: right !important;
        font-family: var(--fa) !important;
        direction: rtl !important;
        margin-left: auto !important;
        margin-bottom: 0 !important;
        padding-left: var(--s0) !important;
    }

    /* Fix specific elements that might need special handling */
    .field-note > .en, .field-note > .ar { 
        flex-basis: 48% !important; 
        margin-bottom: 0 !important;
    }
    
    .field-note > .en { 
        text-align: left !important; 
        padding-right: var(--s0) !important;
    }
    
    .field-note > .ar { 
        text-align: right !important; 
        padding-left: var(--s0) !important;
    }

    .delivery-scope-note.bil-row > .en { 
        text-align: left !important; 
    }
    
    .delivery-scope-note.bil-row > .ar { 
        text-align: right !important; 
    }

    /* Ensure section headers with underlines work properly */
    .sec-head:not(.form-step .sec-head):not(.compact-how-it-works-head) :is(h1,h2,h3).bil-spread .en::after { 
        left: 0 !important; 
        transform: none !important; 
        right: auto !important; 
    }
    
    .sec-head:not(.form-step .sec-head):not(.compact-how-it-works-head) :is(h1,h2,h3).bil-spread .ar::after,
    .hero .why-us-h h2.bil-spread :is(.en,.ar)::after { 
        right: 0 !important; 
        transform: none !important; 
        left: auto !important; 
    }

    /* Handle promotional banner text */
    .pban-text .bil-row { 
        flex-direction: row !important; 
        align-items: baseline !important; 
        justify-content: space-between !important;
    }
    
    .pban-text .bil-row > .en { 
        text-align: left !important; 
        flex: 1 1 48% !important;
        margin-bottom: 0 !important;
    }
    
    .pban-text .bil-row > .ar { 
        text-align: right !important; 
        flex: 1 1 48% !important;
        margin-bottom: 0 !important;
    }

    /* Maintain side-by-side for summary items, totals, and bank details */
    .sum-item .bil-row, .sum-total.bil-row, .bank-dets li.bil-row, .cart-total .bil-row {
        flex-direction: row !important;
        align-items: baseline !important;
        flex-wrap: nowrap !important;
        justify-content: space-between !important;
    }
    
    .sum-item .bil-row > div, .sum-total.bil-row > div, .bank-dets li.bil-row > span, .cart-total .bil-row > span {
        flex-basis: auto !important;
    }
    
    /* Fix navigation links on mobile to stay inline */
    .nav-link-mob.bil-inline { 
        flex-direction: row !important; 
        justify-content: center !important; 
        align-items: baseline !important; 
    }
    
    .nav-link-mob.bil-inline > .en, .nav-link-mob.bil-inline > .ar { 
        margin: 0 var(--s0) !important; 
        padding: 0 !important; 
        text-align: inherit !important; 
    }

    /* Keep card titles side-by-side */
    .card-h.bil-spread { 
        flex-direction: row !important; 
        justify-content: space-between !important; 
    }
    
    .card-h.bil-spread > .en { 
        text-align: left !important; 
        margin-right: auto !important; 
    }
    
    .card-h.bil-spread > .ar { 
        text-align: right !important; 
        margin-left: auto !important; 
    }

    .card-content .bil-row:not(.bil-row-mob) { 
        flex-direction: row !important; 
        align-items: baseline !important; 
        gap: var(--s1) !important; 
        justify-content: space-between !important;
    }
    
    .card-content .bil-spread:not(.bil-row-mob) { 
        text-align: left !important; 
        flex-direction: row !important;
        justify-content: space-between !important;
    }
    
    .card-content .bil-row.card-p-row > .en { 
        text-align: left !important; 
        margin-bottom: 0 !important; 
    }
    
    .card-content .bil-row.card-p-row > .ar { 
        text-align: right !important; 
        margin-bottom: 0 !important;
    }
    
    /* Keep order confirmation elements side-by-side */
    .conf-msg .bil-row:not(.recap-h):not(.pay-instr-h):not(.order-id-box .bil-spread):not(.bil-row-mob) > .en { 
        text-align: left !important; 
    }
    
    .conf-msg .bil-row:not(.recap-h):not(.pay-instr-h):not(.order-id-box .bil-spread):not(.bil-row-mob) > .ar { 
        text-align: right !important; 
    }
    
    .order-id-box .bil-spread > p.en { text-align: left !important; }
    .order-id-box .bil-spread > p.ar { text-align: right !important; }
    
    /* Keep footer elements side-by-side */
    .foot-brand-desc { 
        flex-direction: row !important; 
        align-items: baseline !important; 
        justify-content: space-between !important;
    }
    
    .foot-brand-desc p.en, .foot-brand-desc p.ar { 
        width: 48% !important; 
        flex-basis: 48% !important; 
    }
    
    .foot-brand-desc p.en {
        text-align: left !important;
    }
    
    .foot-brand-desc p.ar {
        text-align: right !important;
    }
    
    .foot-copy { text-align: center; }
    .bil-copy { 
        display: inline-flex !important; 
        width: auto !important; 
        text-align: center !important; 
        margin-left: 0 !important; 
        margin-top: var(--s0); 
        justify-content: center !important;
        gap: var(--s0) !important;
    }
    
    .bil-copy .en, .bil-copy .ar { 
        display: inline !important; 
        width: auto !important; 
        text-align: center !important; 
    }

    /* Adjust other mobile-specific sizes */
    html { font-size: 14px; }
    body { padding-top: var(--head-h-mob); min-height: 100vh; }
    .c { padding-left: var(--s1); padding-right: var(--s1); }
    .site-head .c { padding-right: 0; } /* Keep icons hard right on mobile too */
    .sec { padding: var(--s3) 0; }
    #udh-selection-panel { scroll-margin-top: calc(var(--head-h-mob) + 10px); }
    .form-step .sec-head { padding: var(--s1); }
    .form-step { padding: var(--s2) var(--s1); }
    .grid2:not(.prod-grid):not(.feat-grid):not(.why-us-grid) { grid-template-columns: 1fr; }
    .prod-grid.grid2 { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } 
    :is(.why-us-grid) { grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); gap: var(--s2); }
    
    #chk-stat-form-modal .chk-stat-input { flex-grow: 1; min-width: 0; margin-bottom: var(--s1); }
    #chk-stat-form-modal .card-act { flex-wrap: wrap; justify-content: center; }
    #chk-stat-form-modal .chk-stat-btn { flex: 1 1 100%; }
    
    .tslots { justify-content: center; }
    .ts { font-size: .75rem; padding: var(--s0) calc(var(--s1) - 1px); min-width: 80px; }
    .pban .btn { width: auto; padding: var(--s0) var(--s2); }
    .card-b { padding: var(--s1); }
    .card-content { margin-bottom: var(--s0); }
    .card-foot { padding-top: var(--s0); }
    .card-act select, .card-act .btn { height: 30px; font-size: .7rem; }
    .btn { font-size: .8rem; }
    .btn-lg { font-size: .85rem; }
    
    .site-head { height: var(--head-h-mob); }
    .mob-nav { top: var(--head-h-mob); }
    
    .nav-cont { flex-direction: row; align-items: center; justify-content: space-between; padding-right: 0; position: relative; }
    .logo { margin-right: 0; margin-bottom: 0; text-align: left; justify-content: flex-start; font-size: 1rem; }
    .nav-main.nav-desk, .head-extras.desk-extras { display: none; }
    .menu-btn { display: inline-flex; align-items: center; justify-content: center; margin-right: 0; padding-right: 0; }
    .menu-btn svg { width: 24px; height: 24px; }
    .hero h1 { font-size: 1.4rem; }
    .hero h2 { font-size: 1rem; }
    .pay-meths { grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)); }

    .cd-wrap { font-size: .8em; gap: 2px; }
    .cd-seg { min-width: 28px; padding: 2px 1px; }
    .cd-val { font-size: 1em; }
    .cd-lbl { font-size: .6em; }
    .live-note { font-size: 0.8em; }
    .info-box p, .info-box h4.form-subh { font-size: 0.8em; }
    .sum-item .sum-item-content > .bil-row > div, .sum-item-price { font-size: 0.85rem; }
    .sum-total div { font-size: 1rem; }
    
    .cart-sidebar { width: 90vw; max-width: var(--cart-sidebar-width); } 
    .cart-item { flex-wrap: wrap; } 
    .cart-item-details { flex-basis: 100%; margin-bottom: var(--s0); }
    .cart-item-quantity { margin-left: 0; margin-right: auto; }
    .cart-item-subtotal { margin-left: auto; flex-basis: auto; min-width: 80px; }
    .cart-item-remove { margin-left: var(--s1); }

    .modal { width: 95vw; max-width: calc(var(--modal-max-width) - 40px); } 
    .udheya-config-modal { max-width: var(--udheya-config-modal-width); }
    .modal-content { padding: var(--s2); }

    .checkout-layout { flex-direction: column; }
    .checkout-form-col, .checkout-summary-col { flex-basis: 100%; }
    .sticky-summary { position: static; }
}

/* --- Header Icon Button Default Visibility Fix --- */
.nav-main.nav-desk .nav-list .nav-link.as-button {
    color: var(--tm); 
    background-color: transparent; 
    padding: var(--s0); 
    border-radius: var(--rad);
    line-height: 1; 
}
.nav-main.nav-desk .nav-list .nav-link.as-button .nav-icon {
    fill: currentColor; 
    width: 20px;
    height: 20px;
    display: inline-block; 
    vertical-align: middle;
}
.nav-main.nav-desk .nav-list .nav-link.as-button:hover,
.nav-main.nav-desk .nav-list .nav-link.as-button.active-nav {
    color: var(--c1d); 
    background-color: rgba(0,0,0,.03); 
}

.nav-list-mob .nav-link-mob.as-button {
    color: var(--tm); 
    background-color: transparent;
    padding: var(--s1) var(--s2); 
    border-radius: var(--rad);
    width: 100%;
    justify-content: center; 
}
.nav-list-mob .nav-link-mob.as-button .nav-icon {
    fill: currentColor; 
    width: 20px;
    height: 20px;
    display: inline-block;
    vertical-align: middle;
    margin-right: 0.5em; 
}
html[dir="rtl"] .nav-list-mob .nav-link-mob.as-button .nav-icon {
    margin-right: 0;
    margin-left: 0.5em;
}
.nav-list-mob .nav-link-mob.as-button:hover,
.nav-list-mob .nav-link-mob.as-button.active-nav {
    color: var(--c1d);
    background-color: rgba(0,0,0,.03);
}
/* --- End Header Icon Button Fix --- */
===== src/pb.js =====
// Filename: /pb_hooks/main.pb.js
/// <reference path="../pb_data/types.d.ts" />

/**
 * Helper to register PocketBase hooks safely.
 */
const registerHook = (collection, event, handler) => {
    try {
        if (typeof $app !== 'undefined') { // Standard PocketBase environment
            if (event === 'beforeCreate') $app.onRecordBeforeCreateRequest(collection, handler);
            else if (event === 'afterCreate') $app.onRecordAfterCreateRequest(collection, handler);
            else if (event === 'beforeUpdate') $app.onRecordBeforeUpdateRequest(collection, handler);
            // Add other event types here if needed, like onRecordBeforeDeleteRequest, etc.
        } else {
            console.warn(`HOOK REGISTRATION SKIPPED for ${collection} - ${event}: $app not available (not in PocketBase JSVM?).`);
        }
    } catch (error) {
        console.error(`HOOK REGISTRATION FAILED for ${collection} - ${event}: ${error}`);
    }
};

const sacrificeDayMapInternalHook = { 
    "day1_10_dhul_hijjah": { "en": "Day 1 of Eid (10th Dhul Hijjah)", "ar": "اليوم الأول (10 ذو الحجة)" },
    "day2_11_dhul_hijjah": { "en": "Day 2 of Eid (11th Dhul Hijjah)", "ar": "اليوم الثاني (11 ذو الحجة)" },
    "day3_12_dhul_hijjah": { "en": "Day 3 of Eid (12th Dhul Hijjah)", "ar": "اليوم الثالث (12 ذو الحجة)" },
    "day4_13_dhul_hijjah": { "en": "Day 4 of Eid (13th Dhul Hijjah)", "ar": "اليوم الرابع (13 ذو الحجة)" },
};


registerHook("orders", "beforeCreate", (e) => {
    const record = e.record;
    const dao = $app.dao();
    const lineItemsData = JSON.parse(JSON.stringify(record.get("line_items"))); 

    if (!Array.isArray(lineItemsData) || lineItemsData.length === 0) {
        throw new Error("Order must contain at least one item (line_items array is empty or not an array).");
    }

    let calculatedSubtotalEGP = 0;
    let calculatedTotalServiceFeeEGP = 0;
    const productStockUpdates = []; 
    const processedLineItems = []; 

    let appSettings;
    try {
        appSettings = dao.findFirstRecordByFilter("settings", "id!=''");
        if (!appSettings) throw new Error("Application settings not found. Cannot proceed.");
    } catch (err) {
        console.error(`[OrderHook-BeforeCreate] CRITICAL: Failed to fetch application settings: ${err}`);
        throw new Error("Server configuration error (settings). Please contact support immediately.");
    }
    const defaultServiceFeeEGP = appSettings.getFloat("servFeeEGP") || 0;

    for (let i = 0; i < lineItemsData.length; i++) {
        const clientLineItem = lineItemsData[i]; 

        if (!clientLineItem.item_key_pb || typeof clientLineItem.quantity !== 'number' || clientLineItem.quantity <= 0) {
            throw new Error(`Invalid line item data at index ${i}: ${clientLineItem.name_en || 'Unknown item'}. Ensure product ID (item_key_pb) and quantity are correct.`);
        }

        let product;
        try {
            product = dao.findRecordById("products", clientLineItem.item_key_pb);
        } catch (err) {
            console.error(`[OrderHook-BeforeCreate] Product lookup failed for ID: ${clientLineItem.item_key_pb} from line item ${i}. Error: ${err}`);
            throw new Error(`Product "${clientLineItem.name_en || clientLineItem.item_key_pb}" could not be found or is invalid.`);
        }

        if (!product.getBool("is_active")) {
            throw new Error(`Product "${product.getString("variant_name_en")}" (item ${i+1}) is currently not active.`);
        }

        const currentStock = product.getInt("stock_available_pb");
        if (currentStock < clientLineItem.quantity) {
            throw new Error(`Not enough stock for "${product.getString("variant_name_en")}" (item ${i+1}). Available: ${currentStock}, Requested: ${clientLineItem.quantity}.`);
        }
        
        productStockUpdates.push({ productRecord: product, newStock: currentStock - clientLineItem.quantity });

        const pricePerItemEGP = product.getFloat("base_price_egp");
        
        const processedItem = {
            item_key_pb: product.id, 
            product_category: product.getString("product_category"),
            name_en: product.getString("variant_name_en"),
            name_ar: product.getString("variant_name_ar"),
            quantity: clientLineItem.quantity,
            price_egp_each: pricePerItemEGP, 
            udheya_details: null 
        };

        calculatedSubtotalEGP += pricePerItemEGP * clientLineItem.quantity;

        if (processedItem.product_category === "udheya" && clientLineItem.udheya_details) {
            processedItem.udheya_details = clientLineItem.udheya_details; 
            if (clientLineItem.udheya_details.serviceOption === "standard_service") {
                calculatedTotalServiceFeeEGP += defaultServiceFeeEGP;
            }
            if (!clientLineItem.udheya_details.sacrificeDay || !clientLineItem.udheya_details.distribution?.choice) {
                 throw new Error(`Missing essential Udheya details (sacrifice day or distribution) for "${processedItem.name_en}".`);
            }
        }
        processedLineItems.push(processedItem);
    }
    
    record.set("line_items", processedLineItems); 
    record.set("subtotal_amount_egp", calculatedSubtotalEGP);
    record.set("total_udheya_service_fee_egp", calculatedTotalServiceFeeEGP);

    let deliveryFeeAppliedEGP = record.getFloat("delivery_fee_applied_egp") || 0; 
    const deliveryOption = record.getString("delivery_option");
    let areaNameEnToSet = record.getString("delivery_area_name_en") || ""; 
    let areaNameArToSet = record.getString("delivery_area_name_ar") || "";

    if (deliveryOption === "home_delivery") {
        const deliveryAreaID = record.getString("delivery_city_id");
        const deliveryAreasJSON = appSettings.get("delAreas");
        let foundFee = false;
        
        if (deliveryAreaID && Array.isArray(deliveryAreasJSON)) {
            for (const govArea of deliveryAreasJSON) {
                if (typeof govArea === 'object' && govArea !== null) {
                    const govID = govArea.id || "";
                    if (Array.isArray(govArea.cities)) {
                        for (const city of govArea.cities) {
                            if (typeof city === 'object' && city !== null) {
                                const currentCityID = `${govID}_${city.id || ""}`;
                                if (currentCityID === deliveryAreaID) {
                                    if (typeof city.delivery_fee_egp === 'number') deliveryFeeAppliedEGP = city.delivery_fee_egp;
                                    foundFee = true; 
                                    areaNameEnToSet = `${govArea.name_en || ''} - ${city.name_en || ''}`;
                                    areaNameArToSet = `${govArea.name_ar || ''} - ${city.name_ar || ''}`;
                                    break;
                                }
                            }
                        }
                    } else if (govID === deliveryAreaID) {
                        if (typeof govArea.delivery_fee_egp === 'number') deliveryFeeAppliedEGP = govArea.delivery_fee_egp;
                        foundFee = true; 
                        areaNameEnToSet = govArea.name_en || '';
                        areaNameArToSet = govArea.name_ar || '';
                        break;
                    }
                }
                if (foundFee) break;
            }
        }
        record.set("delivery_fee_applied_egp", deliveryFeeAppliedEGP);
        record.set("delivery_area_name_en", areaNameEnToSet);
        record.set("delivery_area_name_ar", areaNameArToSet);
    } else { 
        record.set("delivery_fee_applied_egp", 0);
        record.set("delivery_city_id", null); record.set("delivery_address", null);
        record.set("delivery_instructions", null); record.set("delivery_time_slot", null);
        record.set("delivery_area_name_en", null); record.set("delivery_area_name_ar", null);
    }

    let onlinePaymentFeeAppliedEGP = 0.0;
    const paymentMethodHook = record.getString("payment_method");
    if (paymentMethodHook === "online_card") {
        onlinePaymentFeeAppliedEGP = appSettings.getFloat("online_payment_fee_egp") || 0;
    }
    record.set("online_payment_fee_applied_egp", onlinePaymentFeeAppliedEGP);

    const totalAmountDueEGP = calculatedSubtotalEGP + calculatedTotalServiceFeeEGP + deliveryFeeAppliedEGP + onlinePaymentFeeAppliedEGP;
    if (isNaN(totalAmountDueEGP) || totalAmountDueEGP < 0) {
        console.error(`[OrderHook-BeforeCreate] CRITICAL: Calculated totalAmountDueEGP is invalid: ${totalAmountDueEGP}`);
        throw new Error("Internal error calculating total order amount. Please contact support.");
    }
    record.set("total_amount_due_egp", totalAmountDueEGP);

    if (paymentMethodHook === "online_card") {
        record.set("payment_status", "pending_gateway_redirect");
        record.set("order_status", "awaiting_payment_gateway");
    } else if (paymentMethodHook === "cod") {
        record.set("payment_status", "cod_pending_confirmation");
        record.set("order_status", "pending_confirmation");
    } else { 
        record.set("payment_status", "pending_payment");
        record.set("order_status", "confirmed_pending_payment");
    }

    if (e.httpContext?.get("authRecord") && e.httpContext.get("authRecord").id) {
        record.set("user", e.httpContext.get("authRecord").id);
    } else if (record.get("user")) {
        // User ID already set by client (e.g. from client-side auth state)
        // Ensure it's a valid ID if stricter checks are desired, or clear if guest checkout intended
    }


    try {
        if (record.has("user_ip_address") && e.httpContext && e.httpContext.realIp) record.set("user_ip_address", e.httpContext.realIp());
        if (record.has("user_agent_string") && e.httpContext && e.httpContext.request) record.set("user_agent_string", e.httpContext.request().header.get("User-Agent"));
    } catch (ipErr) { console.warn(`[OrderHook-BeforeCreate] Could not set IP/UserAgent: ${ipErr}`); }

    for (const update of productStockUpdates) {
        update.productRecord.set("stock_available_pb", update.newStock);
        try {
            dao.saveRecord(update.productRecord);
        } catch (err) {
            console.error(`[OrderHook-BeforeCreate] CRITICAL: Failed to update stock for product ${update.productRecord.getString("item_key")}: ${err}`);
            throw new Error(`Failed to update product stock for ${update.productRecord.getString("variant_name_en")}. Order not created.`);
        }
    }
});


registerHook("orders", "afterCreate", (e) => {
    const record = e.record;
    const customerEmail = record.getString("customer_email");
    
    let senderAddress = "noreply@sheepland.example.com"; 
    let senderName = "Sheep Land"; 
    let appSettings;
    try {
        appSettings = $app.dao().findFirstRecordByFilter("settings", "id!=''");
        if (appSettings && appSettings.getString("app_email_sender_address")) { 
            senderAddress = appSettings.getString("app_email_sender_address");
        }
        if (appSettings && appSettings.getString("app_email_sender_name")) {
            senderName = appSettings.getString("app_email_sender_name");
        }
    } catch (err) {
        console.warn(`[OrderHook-AfterCreate] Could not fetch app settings for email sender. Using defaults. Error: ${err}`);
    }

    const enableEmailConfirmation = true; 

    if (enableEmailConfirmation && customerEmail && $app && typeof $app.newMailMessage === 'function') {
        try {
            const message = $app.newMailMessage();
            message.setFrom(senderAddress, senderName);
            message.setTo(customerEmail);
            message.setSubject(`Your Sheep Land Order Confirmed: ${record.getString("order_id_text")}`);
            
            const lineItems = record.get("line_items") || [];
            let itemsListHTML = "<ul>";
            
            for (const item of lineItems) {
                let itemDisplayPrice = item.price_egp_each * item.quantity;
                let serviceFeeTextForEmail = "";
                if (item.product_category === 'udheya' && item.udheya_details && item.udheya_details.serviceOption === 'standard_service' && appSettings) {
                    const udheyaServiceFee = appSettings.getFloat("servFeeEGP") || 0;
                    serviceFeeTextForEmail = ` (+ ${udheyaServiceFee} EGP service)`; 
                }
                itemsListHTML += `<li>${item.name_en} (x${item.quantity}) - ${item.price_egp_each * item.quantity} EGP${serviceFeeTextForEmail}`;
                if (item.product_category === 'udheya' && item.udheya_details) {
                    const sacrificeDayValue = item.udheya_details.sacrificeDay;
                    const sacrificeDayInfo = sacrificeDayMapInternalHook[sacrificeDayValue] || {en: sacrificeDayValue, ar: sacrificeDayValue}; 
                    const sacrificeDayText = sacrificeDayInfo.en;
                    itemsListHTML += `<br><small>Service: ${item.udheya_details.serviceOption || 'N/A'}, Day: ${sacrificeDayText}</small>`;
                     if (item.udheya_details.niyyahNames && item.udheya_details.niyyahNames.trim() !== "") {
                        itemsListHTML += `<br><small>Niyyah for: ${item.udheya_details.niyyahNames}</small>`;
                    }
                }
                itemsListHTML += "</li>";
            }
            itemsListHTML += "</ul>";

            let emailBody = `<h1>Thank You for Your Order!</h1>`;
            emailBody += `<p>JazakAllah Khairan for choosing Sheep Land. Your Order ID is: <strong>${record.getString("order_id_text")}</strong></p>`;
            emailBody += `<h2>Order Summary:</h2>`;
            emailBody += itemsListHTML;
            if (record.getFloat("total_udheya_service_fee_egp") > 0 && !lineItems.some(item => item.product_category === 'udheya' && item.udheya_details?.serviceOption === 'standard_service' && (appSettings.getFloat("servFeeEGP") || 0) > 0 )) {
                 // This condition is a bit complex; the idea is to show total service fee if not already implied per line item
                 emailBody += `<p>Total Udheya Service Fee(s): ${record.getFloat("total_udheya_service_fee_egp")} EGP</p>`;
            }
            if (record.getFloat("delivery_fee_applied_egp") > 0) {
                emailBody += `<p>Delivery Fee: ${record.getFloat("delivery_fee_applied_egp")} EGP</p>`;
            }
            if (record.getFloat("online_payment_fee_applied_egp") > 0) {
                emailBody += `<p>Online Payment Fee: ${record.getFloat("online_payment_fee_applied_egp")} EGP</p>`;
            }
            emailBody += `<p><strong>Total Amount Due: ${record.getFloat("total_amount_due_egp")} EGP</strong></p>`;

            emailBody += `<h2>Payment Instructions:</h2>`;
            const paymentMethod = record.getString("payment_method");
            const totalAmount = record.getFloat("total_amount_due_egp");
            const orderId = record.getString("order_id_text");
            const waNumRaw = appSettings?.getString("waNumRaw") || "";
            const waNumDisp = appSettings?.getString("waNumDisp") || waNumRaw;
            const payDetails = appSettings?.get("payDetails") || {};
            const waConfirmationLink = `https://wa.me/${waNumRaw}?text=Order%20Payment%20Confirmation%3A%20${orderId}`;
            
            if (paymentMethod === "online_card") {
                emailBody += `<p>To complete your order for ${totalAmount} EGP, please follow the instructions on the website or contact us if you face any issues, quoting Order ID: ${orderId}.</p>`;
            } else if (paymentMethod === "cod") {
                emailBody += `<p>Our team will contact you on ${record.getString("customer_phone")} to confirm delivery and collect payment of ${totalAmount} EGP. Order ID: ${orderId}.</p>`;
            } else if (paymentMethod === "fa") {
                emailBody += `<p>Fawry: Pay ${totalAmount} EGP. Use Order ID ${orderId}. Payment due within 24 hours. Confirm payment on <a href="${waConfirmationLink}" target="_blank" rel="noopener noreferrer">${waNumDisp}</a>.</p>`;
            } else if (paymentMethod === "vo") {
                emailBody += `<p>Vodafone Cash: Pay ${totalAmount} EGP to ${payDetails.vodafone_cash || 'N/A'}. Reference: ${orderId}. Confirm payment on <a href="${waConfirmationLink}" target="_blank" rel="noopener noreferrer">${waNumDisp}</a>.</p>`;
            } else if (paymentMethod === "ip") {
                emailBody += `<p>InstaPay: Pay ${totalAmount} EGP to ${payDetails.instapay_ipn || 'N/A'}. Reference: ${orderId}. Confirm payment on <a href="${waConfirmationLink}" target="_blank" rel="noopener noreferrer">${waNumDisp}</a>.</p>`;
            } else if (paymentMethod === "revolut") {
                emailBody += `<p>Revolut: Pay ${totalAmount} EGP to ${payDetails.revolut_details || 'N/A'}. Reference: ${orderId}. Confirm payment on <a href="${waConfirmationLink}" target="_blank" rel="noopener noreferrer">${waNumDisp}</a>.</p>`;
            } else if (paymentMethod === "monzo") {
                emailBody += `<p>Monzo: Pay ${totalAmount} EGP to ${payDetails.monzo_details || 'N/A'}. Reference: ${orderId}. Confirm payment on <a href="${waConfirmationLink}" target="_blank" rel="noopener noreferrer">${waNumDisp}</a>.</p>`;
            } else if (paymentMethod === "bank_transfer") {
                emailBody += `<p>Bank Transfer ${totalAmount} EGP to:</p><ul>
                    <li>Bank: ${payDetails.bank_name || 'N/A'}</li>
                    <li>Account Name: ${payDetails.bank_account_name || 'N/A'}</li>
                    <li>Account Number: ${payDetails.bank_account_number || 'N/A'}</li>
                    ${payDetails.bank_iban ? `<li>IBAN: ${payDetails.bank_iban}</li>` : ''}
                    ${payDetails.bank_swift ? `<li>SWIFT: ${payDetails.bank_swift}</li>` : ''}
                </ul><p>Crucial: Reference Order ID: ${orderId}. Confirm payment on <a href="${waConfirmationLink}" target="_blank" rel="noopener noreferrer">${waNumDisp}</a>.</p>`;
            }

            if (record.getString("delivery_option") === "home_delivery" && record.getString("delivery_address")) {
                emailBody += `<h2>Delivery Details:</h2><p>${record.getString("delivery_address")}, ${record.getString("delivery_area_name_en") || record.getString("delivery_city_id") || ''}. Preferred Time: ${record.getString("delivery_time_slot") || 'N/A'}</p>`;
            }
             if (appSettings?.getString("slaughter_location_gmaps_url")) {
                let hasUdheyaStandardService = lineItems.some(item => item.product_category === 'udheya' && item.udheya_details?.serviceOption === 'standard_service');
                if (hasUdheyaStandardService) {
                    emailBody += `<p>Our slaughter facility location (relevant for viewing inquiries): <a href="${appSettings.getString("slaughter_location_gmaps_url")}" target="_blank" rel="noopener noreferrer">View Map</a></p>`;
                }
            }
            emailBody += `<p>Thank you,<br/>The Sheep Land Team</p>`;
            message.setHtml(emailBody);
            $app.mails.send(message);
            console.log(`[OrderHook-AfterCreate] Confirmation email initiated for order ${record.getString("order_id_text")} to ${customerEmail}.`);
        } catch (err) {
            console.error(`[OrderHook-AfterCreate] FAILED to send confirmation email for order ${record.getString("order_id_text")} to ${customerEmail}: ${err}`);
        }
    } else if (customerEmail && !($app && typeof $app.newMailMessage === 'function')) {
        console.warn(`[OrderHook-AfterCreate] Email for ${record.getString("order_id_text")} not sent: SMTP not configured or mail functions unavailable.`);
    } else if (!customerEmail) {
        console.warn(`[OrderHook-AfterCreate] Email for ${record.getString("order_id_text")} not sent: No customer email provided.`);
    }
});


registerHook("orders", "beforeUpdate", (e) => {
    const record = e.record; 
    const dao = $app.dao();
    let originalRecord;
    try {
        originalRecord = dao.findRecordById("orders", record.id);
    } catch (err) { 
        console.warn(`[OrderHook-BeforeUpdate] Could not find original record ${record.id}. Error: ${err}`);
        return; 
    }

    const oldStatus = originalRecord.getString("order_status") || "";
    const newStatus = record.getString("order_status");
    const paymentStatus = record.getString("payment_status"); 
    
    if ((newStatus === "cancelled_by_user" || newStatus === "cancelled_by_admin") && oldStatus !== newStatus) {
        const cancellableStates = ["pending_confirmation", "confirmed_pending_payment", "awaiting_payment_gateway", "payment_confirmed_processing"];
        let shouldRestock = true;

        if (paymentStatus === "paid_confirmed" || paymentStatus.startsWith("cod_confirmed")) { 
            if (oldStatus === "fulfilled_completed" || oldStatus === "out_for_delivery" || oldStatus === "ready_for_fulfillment") {
                 shouldRestock = false; 
            }
        }
        
        if (cancellableStates.includes(oldStatus) && shouldRestock) {
            const lineItems = record.get("line_items") || []; 
            let stockUpdateNotes = "";

            for (const lineItem of lineItems) {
                const productID = lineItem.item_key_pb; 
                const quantityToRestock = lineItem.quantity;

                if (productID && quantityToRestock > 0) {
                    try {
                        const product = dao.findRecordById("products", productID);
                        const currentStock = product.getInt("stock_available_pb");
                        product.set("stock_available_pb", currentStock + quantityToRestock);
                        dao.saveRecord(product);
                        stockUpdateNotes += `Restocked ${quantityToRestock} of ${product.getString("variant_name_en") || lineItem.name_en}. `;
                    } catch (err) {
                         console.error(`[OrderHook-BeforeUpdate] FAILED to restock product ${productID} (qty: ${quantityToRestock}) for cancelled order ${record.id}: ${err}`);
                         stockUpdateNotes += `STOCK INCREMENT FAILED for product ${productID} (qty: ${quantityToRestock}). Error: ${err.message}. `;
                    }
                }
            }
            record.set("admin_notes", (record.getString("admin_notes") || "" + `\nOrder Cancellation: ${stockUpdateNotes}`).trim());
        } else {
            record.set("admin_notes", (record.getString("admin_notes") || "" + `\nOrder cancelled (old status: ${oldStatus}, payment: ${paymentStatus}). Stock not auto-incremented. Manual check may be needed.`).trim());
        }
    }
});
===== .gitignore =====
# Node modules
node_modules/

# Production build output
dist/

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Dependency directories
.pnp/
.pnp.js

# Vite cache
.vite/

# Optional npm cache
.npm/

# Environment variables
.env
.env.local
.env.*.local

# Editor directories and files
.vscode/
.idea/
.DS_Store

# OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini

# Optional coverage directory
coverage/

